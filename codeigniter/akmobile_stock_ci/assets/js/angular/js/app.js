(function() {
	//-->Global Variable
	var GlobalItemUnique = {};
	var svc = {};
	var DiscountVal = {};
	var numbers;
	var GlobalCustomer = null;
	var GlobalCustomerName = null;
	var SelZipcode, SelCity, SelState, SelIsland, SelCountry = null;
	var dataAdapter;
	var newCustomerCreated = null;
	var editCustomerSelected = null;
	var TempItem = [];
	var TempAddItem = [];
	var TempItemReference = [];
	var TableID = '';
	var Qquestion = 0;
	
	$('#passcode').attr('autocomplete', 'off');
	
	angular.module("akamaiposApp", ['ngRoute', 'jqwidgets', 'ngSanitize', 'ngPayments'])
	.service('svc',function(){})
	.controller("akamaiposController",['$scope', '$http', 'svc', '$routeParams', '$q', 'posData', '$window', '$filter', '$compile', '$payments', '$rootScope',  function ($scope, $http, svc, $routeParams, $q, posData, $window, $filter, $compile, $payments, $rootScope) {
	angular.expandAkamaiposController($scope, $http, svc, $routeParams, $q, posData, $window, $filter, $compile, $payments, $rootScope)
	angular.QuickTableAkamaiposController($scope, $http, $routeParams, $q, posData, $window, $filter, $compile, $rootScope)	
		var dialog;
		var dialogreceiptnote;
		var dialogitemnote;
		var dialogsearchinventory;
		var Quedialog;
		var Alertdialog;
		var PasscodeDialog;
		var AlertProcessdialog;
		var NewSaleQuedialog;
		var PriceLeveldialog;
		var AllPriceLeveldialog;
		var dialogQuantityChangeForm;
		var dialogDiscountItemForm;
		var dialogDiscountReceiptForm;
		var dialogCustomerForm;
		var dialogquestion;
		var KeyPadDialog;
		var KeyPadPasswordDialog;
		var AlertYesNodialog;
		var Keyboarddialog;
		var KitchenNumPadDialog;
		var GridRowHeight = parseInt($("#GridRowHeight").val());
		var POSPaymentNumpad = $("#POSPaymentNumpad").val();
		var GridTheme = $("#GridTheme").val();
		var ShowFilterRow = $("#ShowFilterRow").val();
		var GridScrollBarSize = parseInt($("#GridScrollBarSize").val());
		var ItemInfoDescription = '';

		var localStorageSpace = function(){
			var allStrings = '';
			for(var key in window.localStorage){
				if(window.localStorage.hasOwnProperty(key)){
					allStrings += window.localStorage[key];
				}
			}
			return allStrings ? 3 + ((allStrings.length*16)/(8*1024)) + ' KB' : 'Empty (0 KB)';
		};	
		
		$scope.ItemSearch = null;

		$scope.EditCustomerSaveDisabled = true;
		$scope.AddCustomerSaveDisabled = true;
		$scope.EditCustomerDefaultButtons = true;
		$scope.EditCustomerWhenCloseSaveChanges = false;
		$scope.EditCustomerWhenDelete = false;
		$scope.EditCustomerWhenClose = '';
		$scope.BtnCheckPrintWhen = true;


		$("#barcode_search").focus();
		//Customer Part
		setTimeout(function(){
			$("#customer-list").on('keydown', function(event){
				if(event.keyCode == 8 || event.keyCode == 46){
					$("#customer-list").jqxComboBox('clearSelection');
					GlobalCustomer = null;
				}
			})
		}, 100);
		
		$scope.CustomerEditWhen = true;
		$scope.CustomerOkWhen = true;
		//Customer End
		
		$scope.customer = {
			selected: 'GUEST'
		}
		
		$scope.BtnItemsWhen = false; //Added: 01/08/2016 Note: remove this when working the item buttons.

		$scope.dateInputFromstring = 'MM/dd/yyyy';
		$scope.dateInputTostring = 'MM/dd/yyyy';

		$scope.dateInputSettingsFrom = {
			width: 105,
			height: 30
		}

		$scope.dateInputSettingsTo = {
			width: 105,
			height: 30
		}

		$scope.date = {
			from: $filter('date')(new Date(), 'MM/dd/yyyy'),
			to: $filter('date')(new Date(), 'MM/dd/yyyy')
		}

		$scope.StationselectedValue = '';
		$scope.CashInselectedValue = '';
		$scope.StatStationName = '';
		$scope.StatCashIn = '';

		$scope.gridSettingsCashWhen = false;
		$scope.gridSettingsCreditCardWhen = false;
		$scope.gridSettingsOnHoldWhen = false;
		$scope.gridSettingsWhen = false;

		$scope.gridSettingsOnHold = {}
		$scope.gridSettings = {}
		$scope.gridSettingsCash = {}
		$scope.gridSettingsCreditCard ={}

		$scope.StationcomboBoxSettings = {
			source: '', itemHeight: 25, height: 25, width: 80,
		}
		$scope.CashIncomboBoxSettings = {
			source: '', itemHeight: 25, height: 25, width: 120,
		};

		$scope.gridSettingsCashWhen = false;
		$scope.gridSettingsCreditCardWhen = false;
		$scope.gridSettingsOnHoldWhen = true;
		$scope.gridSettingsWhen = false;
		$scope.tabsSettings = {};
		$scope.thetabsadd = 'darkblue';
		$scope.selectedItem = 0;
		//$scope.selectedValue = "";

		$scope.searchItemwidth = "98%";

		$scope.drawer = {
			passcode: ''
		};

		/*Light Plugin Create*/
		/*@Alert*/
		/*
		@param string form_name
		@param string msg
		*/
		var populateNumpadAlert = function(form_name, msg){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-alert").append('<div id="alert-msg-popup" style="background: #144766; color:#EEE;"></div>');
				$("#alert-msg-popup").html('');
				$("#alert-msg-popup").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="number_field" class="hdfield" value="1" style="display:none;" />'+
					'<h4>'+msg+'</h4>'+
					'<br/>'+
					'<div id="keyboard"></div>'+
					'<input type="hidden" id="use_value" />'+
					'<input type="hidden" id="use_value2"/>'+
				'</form>');
				def.resolve();
			},100);
			return def.promise();
		}
		/*Window Alert Properties*/
		
		var populateNumpadItemSubMenu = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("body").append(
					'<div id="dialog-numpad-sub-menu">'+
						'<div id="QuestionView" style="background: #144766; color:#EEE; overflow:hidden;"></div>'+
					'</div>'
				);
				def.resolve();
			},100);
			return def.promise();
		}
		
		/*
		@param string header_text
		*/
		/*Popup Alert*/
		var WindowPopupAlert = function(header_text){
			var def = $.Deferred();
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#dialog-numpad-alert").jqxWindow({
				height: 245,
				minWidth: 350,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }	
			});
			setTimeout(function(){
				$('#dialog-numpad-alert').jqxWindow('setTitle', header_text);
				$('#dialog-numpad-alert').jqxWindow('open');
				$("#dialog-numpad-alert").on('close', function(){
					$("#alert-msg-popup").remove();	
					$("#barcode_search").attr("disabled", false);
					$("#barcode_search").focus();
				})
				$(".alert_okay").focus();
				def.resolve();	
			},100);
			return def.promise();
		}
		
		/*Popup Alert Yes or No*/
		var WindowPopupAlertYesNo = function(header_text){
			var def = $.Deferred();
			setTimeout(function(){
				var OrderListWidth = ($(".orderedlist").width() + 3);
				$("#dialog-numpad-alert").jqxWindow({
					height: 265,
					minWidth: 350,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					draggable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					position: { x: OrderListWidth, y: 50 }
				});
				$('#dialog-numpad-alert').jqxWindow('setTitle', header_text);
				setTimeout(function(){
					$('#dialog-numpad-alert').jqxWindow('open');
					$('#dialog-numpad-alert').jqxWindow('focus');
				},200);
				def.resolve();	
			},100);
			return def.promise();
		}
		
		/*Popup Sub Menu*/
		var WindowPopupSubMenu = function(header_text, form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-sub-menu").jqxWindow({
					minHeight: '100%',
					minWidth: '100%',
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					draggable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				setTimeout(function(){
					$('#dialog-numpad-sub-menu').jqxWindow('setTitle', header_text);
					$('#dialog-numpad-sub-menu').jqxWindow('open');

					$("#dialog-numpad-sub-menu").on('close', function(event){
						Qquestion = 0;
						TempAddItem = [];
						TempAddItemCompare = [];
						TempItemReference = [];
						TempAddItemList = [];
						TempItemListRef = [];
						CatArray = [];
						$("#dialog-numpad-sub-menu").remove();
					})
					
					def.resolve();	
				},100);
			})
			return def.promise();
		}
		
		/*Popup Keyboard*/
		var populateNumpadKeyboard = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-keyboard").append('<div id="custom_item_keyboard" style="background: #144766; color:#EEE;"></div>');
				$("#custom_item_keyboard").html('');
				if(form_name == 'receipt_note_form' || form_name == 'receipt_note_form_required' || form_name == 'receipt_note_form_onhold' || form_name == 'receipt_note_form_onholdsale' || form_name == 'receipt_note_form_onhold_logo'){
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter Receipt Note</h4>'+
					'');
				}else if (form_name == 'item_note_form'){
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter Item Note</h4>'+
					'');
				}else if(form_name == 'kitchen_note_form'){
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter Kitchen Note</h4>'+
					'');
				}else if(form_name == 'enter_search2'){
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter Customer Name</h4>'+
					'');
				}else if(form_name == 'enter_firstname'){
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter First Name</h4>'+
					'');
				}else if(form_name == 'enter_emailto' || form_name == 'enter_emailbcc' || form_name == 'enter_emailcc'){
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter Email</h4>'+
					'');
				}else{
					$("#custom_item_keyboard").append(''+
					'<h4 style="text-align:center;">Enter Item Description</h4>'+
					'');
				}
				KeyboardInputLimit = 1000;
				$("#custom_item_keyboard").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="search_field" maxlength="'+KeyboardInputLimit+'" style="color:#000;">'+
					'<div id="keyboard"></div>'+
					'<input type="hidden" id="note_receipt_header_unique" />'+
				'</form>');
				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupKeyboard = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-keyboard").jqxWindow({
					height: 480,
					minWidth: '80%',
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				$('#dialog-numpad-keyboard').jqxWindow('setTitle', header_title);
				$('#dialog-numpad-keyboard').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadKeyboard = function(form_name){
			var def = $.Deferred();
			populateNumpadKeyboard(form_name)
			.then(function(){
				$('#keyboard').jkeyboard({
				  layout: "english",
				  input: $('#search_field')
				});
				def.resolve();
			});
			return def.promise();
		}

		/*End Keyboard*/
		
		/*EBT Balance Inquiry*/
		var WindowPopupBalanceInquiry = function(){
			var def = $.Deferred();
			setTimeout(function(){
				$("#diloag-balance-inquiry").jqxWindow({
					height: 150,
					width: 250,
					title: 'EBT Balance Inquiry',
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				$("#diloag-balance-inquiry").jqxWindow('open');
			},100);
			return def.promise();
		}

		/*Popup Quantity*/
		var populateNumpadQuantity = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-quantity").append('<div id="quantity_numpad" style="background: #144766; color:#EEE;"></div>');
				$("#quantity_numpad").html('');
				$("#quantity_numpad").append('<h4 id="NumpadQuantityTitle" style="text-align:center;">Enter New Quantity</h4>');
				$("#quantity_numpad").append(
					'<form id="'+form_name+'">'+
						//'<input type="text" id="quantity_field" class="hdfield" maxlength="'+QuantityInputLimit+'" style="color:#000;">'+
						'<div id="quantity_field" class="hdfield"></div>'+
						'<div id="keyboard_quantity"></div>'+
					'</form>'
				);
				$("#quantity_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsQuantity").val() });
				$('#quantity_field').on('change', function (event) 
				{
					var value = event.args.value;
					var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
					myNumber = value;
				}); 

				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupQuantity = function(){
			var def = $.Deferred();
			setTimeout(function(){
				var ParentWidth = $("#wrapper").width();
				var ComputeWidth = (ParentWidth / 2);
				var UseWidth = (ComputeWidth);
				var OrderListWidth = ($(".orderedlist").width() + 3);
				$("#dialog-numpad-quantity").jqxWindow({
					title: "Quantity Change ",
					isModal: true,
					theme: 'darkblue',
					draggable: false,
					resizable: false,
					showCloseButton: true,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
				});

				$('#dialog-numpad-quantity').jqxWindow('setTitle', 'Quantity Change '+ItemInfoDescription);

				if(OrderListWidth < 350){
					$("#dialog-numpad-quantity").jqxWindow({
						position: { x: OrderListWidth, y: 50 }
					})
				}

				$('#dialog-numpad-quantity').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}

		var NumpadQuantity = function(form_name = false){
			var def = $.Deferred();
			if(form_name == false){
				form_name = 'quantity_form';
			}
			populateNumpadQuantity(form_name)
			.then(function(){
				$('#keyboard_quantity').numeric_numpad({
				  layout: "numeric",
				  input: $('#quantity_field')
				});
				def.resolve();
			});
			return def.promise();
		}
		/*End Quantity*/
		
		/*Alert Setup*/
		/*
		@param string form
		@param string msg
		*/
		var populateNumpadAlertYesNo = function(form_name, msg){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-alert").append('<div id="alert-msg-popup" style="background: #144766; color:#EEE;"></div>');
				$("#alert-msg-popup").html('');
				$("#alert-msg-popup").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="number_field" class="hdfield" value="1" style="display:none;" />'+
					'<h4>'+msg+'</h4>'+
					'<br/>'+
					'<div id="keyboard_alertyesno"></div>'+
					'<input type="hidden" id="use_value" />'+
					'<input type="hidden" id="use_value2"/>'+
				'</form>');
				def.resolve();
			},100);
			return def.promise();
		}
		var NumpadAlertYesNo = function(form, msg){
			var def = $.Deferred();
			populateNumpadAlertYesNo(form, msg)
			.then(function(){
				$('#keyboard_alertyesno').hdkeyboard({
				  layout: "alert_yes_no",
				  input: $('#number_field')
				});
				def.resolve();
			});
			return def.promise();
		}

		var populateNumpadAlertYesOnly = function(form_name, msg){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-alert").append('<div id="alert-msg-popup" style="background: #144766; color:#EEE;"></div>');
				$("#alert-msg-popup").html('');
				$("#alert-msg-popup").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="number_field" class="hdfield" value="1" style="display:none;" />'+
					'<h4>'+msg+'</h4>'+
					'<br/>'+
					'<div id="keyboard_alertyesonly"></div>'+
					'<input type="hidden" id="use_value" />'+
					'<input type="hidden" id="use_value2"/>'+
				'</form>');
				def.resolve();
			},500);
			return def.promise();
		}

		var NumpadAlertYesOnly = function(form, msg){
			var def = $.Deferred();
			populateNumpadAlertYesOnly(form, msg)
			.then(function(){
				$('#keyboard_alertyesonly').hdkeyboard({
				  layout: "alert_yes_ok",
				  input: $('#number_field')
				});
				def.resolve();
			});
			return def.promise();
		}
		
		var populateNumpadAlertClose = function(form_name, msg){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-alert").append('<div id="alert-msg-popup" style="background: #144766; color:#EEE;"></div>');
				$("#alert-msg-popup").html('');
				$("#alert-msg-popup").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="number_field" class="hdfield" value="1" style="display:none;" />'+
					'<h4>'+msg+'</h4>'+
					'<br/>'+
					'<div id="keyboard_alertclose"></div>'+
					'<input type="hidden" id="use_value" />'+
					'<input type="hidden" id="use_value2"/>'+
				'</form>');
				def.resolve();
			},500);
			return def.promise();
		}
		var NumpadAlertClose = function(form, msg){
			var def = $.Deferred();
			populateNumpadAlertClose(form, msg)
			.then(function(){
				$('#keyboard_alertclose').hdkeyboard({
				  layout: "alert_close",
				  input: $('#number_field')
				});
				def.resolve();
			});
			return def.promise();
		}
		
		var populateNumpadAlertOK = function(form_name, msg){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-alert").append('<div id="alert-msg-popup" style="background: #144766; color:#EEE;"></div>');
				$("#alert-msg-popup").html('');
				$("#alert-msg-popup").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="number_field" class="hdfield" value="1" style="display:none;" />'+
					'<h4>'+msg+'</h4>'+
					'<br/>'+
					'<div id="keyboard_alertok"></div>'+
					'<input type="hidden" id="use_value" />'+
					'<input type="hidden" id="use_value2"/>'+
				'</form>');
				def.resolve();
			},100);
			return def.promise();
		}

		var NumpadAlertOk = function(form, msg){
			var def = $.Deferred();
			populateNumpadAlertOK(form, msg)
			.then(function(){
				$('#keyboard_alertok').hdkeyboard({
				  layout: "alert_ok",
				  input: $('#number_field')
				});
				def.resolve();
			});
			return def.promise();
		}
		
		var populateNumpadAlertOkPrintProblem = function(form_name, msg){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-alert").append('<div id="alert-msg-popup" style="background: #144766; color:#EEE;"></div>');
				$("#alert-msg-popup").html('');
				$("#alert-msg-popup").append(
					'<form id="'+form_name+'">'+
						'<input type="text" id="number_field" class="hdfield" value="1" style="display:none;" />'+
						'<h4>'+msg+'</h4>'+
						'<br/>'+
						'<div id="keyboard_alertprint_problem"></div>'+
						'<input type="hidden" id="use_value" />'+
						'<input type="hidden" id="use_value2"/>'+
					'</form>'
				);
				def.resolve();
			},100);
			return def.promise();
		}
		var NumpadAlertOkPrinterProblem = function(form, msg){
			var def = $.Deferred();
			populateNumpadAlertOkPrintProblem(form, msg)
			.then(function(){
				$('#keyboard_alertprint_problem').hdkeyboard({
				  layout: "alert_ok_submit",
				  input: $('#number_field')
				});
				def.resolve();
			});
			return def.promise();
		}
		
		var NumpadItemSubMenu = function(form){
			var def = $.Deferred();
			populateNumpadItemSubMenu(form)
			.then(function(){
				/*
				$('#keyboard').hdkeyboard({
				  layout: "alert_close",
				  input: $('#number_field')
				});
				*/
				def.resolve();
			});
			return def.promise();
		}
		
		$scope.ParseCardInfo = function(){
		 	var CreditCardInfo = $(".cardinfos").val();
			$("#gcbalprint").hide(); 
		 	ParseParserObj();
	    };
		
		var cardvalidate  = function(newValue, oldValue) {
			var card, length, upperLength, ccVerified;
			upperLength = 16;
			ccVerified = false;
			if(newValue) {
				card = $payments.cardFromNumber(newValue);
				//if(card && card.type) { $scope.creditCard.type = card.type; }
				if (card) {
					upperLength = card.length[card.length.length - 1];
				}
				length = newValue.replace(/\D/g, '').length;
				if(length == upperLength) {
					ccVerified = $("#gift_card_number").val().valid = $payments.luhnCheck(newValue.replace(/\D/g, ''));
				}
				if(ccVerified && length != upperLength) {
					ccVerified = ("#gift_card_number").val().valid = false;
				}
			}
		};
		
		var cc_format = function(value) {
			var v = value.replace(/\s+/g, '').replace(/[^0-9]/gi, '');
			var matches = v.match(/\d{4,16}/g);
			var match = matches && matches[0] || '';
			var parts = [];
			for (i=0, len=match.length; i<len; i+=4) {
			  parts.push(match.substring(i, i+4))
			}
			if (parts.length) {
			  return parts.join(' ')
			} else {
			  return value
			}
  		};

  		var GetCardType = function(number) {
			// visa
			var re = new RegExp("^4");
			if (number.match(re) != null)
			  return "Visa";
		
			// Mastercard
			re = new RegExp("^5[1-5]");
			if (number.match(re) != null)
			  return "Mastercard";
		
			// AMEX
			re = new RegExp("^3[47]");
			if (number.match(re) != null)
			  return "AMEX";
		
			// Discover
			re = new RegExp("^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)");
			if (number.match(re) != null)
			  return "Discover";
		
			// Diners
			re = new RegExp("^36");
			if (number.match(re) != null)
			  return "Diners";
		
			// Diners - Carte Blanche
			re = new RegExp("^30[0-5]");
			if (number.match(re) != null)
			  return "Diners - Carte Blanche";
		
			// JCB
			re = new RegExp("^35(2[89]|[3-8][0-9])");
			if (number.match(re) != null)
			  return "JCB";
		
			// Visa Electron
			re = new RegExp("^(4026|417500|4508|4844|491(3|7))");
			if (number.match(re) != null)
			  return "Visa Electron";
		
			return "";
	  	};
		
		$scope.verified = function () {
			return $payments.verified();
		};
		
		var GiftCardBalance = function(card){
			var def = $.Deferred();
			var postdata="giftcard="+card;
			posData.GiftCardBalancePOSMain(postdata)
			.success(function(data){
				if(data.success == true){
					$("#gift_card_balance").text("Balance "+data.Balance);
					$("#akgcbalance").val(data.Balance);
					$("#gcbalprint").show();
				}else if(data.success == false){
					$("#gift_card_balance").text('Balance 0.00');
					$("#akgcbalance").val(0.00);
					$("#gcbalprint").hide();
				}
				def.resolve(data.Balance);
			})
			return def.promise();
		}

		function getNumbers(inputString){
			var obj = inputString.split(";");
			var regex=/\d+\.\d+|\.\d+|\d+/g, 
				results = [],
				n;
		
			while(n = regex.exec(obj[1])) {
				results.push(parseFloat(n[0]));
			}
		
			return results;
		}
		
		var ParseParserObj = function(){
			if($("#gift_card_number").val() != ''){
				var cardVal = document.getElementById('gift_card_number').value;
				var p = new SwipeParserObj( document.getElementById('gift_card_number').value );
				if( p.hasTrack1 ){
					p.account_name;
					p.surname;
					p.firstname;
					p.account;
					p.exp_month + "/" + p.exp_year;
					var account = p.account;
					if(p.account == null){
						var parserCard = getNumbers(cardVal);
						account = parserCard;
						$("#gift_card_number").val(account);
						$("#gift_card_balance").text('Processing please wait...');
						GiftCardBalance(account);
					}else{
						var convert_card = cc_format(account);
						var cardtype = GetCardType(account);
						$("#gift_card_number").val(account);
						$("#gift_card_balance").text('Processing please wait...');
						GiftCardBalance(account);
						cardvalidate(account,"");
					}
				}else if( p.hasTrack2){
					p.account_name;
					p.surname;
					p.firstname;
					p.account;
					p.exp_month + "/" + p.exp_year;
					
					if(p.account == null){
						var parserCard = getNumbers(cardVal);
						account = parserCard;
						$("#gift_card_number").val(account);
						$("#gift_card_balance").text('Processing please wait...');
						GiftCardBalance(account);
					}else{
						var convert_card = cc_format(account);
						var cardtype = GetCardType(account);
						$("#gift_card_number").val(account);
						$("#gift_card_balance").text('Processing please wait...');
						GiftCardBalance(account);
						cardvalidate(account,"");
					}
				}else{
					var giftcard = document.getElementById('gift_card_number').value;
					//var parse_giftcard = giftcard.replace(/[?=;]/g, "");
					$("#gift_card_number").val(giftcard);
					$("#gift_card_balance").text('Processing please wait...');
					GiftCardBalance(giftcard);
				}
			}else{
				var msg = "Please swipe or type Gift Card Number";
				NumpadAlertClose ('gift_card_number_required', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
				});	
			}
		}

		var KeyPress = function(e){
			var evtobj = window.event? event : e;
      		if (evtobj.keyCode == 66 && evtobj.ctrlKey){ 
				$("#barcode_search").focus();
				InventoryScan = true;
			}
			document.onkeydown = KeyPress;  	
		}
		
		var populateGiftCardForm = function(form_name, ItemUnique, Price){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-gift-card").append('<div class="main_gc_container" style="background: #144766; color:#EEE;"></div>');
				$(".main_gc_container").html('');
				$(".main_gc_container").append($compile(''+
				'<script type="text/javascript">'+
					'function KeyPress(a) {'+
						'var evtobj = window.event? event : a;'+
						'if (evtobj.keyCode == 66 && evtobj.ctrlKey) $("#gift_card_number").focus()'+
					'}'+
					'document.onkeydown = KeyPress;'+
				'</script>'+
				'<form id="'+form_name+'">'+
					'<div class="gc_container" style="float:left;">'+
						'<h3 align="center" style="font-weight:bolder;">Sell Gift Card</h3>'+	
						'<div class="sel_amount">'+
							'<div style="float:left; width:110px;">'+
								'<div style="position:relative; width: 90px; height: 200px;">'+
									'<div style="border: 3px solid #ffffff; position: absolute; width: 95px; height: 90px; left: 10px ;  top:70px;">'+
										'<button style="height:85px; width: 90px; font-weight: bold; font-size: 15px; color: #000;" disabled="disabled">Gift Card<br/>Amount</button>'+
									'</div>'+
								'</div>'+
							'</div>'+
							'<div style="float: left; width:340px; padding-bottom:5px;">'+
								'<div style="float:left; width:270px; padding:5px;" align="right"><h5 style="font-weight:bold;">Select Amount</h5></div>'+
								'<div style="float:left; width:125px; padding:5px;"><button type="button" id="gift_card_manual_enter_amount"  class="btn-enter-amount-gc">Enter Amount</button></div>'+
								'<div style="float:left; width:155px; padding-top:20px;" align="right"><span class="gift_card_amt" id="gift_card_amount">'+parseFloat(Price).toFixed(2)+'</span></div>'+
								'<div style="float:left; witdh:100%; padding-top:5px; padding-bottom:5px;">'+
									'<button type="button" class="btn-sel-amount-gc">10</button>'+
									'<button type="button" class="btn-sel-amount-gc">20</button>'+
									'<button type="button" class="btn-sel-amount-gc">25</button>'+
									'<button type="button" class="btn-sel-amount-gc">50</button>'+
									'<button type="button" class="btn-sel-amount-gc">100</button>'+
								'</div>'+
							'</div>'+
						'</div>'+
					'</div>'+
					'</br>'+
					'<div class="sel_amount" style="float:left;">'+
						'<div style="float:left; width:110px;">'+
							'<div style="position:relative; width: 90px; height: 130px;">'+
								'<div style="border: 3px solid #ffffff; position: absolute; width: 95px; height: 90px; left: 10px ; top:15px;">'+
									'<button type="button" style="height:85px; width: 90px; font-size: 15px; color: #000; font-weight: bold" disabled="disabled">Gift Card<br/>Number</button>'+
								'</div>'+
							'</div>'+
						'</div>'+
						'<div style="float: left; width:320px; padding-top:10px;">'+
							'<input type="text" class="form-control cardinfos" id="gift_card_number" ng-enter="ParseCardInfo()" ng-model="card.ccinfo">'+
							'<div style="float:left; width:138px; padding:5px;"><button type="button" class="btn-enter-amount-gc manual-giftcard">Manual Enter</button></div>'+
							'<div style="float:left; font-size: 24px;">OR</div>'+
							'<div style="float:left; width:125px; font-size:24px; color:#000000; padding:5px;"><button type="button" id="swipe_card" class="btn-swipe-gc">Swipe Card</button></div>'+
						'</div>'+
					'</div>'+
					'<div class="sel_amount" style="float:left;">'+
						'<div style="float:left; width:110px;">'+
							'<div style="position:relative; width: 90px; height: 130px;">'+
								'<div style="border: 3px solid #ffffff; position: absolute; width: 95px; height: 90px; left: 10px ; top:15px;">'+
									'<button type="button" style="height:85px; width: 90px; font-size: 15px; color: #000; font-weight: bold" disabled="disabled">Current<br/>Balance</button>'+
								'</div>'+
							'</div>'+
						'</div>'+
						'<div style="float: left; width:320px; padding-top:30px;">'+
							'<div style="float:left; width:320px; padding-top:20px;" align="left"><span class="gift_card_bal" id="gift_card_balance">Please swipe the Gift Card.</span><button class="btn btn-warning btn-lg" id="gcbalprint" style="display:none;">Print</button></div>'+
						'</div>'+
					'</div>'+
					'<input type="text" id="gift_card_field" class="hdfield" value="'+ItemUnique+'" style="display:none;"/>'+
					'<div style="float:left; width: 450px;" id="functions" align="right"></div>'+
					'<input type="hidden" id="akgcbalance" />'+
				'</form>'+
				'')($scope));
				def.resolve();
			},100);
			return def.promise();
		}
		
		/*Gift Card Window popup*/
		var WindowPopupGiftCardForm = function(header_text){
			var def = $.Deferred();
			var OrderListWidth = ($(".orderedlist").width() + 3);
			setTimeout(function(){
				$("#dialog-gift-card").jqxWindow({
					height: 700,
					width: 480,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					draggable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					position: { x: OrderListWidth, y: 50 }	
				});
				$('#dialog-gift-card').jqxWindow('setTitle', header_text);
				$('#dialog-gift-card').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var GiftCardForm = function(form, ItemUnique, Price){
			var def = $.Deferred();
			populateGiftCardForm(form, ItemUnique, Price)
			.then(function(){
				$('#functions').hdgiftcard({
				  layout: "giftcard_function",
				  input: $("#gift_card_field")
				});
				def.resolve();
			});
			return def.promise();
		}
		
		//-->Gift Card Enter Amount Window Popup
		var populateNumpadPriceGC = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-gift-price").append('<div id="price_numpad_gc" style="background: #144766; color:#EEE;"></div>');
				$("#price_numpad_gc").html('');
				$("#price_numpad_gc").append(''+
				'<h4 style="text-align:center;">Enter Amount</h4>');
				$("#price_numpad_gc").append(''+
				'<form id="'+form_name+'">'+
					//'<input type="text" id="number_field" class="hdfield" maxlength="'+NumpadPriceInputLimit+'" style="color:#000">'+
					'<div id="gc_enter_amount" class="hdfield"></div>'+
					'<div id="gc_sell_keyboard"></div>'+
				'</form>');
				$("#gc_enter_amount").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val()})
				$('#gc_enter_amount').on('change', function (event) 
				{
					var value = event.args.value;
					var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
					myNumber = value;
				}); 
				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupPriceGC = function(header_title){
			var def = $.Deferred();
			var OrderListWidth = ($(".orderedlist").width() + 3);
			setTimeout(function(){
				$("#dialog-numpad-gift-price").jqxWindow({
					/*
					height: 490,
					width: 300,
					*/
					title: header_title,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					position: { x: OrderListWidth, y: 50 }	
				});
				$('#dialog-numpad-gift-price').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadPriceGC = function(form_name){
			var def = $.Deferred();
			populateNumpadPriceGC(form_name)
			.then(function(){
				$('#gc_sell_keyboard').numeric_numpad({
				  layout: "numeric",
				  input: $('#gc_enter_amount')
				});
				def.resolve();
			});
			return def.promise();
		}
		
		var FormName = '';
		//--> Gift Card Manual Enter Card Window Popup
		var populateNumpadGiftCard = function(form_name){
			var def = $.Deferred();
			FormName = form_name
			setTimeout(function(){
				$("#dialog-numpad-gift-card").append('<div id="numpad_gc" style="background: #144766; color:#EEE;"></div>');
				$("#numpad_gc").html('');
				$("#numpad_gc").append(''+
				'<h4 style="text-align:center;">Enter Card Number</h4>');
				$("#numpad_gc").append($compile(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="card_field" class="hdfield" ng-enter="ParseCardInfo3()" style="color:#000">'+
					'<div id="keyboard_giftcard"></div>'+
				'</form>')($scope));
				def.resolve();
			},100);
			return def.promise(); 
		}
		
		var WindowPopupGiftCard = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-gift-card").jqxWindow({
					height: 490,
					width: 300,
					title: header_title,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				$('#dialog-numpad-gift-card').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadGiftCard = function(form_name){
			var def = $.Deferred();
			populateNumpadGiftCard(form_name)
			.then(function(){
				$('#keyboard_giftcard').hdkeyboard({
				  layout: "numbers_only",
				  input: $('#card_field')
				});
				setTimeout(function(){
					$("#card_field").focus();
					def.resolve();
				},100);
			});
			return def.promise();
		}
		
		/*
		var populateAllItemPriceLevel = function(){
			var def = $.Deferred();
			setTimeout(function(){
				$("#all_item_price_level").append('<div id="all_item_price" style="background: #144766; color:#EEE;"></div>');
				$("#all_item_price").html('');
				$("#all_item_price").append($compile(''+
				'<div class="container-fluid">'+
				'<div style="float: left;">'+
                    '<button class="btn btn-primary btn-lg itempricebutton" ng-click="all_item_price1(\'price1\')">Sell<br/>Price</button>'+
                '</div>'+
				'<div style="float: left;">'+
					'<button class="btn btn-info btn-lg itempricebutton" ng-click="all_item_price2(\'price2\')">Price2</button>'+
				'</div>'+
				'<div style="float: left;">'+
					'<button class="btn btn-success btn-lg itempricebutton" ng-click="all_item_price3(\'price3\')">Price3</button>'+
				'</div>'+
				'<div style="float: left;">'+
					'<button class="btn btn-warning btn-lg itempricebutton" ng-click="all_item_price4(\'price4\')">Price4</button>'+
				'</div>'+
				'<div style="float: left;">'+
					'<button class="btn btn-danger btn-lg itempricebutton" ng-click="all_item_price5(\'price5\')">Price5</button>'+
				'</div>'+
				'')($scope));
				def.resolve();
			},100);
			return def.promise();
		}
	
		
		var WindowPopupAllItemPriceLevel = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				$("#all_item_price_level").jqxWindow({
					width: 230, 
					height: 250,
					title: header_title,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				$('#all_item_price_level').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
	
		var NumpadAllItemPriceLevel = function(){
			var def = $.Deferred();
			populateAllItemPriceLevel()
			.then(function(){
				setTimeout(function(){
					def.resolve();
				},100);
			});
			return def.promise();
		}
		*/

		var WindowPopupAllItemPriceLevel = function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#all_item_price_level").jqxWindow({
				height: 330, 
				minWidth: 510,
				title: 'PRICE LEVEL ALL ITEMS',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#all_item_price_level').jqxWindow('open');
		}
		
		/* Dynamic Plugin Commands */
		$(document).on('click', '.exit', function(e){
			e.preventDefault();
			var elemPopup = $(this).closest('.jqx-window').attr('id');
			var elemRemove = $(this).closest('form').attr('id');
			$("#"+elemPopup).jqxWindow('close');
			$("#"+elemRemove).remove();
			temp_open_item = [];
			myNumber = '';
		});
		
		// $(document).on('click', '.alert_no', function(e){
		// 	e.preventDefault();
		// 	$("#barcode_search").attr("disabled", false);
		// 	$("#barcode_search").focus();
		// 	var elemPopup = $(this).closest('.jqx-window').attr('id');
		// 	var elemRemove = $(this).closest('form').attr('id');
		// 	$("#"+elemPopup).jqxWindow('close');
		// 	$("#"+elemRemove).remove();
		// 	$('#display-payments').unblock();
		// })
		
		$(document).on('click', '.alert_close', function(e){
			e.preventDefault();
			var elemPopup = $(this).closest('.jqx-window').attr('id');
			var elemRemove = $(this).closest('form').attr('id');
			$("#"+elemPopup).jqxWindow('close');
			$("#"+elemRemove).remove();
		})
		
		$(document).on('click', '.alert_okay', function(e){
			e.preventDefault();
			var elemPopup = $(this).closest('.jqx-window').attr('id');
			var elemRemove = $(this).closest('form').attr('id');
			$("#"+elemPopup).jqxWindow('close');
			$("#"+elemRemove).remove();
			$('#display-payments').unblock();
			setTimeout($.unblockUI, 100); 
		})
		
		// $(document).on('close', "#dialog-numpad-alert", function(event){
		// 	$("#alert-msg-popup").remove();	
		// 	$("#barcode_search").attr("disabled", false);
		// 	$("#barcode_search").focus();
		// })
		
		$(document).on('close', "#dialog-numpad-keyboard", function(event){
			$("#custom_item_keyboard").html('');
			$("#barcode_search").attr("disabled", false);
			$("#barcode_search").focus();
		})
		
		$(document).on('close',"#dialog-numpad-quantity", function(event){
			$("#quantity_numpad").html('');
			myNumber = '';
			myNumber = '';
			ItemInfoDescription = '';
		})
		
		$(document).on('close',"#dialog-numpad-passcode", function(event){
			$("#dialog-numpad-passcode").html('');
			$(".remove_item_multiple_fn").attr("disabled", false);
		})
		
		$(document).on('close',"#dialog-numpad-table", function(event){
			$("#dialog-numpad-table").html('');
		})
		
		$(document).on('close', "#dialog-numpad-all-price", function(event){
			$("#dialog-numpad-all-price").html('');
		})
		
		$(document).on('close',"#dialog-numpad-change-price", function(event){
			$("#dialog-numpad-change-price").html('');
			myNumber = '';
		})

		$(document).on('close', "#before_quantity_numpad", function(event){
			$("#quantity_before_container").html('');
		})

		$("#before_quantity_numpad").on('click', function(e){
			$("#before_quantity_numpad input").focus();
		})

		$("#dialog-numpad-quantity").on('click', function(e){
			$("#dialog-numpad-quantity input").focus();
		})

		$("#dialog-numpad-discount").on('click', function(e){
			$("#dialog-numpad-discount input").focus();
		})

		$("#dialog-numpad-passcode").on('click', function(e){
			$("#dialog-numpad-passcode input").focus();
		})

		$("#pos_price_change_reason").on('click', function(e){
			$("#pos_price_change_reason input").focus();
		})

		$("#dialog-numpad-tip").on('click', function(e){
			$("#dialog-numpad-tip input").focus();
		})

		$("#dialog-numpad-keyboard").on('click', function(e){
			$("#dialog-numpad-keyboard input").focus();
		})

		$("#table_manual_keyin").on('click', function(e){
			$("#table_manual_keyin input").focus();
		})
		
	
		$("#dialog-numpad-price").on('close', function(event){
			$("#price_numpad").html('');
		})

		$(document).on('click', '#SubMenuKeyboardItemPrice .exit', function(){
			if(TempAddItemList.length >= 0){
				TempAddItemList.splice(-1)[0];
				TempItemListRef.splice(-1)[0];
			}
		})

		$("#dialog-numpad-tip").on('close', function(event){
			event.preventDefault();
			$("#numpad_tip").html('');
			myNumber = '';
		})
		
		$("#dialog-numpad-discount").on('close', function(event){
			event.preventDefault();
			$("#discount_numpad").html('');
			myNumber = '';
		})
		
		$(document).on('close', "#dialog-numpad-gift-price", function(event){
			$("#price_numpad_gc").html('');
			myNumber = '';
		})
		
		$("#dialog-numpad-gift-card").on('close', function(event){
			$("#numpad_gc").html('');
			myNumber = '';
		})

		$("#on-hold-sale").on('close', function(){
			$("#on-hold-sale-container").html('');
			GlobalReceiptHeaderUnique = '';
			var OrderTypePopup = $("#POSOrderTypeRequired").val();
			if(OrderTypePopup){
				ordertype();
			}
			$("#barcode_search").focus();
		})
		
		$("#dialog-reason-list").on('close', function(event){
			$("#reason-list-container").html('');
			RemoveMultiItemArray = [];
		})

		$("#dialog-discount-list").on('close', function(event){
			$("#discount-list-container").html('');
		})

		$("#email_receipt_popup").on('close', function(event){
			$("#email_receipt_container").html('');
			$("#barcode_search").focus();
			$scope.ChangeScreenShow = false;
		})

		$("#dialog-customer-list").on('close', function(event){
			$("#customer-list-container").html('');
		})

		$("#dialog-customer-form").on('close', function(event){
			$("#customer-form-container").html('');
		})

		$("#alert-customer-msg-popup").on("close", function(event){
			$("#alert-customer-list-container").html('');
		})

		$("#dialog-customer-edit-form").on('close', function(event){
			$("#customer-edit-form-container").html('');
		})

		$("#dialog-gift-card").on('close', function(event){
			$("#main_gc_container").html('');
			KeyPress(event);
		})

		$("#dialog-gift-card2").on('close', function(event){
			$("#main_gc_container2").html('');
			KeyPress(event);
		})

		$(document).on("close", "#gc_balance_option", function(event){
			$("#gc_balance_option_container").html('');
		})

		$("#dialog-process").on("close", function(){
			$("#process_container").html('');
			ProcessPrintReceipt.reject();
		})

		$("#search-inventory-item-dialog").on('close', function(event){
			$("#inventory_keypress_script").remove();
			KeyPress(event);
		})

		$("#before_quantity").on("close", function(e){
			e.preventDefault();
			$("#quantity_before_container").html('');
		})
		/* End */

		var ItemsCategoryView = function(){
			$("#item-category-container").show();
			$("#payment-view").hide();
			$scope.BtnPaymentView = true;
			$scope.BtnItemsCategoryView = false;
		}
		
		var PaymentView = function(){
			$("#item-category-container").hide();
			$("#payment-view").show();
			$scope.BtnPaymentView = false;
			$scope.BtnItemsCategoryView = true;
		}

		var ShowPaymentView = function(){
			posData.ShowPaymentView()
			.success(function(data){
				if(data.success){
					$("#item-category-container").hide();
					$("#payment-view").show();
					$scope.BtnPaymentView = false;
					$scope.BtnItemsCategoryView = true;
				}else{
					$("#item-category-container").show();
					$("#payment-view").hide();
					$scope.BtnPaymentView = true;
					$scope.BtnItemsCategoryView = false;
				}
			})
		}
		ShowPaymentView();

		/* Inventory popup*/
		$scope.searchinventoryitemdialogSettings = {
			created: function(args)
			{
				dialogsearchinventory = args.instance;
			},
			resizable: false,
			width: "100%", height: 400,
			autoOpen: false,
			theme: 'darkblue',
			isModal: true,
			keyboardCloseKey: 'none',
			showCloseButton: true,
			showAnimationDuration: 0,
			closeAnimationDuration: 0
		};
		/* End */
		/*
		$scope.RedirectDashboard = function(){
			posData.NewSaleQue()
			.success(function(data){
				if(data.success == true){
					var DisableOnHold = $("#POSDisableOnHold").val();
					if(DisableOnHold != 1){
						$scope.newsaleqshowModal = !$scope.newsaleqshowModal;
					}else{
						var msg ="You must first Complete or Cancel Sale before continuing.";
						NumpadAlertClose('onhold_disabled', msg)
						.then(function(){
							WindowPopupAlert("Information")
						})
					}
				}else if(data.success == false){
					posData.EmptyTransaction()
					.success(function(data){
						if(data.success == true){
							$window.location.href = 'cashier';
							if($("#TableOrder").val() == 1){
								tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
							}
						}
					})
				}
			})
		};
		*/
		var GotoCashierMenu = false;
		$scope.RedirectDashboard = function(){
				$(".ak-logo-button").attr('disabled', true);
				if( $("#TableStatusMessage").text() == '' ){
						GotoCashierMenu = true;
						posData.NewSaleQue()
						.success(function(data){
							if(data.success == true){
								// $scope.newsaleqshowModal = !$scope.newsaleqshowModal;
								$scope.PutOnHoldLogo();
							}else if(data.success == false){
								posData.EmptyTransaction()
								.success(function(data){
									if(data.success == true){
										$window.location.href = 'cashier';
										if($("#TableOrder").val() == 1){
											if($("#PoleDisplay").val() == 2){
												//tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
											}
										}
									}
								})
							}
						})
				}else{
					$http({
							method: 'get',
							url: base_url+'pos/pointofsale/tables/get-current-user'
					}).success(function(data){
							if(data.success){
									TableStatusMessage = '';
									$("#table_dine_in").jqxWindow('close');	
							}else{
									NumpadPasscode('table_login_user_close_dine_table')
									.then(function(){
											WindowPopupPasscode('User Passcode')
											.then(function(){
												setTimeout(function(){
													TableEditDine();
												},1000);
												$("#number_field").focus();
											})
									})
							}
					})
				}
				setTimeout(function(){
					$(".ak-logo-button").attr('disabled', false);
				},1000);	
		}
		
		var PoleDisplayTotal = function(){
		   var def = $.Deferred();
		   var PoleDisplayActivate = $("#PoleDisplay").val();
		   if(PoleDisplayActivate == '1' || PoleDisplayActivate == '3'){
			   posData.PoleDisplayTotal()
			   .success(function(data){
				 def.resolve(); 
			   })
		   }else{
			  def.resolve();  
		   }
		   return def.promise();	 
	    }
		
	    var PoleDisplayReset = function(){
			var def = $.Deferred();
			var PoleDisplayActivate = $("#PoleDisplay").val();
		    if(PoleDisplayActivate == '1' || PoleDisplayActivate == '3'){
				posData.PoleDisplayReset()
				.success(function(data){
					def.resolve();
				})
			}else{
				def.resolve();
			}
			return def.promise();
		}
		
		var PoleDisplay = function(unique){
			var def = $.Deferred();
			var PoleDisplayActivate = $("#PoleDisplay").val();
		    if(PoleDisplayActivate == '1' || PoleDisplayActivate == '3'){
				var postdata="receipt_details_unique="+unique;
				posData.PoleDisplay(postdata)
				.success(function(data){
					def.resolve();
				})
			}else{
				def.resolve();
			}
			return def.promise();
		}
		

		var LoadStationCashIn = function(){
			var def = new $.Deferred();
			
			$http({
				method: 'get',
				url: base_url+'pos/pointofsale/station-cashier/info'
			}).success(function(data){
				var source =
				{
					datatype: "json",
					datafields: [
						{ name: 'station_cashier_unique' },
						{ name: 'CashInNumber' }
					],
					localdata: data
				};
				$scope.CashIncomboBoxSettings = {
					source: source, displayMember: "CashInNumber", valueMember: "station_cashier_unique", itemHeight: 25, height: 25, width: 150
				};
				def.resolve();
			})
			return def.promise();
		}

		var LoadStationData = function(){
			var def = new $.Deferred();
			$http({
				method: 'get',
				url: base_url+'pos/pointofsale/station/info'
			}).success(function(data){
				var source =
				{
					datatype: "json",
					datafields: [
						{ name: 'Unique' },
						{ name: 'Name' }
					],
					localdata: data
				};
				$scope.StationcomboBoxSettings = {
					source: source, autoComplete: true, displayMember: "Name", valueMember: "Unique", itemHeight: 25, height: 25, width: 80
				};
				$scope.selectHandlerStation = function (event) {
					if (event.args) {
						var item = event.args.item;
						if (item) {
							$scope.StatStationName = item.value
						}
					}
				};
				def.resolve();
			})
			return def.promise();
		}
		
		/* Get Header information such like;
	    *  Receipt Number, Station Name, Location Name and Cashier Name.
		*/
		var LoadHeaderInfo = function(){
			var def = new $.Deferred(); 
			posData.GetHeaderInfo()
			.success(function(data){
				var resOrderNo = data.OrderNo;
				$("#receiptn").text(data.receipt_number);
				$("#station").text(data.station_name);
				$("#user_name").text(data.user_name);
				$("#login_name").text(data.login_name);
				$("#tableno").text(data.tableno);
				$scope.StatStationName = data.station_number;
				$scope.StatCashIn = data.cashin;
				$scope.TempStationName = data.station_number;
				$scope.TempCashIn = data.cashin;
				$("#receiptlabel").text(data.LabelNote);
				if(resOrderNo !== null){
					$("#OrderNoDisplayLine").show();
					$("#OrderNoDisplay").text(data.OrderNo);
				}else{
					$("#OrderNoDisplayLine").hide();
				}
				def.resolve();
			})
			return def.promise();
		};
		/* End */

		//--> Load Categories Button
		var LoadCategories = function(){
			var def = new $.Deferred();
			posData.Category()
			.success(function(data){
				$scope.categories = data;
				def.resolve();
			});
			return def.promise();
		}//End Load Categories Button

		//-->Load	Item Button List Default Category 1
		var LoadItemButtonListDefault = function(){
			var def = new $.Deferred();
			posData.ItemButtonDefault()
			.success(function(data){
				$scope.items = data;
				def.resolve();
			});
			return def.promise();
		}// End Load Item Button List Default


		var scrollOrderListDown = function(){
		  setTimeout(function() {
			 var n = 1000;
			 $('.orderedlist').animate({ scrollTop: n }, 50);
			 $('.listitems').animate({ scrollTop: n }, 50);
			 $('.tax-container').animate({ scrollTop: n }, 50);
			 //$('.OHSlistitemsTotal').animate({ scrollTop: n }, 50);
			 $('.qspayments').animate({ scrollTop: n }, 50); 
			}, 100); 
	    }

		setTimeout(function(){
			CategoryId = $("#DefaultCategory").val();
			$("#CategoryId").val(CategoryId);
			if($(".inventory-item").hasScrollBar()){
				$("#CatScrollButton"+CategoryId).show();
			}
		},1000)
		
		//-->On Load Ordered Item List
		var OrderedItemCount = null;
		var LoadOrderedItemLists = function(){
			var def = new $.Deferred();
			OrderedItemCount = null;
			posData.OrderedItemList()
			.success(function(data){
				$scope.ordereditemlist = data;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(["CustomerDisplay", $scope.station_un]));
						conn.send(JSON.stringify(["ItemList", data, $scope.station_un]));
					}
				}
				OrderedItemCount = data.length;
				if(data.length > 0){
					$scope.BtnEmailReceipt = false;
				}else{
					$scope.BtnEmailReceipt = true;
				}

				def.resolve(data);
			}).then(function(){
				scrollOrderListDown();
				def.resolve();
			})
			
			return def.promise();
		};
		// End Load Ordered Item List

		//-->Totals
		var LoadTotals = function(){
			var def = new $.Deferred();
			posData.WhenTotals()
			.success(function(data){
				if(data.success == true){
					posData.Totals()
					.success(function(data){
						$scope.totals = data;
						if($("#PoleDisplay").val() == 2){
							if(ConnectionPoleDisplay){
								conn.send(JSON.stringify(['Totals',data, $scope.station_un]));
							}
						}
						ItemCount();
						def.resolve();
					});
				}else{
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['Totals','',$scope.station_un]));
						}
					}
					$scope.totals = 0;
					def.resolve();
				}
				
			})
			return def.promise();
		};

		// End Load Totals

		//-->Tax
		var LoadTax = function(){
			var def = new $.Deferred();
			posData.Tax()
			.success(function(data){
				$scope.ShowTax = data;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Tax',data, $scope.station_un]));
					}
				}
				def.resolve();
			})
			return def.promise();
		};
		// End Load Tax

		//-->Load Discount
		var LoadDiscount = function(){
			var def = new $.Deferred();
			posData.Discounts()
			.success(function(data){
				if(data.success == true){
					$scope.TotalDiscountShow = false;
					$scope.TotalDiscountHide = true;
					$scope.Discount = data;
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['Discount', data, $scope.station_un]));
						}
					}
				}else{
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['Discount', '', $scope.station_un]));
						}
					}
					$scope.TotalDiscountShow = true;
					$scope.TotalDiscountHide = false;
				}
				def.resolve();
			});
			return def.promise();
		}// End Load Discount
		
		var LoadEBT = function(){
			var def = new $.Deferred();
			posData.EBT()
			.success(function(data){
				if(data.success == true){
					$scope.EBTShow = false; //show
					$scope.NonEBTShow = false; //show
					$scope.EBT = data;
					$scope.NonEBT = data;
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['EBT', data, $scope.station_un]));
						}
					}
				}else{
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['EBT', '', $scope.station_un]));
						}
					}
					$scope.EBTShow = true; //hide
					$scope.NonEBTShow = true; //hide
				}
			})
			return def.promise();
		}

		var ItemCount = function(){
			setTimeout(function(){
				var sum = 0;
				var data = [];
				$('.countQty').each(function(){
					
					if($(this).text() < 0){
						
					}else{
						if( $(this).hasClass('W1') ){
							sum += 1;
						}else{
							sum += parseInt($(this).text());
						}
					}
				})
				
				if(sum > 0){
					$scope.ItemCountShow = false;
					$("#ItemCountQty").text(sum);
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['Count', sum, $scope.station_un]));
						}
					}
				}else{
					$scope.ItemCountShow = true;
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							conn.send(JSON.stringify(['Count', '', $scope.station_un]));
						}
					}
				}
			},100);
		}
		
		//-->Load Payments
		var scrollTotalDown = function(){
		  setTimeout(function() {
			 var n = 1000;
    		 $('#payments').animate({ scrollTop: n }, 50);
		  }, 1000); 
	    }
		
		var LoadPayments = function(){
			var def = new $.Deferred();
			posData.POSPayments()
			.success(function(data){
				$scope.AllPayments = data;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Payments', data, $scope.station_un]));
					}
				}
			}).then(function(){
				scrollTotalDown();
				def.resolve();
			})
			return def.promise();
		}//End Load Payments

		//-->Load Change
		var LoadChange = function(){
			var def = new $.Deferred();
			posData.POSChange()
			.success(function(data){
				$scope.poschange = data;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Change', data, $scope.station_un]));
					}
				}
				def.resolve();
			});
			return def.promise();
		}// End Load Change


		//-->reload payments
	  	var DisplayAllPayments = function(){
			var def = new $.Deferred();  
			posData.DisplayAllPayments()
			.success(function(data){
		 		$scope.allpayments = data;
		  		// $scope.payment_list_grid = {
				// 	source:  {
				// 		localdata: data,
				// 	}
				// };
				$rootScope.$emit("CallGridPaymentList", data);
		  		def.resolve();
			})
			return def.promise();
		};
		  
		$rootScope.$on('CallReloadEverything', function(){
			$scope.CustomerReloadEverything();
		})
	
		$scope.CustomerReloadEverything = function(){
			LoadEverything();
		}
			
		//-->Get Selected Customer (On Refresh of the page)
		var AccountNumber;
		var GetSelectedCustomer = function(){
			var def = new $.Deferred();
			posData.SelectCustomer()
			.success(function(data){
				 var CustomerId = data.CustomerId;
				 if(CustomerId){
					$scope.customer = {
						selected: data.SelectedCustomer,
						id: data.CustomerId
					}
					
					GlobalCustomer = data.CustomerId;
					$("#CustomerSelectedUnique").val(data.CustomerId);
					$("#AccountStatus").val(data.AccountStatus);
					$("#CreditLimit").val(data.CreditLimit);
					AccountNumber = data.AccountNumber;
					$scope.RemoveCustomerWhen = true;
				 }else{
					$scope.customer = {
						selected: 'GUEST',
						id: ''
					}
					$scope.RemoveCustomerWhen = false;
					GlobalCustomer = null;
					$("#CustomerSelectedUnique").val(null);
				 }
				 def.resolve();
			});
			return def.promise();
		}//End Get Selected Customer
		

		var GetSelectedCustomerViewType = function(){
			var def = new $.Deferred();
			posData.SelectCustomer()
			.success(function(data){
				 var CustomerId = data.CustomerId;
				 if(CustomerId){
					$scope.customer = {
						selected: data.CustomerFirstName + " " + data.CustomerLastName,
						id: data.CustomerId
					}
					GlobalCustomer = data.CustomerId;
				 }else{
					$scope.customer = {
						selected: 'Guest',
						id: ''
					}
					GlobalCustomer = null;	
				 }
				 def.resolve();
			});
			return def.promise();
		}//End Get Selected Customer
		
		var GetCustomerSave = function(){
			var def = new $.Deferred();
			setTimeout(function(){
				console.log("Default Customer", $scope.DefaultCustomer);
				var Default = $scope.DefaultCustomer;
				if(Default > 0){
					var postdata="CustomerUnique="+Default;
					posData.GetCustomerProfile(postdata)
					.success(function(data){
						var postData="selcustomervalue="+Default;
						postData+="&selcustomerlabel="+data.fname +" "+data.lname;
						posData.TransCustomer(postData)
						.success(function(){
							// GetSelectedCustomer();
						})
					})
				}
				def.resolve();
			},100);
			return def.promise();
		}
		
		//-->Enable/Disable Payment
		var EnableDisablePayment = function(){
			var def = new $.Deferred();
			posData.EDPayment()
			.success(function(data){
				if(data.success == true){
					$scope.BtnPaymentWhen = false;
				}else if(data.success == false){
					$scope.BtnPaymentWhen = true;
				}
				def.resolve();
			});
			return def.promise();
		}//End Enable / Disable Payment

		//-->Receipt tax checker
		var ReceiptTaxChecker = function(){
			var def = new $.Deferred();
			posData.ReceiptTaxChecker()
			.success(function(data){
				if(data.success == true){
					$scope.ReceiptNoTaxHide = false;
					$scope.ReceiptTaxHide = true;
				}else if(data.success == false){
					$scope.ReceiptNoTaxHide = true;
					$scope.ReceiptTaxHide = false;
				}
				def.resolve();
			});
			return def.promise();
		}//End Receipt tax cherker

		var CheckReceiptStatus = function(){
			var def = new $.Deferred();
			posData.CheckReceiptStatus()
			.success(function(data){
				var status = data.status;
				var orders = data.orders;

				if(status == 1 && orders == false){
					NewSaleButtons();
				}else if (status == 1 && orders == true){
					EnableButtonsWhenItemAdded();
				}else if (status == 4){
					CompletedSale();
				}else if (status == null){
					OtherButtons();
				}
				def.resolve();
			});
			return def.promise();
		};

		var OpenCashDrawer = function(){
			posData.OpenDrawer()
			.success(function(data){
				if(data.success  == true){
					$scope.alert = {
						message:"Cash Drawer opened."
					};
					Alertdialog.setTitle("Cash Drawer");
	        		Alertdialog.open();
				}else if(data.success == false){
					$scope.alert = {
						message:"No Cash Drawer installed."
					};
					Alertdialog.setTitle("Cash Drawer Error");
	        		Alertdialog.open();
				}
			})
		};
	
	var DefaultPrinterStatus = 0;
	var PrinterProblemDefaultMessage = function(form_name){
		$("#dialog-numpad-alert").jqxWindow('close');
		DefaultPrinterStatus = 0;
		var msg="Printer error, please check <br/>";
			msg+="1. Printer is turned on. <br/>";
			msg+="2. Check printer paper. <br/>";
			msg+="3. Restart printer.";
		NumpadAlertClose(form_name, msg)
		.then(function(){
			WindowPopupAlert('Printer problem');
		})
	}	

	//--> Printer Check Connection
	var PrinterCheck = function(Unique){
		var def = $.Deferred();
		var postdata ="receipt_header_unique="+Unique;
			postdata+="&OrderType="+ordertypeSel;
		posData.PrinterCheckRecall(postdata)
		.success(function(data){
			if(data.success == true){
				if(data.print == true){
					DefaultPrinterStatus = 1;
				}else{
					DefaultPrinterStatus = 0;
					PrinterProblemDefaultMessage('printer_check');
					//$('body').unblock();
					setTimeout($.unblockUI, 100); 
				}
			}
			def.resolve();
		})
		return def.promise();
	};
	//--> End Printer Check Connection
	
	/*
	|-----------------------------------------------------------
	| Get Printer Default Information
	|-----------------------------------------------------------
	*/
	var GetPrinterDefault = function(){
		var def = $.Deferred();
		resultarray = [];
		posData.GetPrinterDefault()
		.success(function(result){
			resultarray.push(result.success, result.data.PrinterCheck, result.data.unique, result.data.ip_address, result.data.printer_port);
			def.resolve(resultarray);
		})
		return def.promise();
	}
	/*
	|-----------------------------------------------------------
	| Check Printer Status
	|-----------------------------------------------------------
	*/
	var CheckPrinterStatus = function(Unique, IP, Port){
		var def = $.Deferred();
		var postdata ="Unique="+Unique;
			postdata+="&IP_Address="+IP;
			postdata+="&Port="+Port;
		posData.CheckPrinterStatus(postdata)
		.success(function(data){
				def.resolve(data.success);
		})
		return def.promise();
	}
	/*
	|-----------------------------------------------------------
	| Print Receipt
	|-----------------------------------------------------------
	*/
	var ProcessPrintReceipt = function(){
		var def = $.Deferred();
		posData.PrintReceipt()
		.success(function(data){
			if(data.print == false){
					var msg="Printer error, please check <br/>";
							msg+="1. Printer is turned on. <br/>";
							msg+="2. Check printer paper. <br/>";
							msg+="3. Restart printer.";
					NumpadAlertClose('daily_sales_no_data', msg)
					.then(function(){
							WindowPopupAlert('Printer problem');
					})
			}
			load_data(data);
			def.resolve();
		})
		return def.promise();
	}
	/*
	|-----------------------------------------------------------
	| Load POS Total
	|-----------------------------------------------------------
	*/
  	var POSTotal = function(){
		var def = new $.Deferred(); 
		posData.POSTotal()
		.success(function(data){
		  	$scope.amountdue = data;
		  	$scope.backcolor = data.color;
			if($("#PoleDisplay").val() == 2){
				if(ConnectionPoleDisplay){
					conn.send(JSON.stringify(["DisplayTotal",data, $scope.station_un]));
					conn.send(JSON.stringify(["ClearNumber",'', $scope.station_un]));
				}
			}
		  	def.resolve();
		});
		return def.promise();
	};

	var CheckBalance = function(){
		var def = new $.Deferred();  
		posData.CheckBalance()
		.success(function(data){
			if(data.balance == true){
				$scope.BtnApplyPaymentWhen = false;
			}else if(data.balance == false){
				$scope.BtnApplyPaymentWhen = true;
			}
			def.resolve();
		})
		return def.promise();
	};
	
	$(document).on('submit','#printer_check',function(e){
		e.preventDefault();
		$('#dialog-numpad-alert').jqxWindow('close');
		KitchenPrintReceipt('IntegratedZero');	 
	})
	
	$(document).on("submit",'#IntegratedZero',function(e){
		e.preventDefault();
		var def = $.Deferred();
		$('#dialog-numpad-alert').jqxWindow('close');
		/*
		$('body').block({message: 'Printing to other printer please wait...'});
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				$('body').unblock();
				def.resolve();
			})
		})
		*/
		return def.promise();
	})

	var ConfigStation = function(){
		var def = new $.Deferred();
		posData.ConfigStation()
		.success(function(data){
			$scope.print_receipt = data.print_receipt;
			$scope.adjust_tip_button = data.adjust_tip;
			def.resolve();
		})
		return def.promise();
	};

	var check_email = function(val){
		if(!val.match(/\S+@\S+\.\S+/)){
			return false;
		}
		if( val.indexOf(' ')!=-1 || val.indexOf('..')!=-1){
			return false;
		}
		return true;
	}
	
	var PrinterCheckSetting = function(formname){
		var def = $.Deferred();
		var Status = false;
		var printers = 0;
		var printerStatus = [];
		posData.PrinterCheckAll()
		.success(function(data){
			if(data.success == true){
				if(data.print == true){
					printers = data.printer;
					var msg="Cannot print to:<br/>";
					var count = 1;
					var statusName = '';
					$.each(printers, function(index, value){
						if(value[0] == false){
							statusName = "";
						}else if(value[0] == true){
							statusName = "";
						}
						printerStatus.push(value[0]);
						msg+=count+". "+value[1]+" "+statusName+"<br/>";
						count++;
					})
					
					var resPrintStatus = printerStatus.indexOf(false);
					if(resPrintStatus >= 0){
						msg+="<br/>";
						msg+="Receipt will print to your station. <br/>";
						NumpadAlertYesOnly(formname, msg)
						.then(function(){
							WindowPopupAlertYesNo('Printer problem | ID '+data.ReceiptHeaderUnique+" | Receipt#"+data.ReceiptNo);
						})
					}else{
						DefaultPrinterStatus = 1;
						Status = true;
					}

					/*
					if(DefaultPrinterStatus == 0){
						var msg ="Receipt cannot print because both printers are not working. <br/>";
						NumpadAlertYesOnly(formname, msg)
						.then(function(){
							WindowPopupAlertYesNo('Printer problem | ID '+data.ReceiptHeaderUnique+" | Receipt#"+data.ReceiptNo)
							.then(function(){
								$(".alert_yes").focus();
							})
						})
					}
					*/
					
				}else{
					Status = true;
				}
			}else{
				Status = false;
			}
			def.resolve(Status);
		})
		return def.promise();
	}
	
	var KitchenPrintReceipt = function(formname){
		var def = $.Deferred();
		var KitchenPrintStatus = $scope.KitchenPrinter;
		if(KitchenPrintStatus){
			PrinterCheckSetting(formname)
			.done(function(Status){
				if(Status == true){
					posData.GetCurrentReceiptHeader()
					.success(function(jsondata){
						var postdata ="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
							//postdata+="&OrderType="+ordertypeSel;
							postdata+="&OrderType="+$("#OrderType").val();
						posData.KitchenPrintReceipt(postdata)
						.success(function(data){
							$("#dialog-numpad-alert").jqxWindow('close');
							if(formname == 'PutOnHoldPrinterStatus'){
								setTimeout(function(){
									//Redirecting to Cashier page
									//$window.location = base_url + 'pos/cashier';
								},100);
							}
						})
						ordertype();
					})
					def.resolve();
				}
			})
		}else{
			def.resolve();
		} 
		return def.promise();
	}
	
    $(document).on("submit",'#OnHoldPrinterStatus',function(e){
		e.preventDefault();
		var def = $.Deferred();
		//$("body").block({message: 'Printing to default printer please wait...'});
		$.blockUI({ css: { 
            border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px'  
        }, message: 'Printing to default printer\nplease wait...' });
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				OnHold()
				.done(function(){
					if(TableID > 0){
						TableAssign(TableID)
						.then(function(){
							setTimeout($.unblockUI, 100); 
							//$("body").unblock();
							//$window.location = base_url + "pos/pointofsale";
						})
					}else{
						posData.QuickSale()
						.success(function(){
							setTimeout($.unblockUI, 100); 
							//$("body").unblock();
							//$window.location = base_url + "pos/pointofsale";
						})
					}
				});
				def.resolve();
			})
		})
		$("#dialog-numpad-alert").jqxWindow('close');
		return def.promise();
	});
	
	$(document).on('submit', '#RecallOnHoldPrinterStatus', function(e){
		e.preventDefault();
		var def = $.Deferred();
		//$("body").block({message: 'Find working printer Please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Find working printer Please wait...' });
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				//$("body").unblock();
				setTimeout($.unblockUI, 100); 
				var recall_location="recall_location=pos/pointofsale"
				posData.RecallLocationRequest(recall_location)
				.success(function(data){
					if(data.success == true)
					$window.location = base_url + "pos/pointofsale/recall-sale";
				})
				def.resolve();
			})
		})
		$("#dialog-numpad-alert").jqxWindow('close');
		return def.promise();
	})

	$(document).on('submit', '#TableOnHoldPrinterStatus', function(e){
		e.preventDefault();
		var def = $.Deferred();
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px',
			baseZ: 9999, 
		}, message: 'Find working printer Please wait...' });
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				TableQuickOnHold()
				.then(function(){
					PopupWindowDineIn()
					.then(function(){
						WindowTableDineIn("Dine in Table"+" | "+$("#Server").val())
						setTimeout($.unblockUI, 100); 
					})
				})
				def.resolve();
			})
		})
		$("#dialog-numpad-alert").jqxWindow('close');
		return def.promise();
	})

	$(document).on('submit', '#TableOnHoldPrinterStatus2', function(e){
		e.preventDefault();
		var def = $.Deferred();
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Find working printer Please wait...' });
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				var postdata ="ReceiptHeaderUnique="+TableReceiptHeaderUnique;
					postdata+="&TableUnique="+TableId;
				posData.CombineReceipt(postdata)
				.success(function(data){
					posData.ClearAll(postdata)
					.success(function(data2){
						setTimeout($.unblockUI, 100); 
						$window.location = base_url + "pos/pointofsale/split-check";
					})
				})
				/*
				TableQuickOnHold()
				.then(function(){
					PopupWindowDineIn()
					.then(function(){
						WindowTableDineIn("Dine in Table"+" | "+$("#Server").val())
						setTimeout($.unblockUI, 100); 
					})
				})
				*/
				def.resolve();
			})
		})
		$("#dialog-numpad-alert").jqxWindow('close');
		return def.promise();
	})

	$(document).on("submit",'#PutOnHoldPrinterStatus',function(e){
		e.preventDefault();
		var def = $.Deferred();
		//$("body").block({message: 'Find working printer Please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Find working printer Please wait...' });
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				PutOnHoldReceipt()
				.done(function(){
					setTimeout($.unblockUI, 100); 
					//$("body").unblock();
					//$window.location = base_url + "pos/pointofsale";
				});
				def.resolve();
			})
			$("#dialog-numpad-alert").jqxWindow('close');
		})
		return def.promise();
	});
		
	var OnHold = function(){
		var def = new $.Deferred();
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Processing\nplease wait...' });
		
		posData.OnHold()
		.success(function(data){
			setTimeout($.unblockUI, 100); 
			if(data.success == true){
				load_data(data);
				GlobalCustomer = null;
				$scope.customer = {
					selected: 'Guest',
					id:''
				}
				PoleDisplayReset();
			}else{
				var msg="Cannot Put On Hold because Amount Due is 0. <br/>";
					msg+="Please use New Sale instead.";
				NumpadAlertClose('onhold_amount_alert', msg)
				.then(function(){
					WindowPopupAlert("On Hold Alert")
					.then(function(){
						
					})
				})
			}
			def.resolve();
		});
		return def.promise();
	}
	
	var PutOnHoldReceipt = function(){
		var def = new $.Deferred();
		setTimeout(function(){
		var postData="ReceiptHeaderUnique="+$scope.QueReceiptHeaderUnique;
			posData.PutOnHold(postData)
			.success(function(data){
				if(data.success == true){
					$scope.newsaleqshowModal = false;
					load_data(data);
					GlobalCustomer = null;
					$scope.customer = {
						selected: 'Guest',
						id: ''
					}
					$scope.RemoveCustomerWhen = false;
					PoleDisplayReset();
					def.resolve();
				}
			})
		},100);
		return def.promise();
	}
	
		var LoadEverything = function(){
			var def = $.Deferred();
			posData.LoadEverything()
			.success(function(data){
				load_data(data);

				var ItemListReference = data.ItemList;
				for(var i=0; i < ItemListReference.length; i++){
					ReturnItemArr.push(ItemListReference[i].ReturnReceiptDetailsUnique);
				}

				$scope.print_receipt = $("#StationPrintReceipt").val();
				$scope.adjust_tip_button = $("#StationAdjustTipButton").val();
				def.resolve();
			})
			return def.promise();
		}

		var itemslist;
		LoadEverything();
		//GetSelectedCustomer();
		EnableDisablePayment();
	
		//-->Load Item Button based on Category ID
		$.fn.hasScrollBar = function() {
			return this.get(0).scrollHeight > this.height();
		}

		var CategoryId = 0;
		var scrolled = 0;
		var scrolled_stop = false;
		var ItemScrollHeight = parseInt($("#ItemScrollHeight").val());
		$scope.getItems = function(catid){
			var postdata ="CatID="+catid;
			 $.ajax({
				url: base_url + 'pos/pointofsale/select-category-menu-items',
				data: postdata,
				type: "POST",
				dataType: "html",
				success: function (data) {
					$(".inventory-item").html($compile(data)($scope));
					CheckBalance();

					if($(".inventory-item").hasScrollBar()){
						$("#CatScrollButton"+catid).show();
					}else{
						$("#CatScrollButton"+CategoryId).hide();
					}
					if(CategoryId == catid){
						if(scrolled_stop == false){
							scrolled = scrolled + ItemScrollHeight;
							$('.inventory-item').animate({ scrollTop: scrolled});
						}else{
							scrolled = 0;
							$('.inventory-item').animate({ scrollTop: 0});
							scrolled_stop = false;
						}
					}else{
						scrolled = 0;
						$('.inventory-item').animate({ scrollTop: scrolled});
						$("#CatScrollButton"+CategoryId).hide();
						CategoryId = catid;
						$("#CategoryId").val(CategoryId);
						scrolled_stop = false;
					}
				}
			})	
		};

		var price_sched_time = function(){
			var refresh=1000; // Refresh rate in milli seconds
			//setTimeout(price_sched_display_ct(),refresh)
			setTimeout(function(){
				price_sched_display_ct()
			},1000)
		}

		var price_sched_display_ct = function() { 
			var x = new Date();
			var hours = x.getHours();
			var minutes = x.getMinutes();
			var seconds = x.getSeconds();  

			var price_sched_hours = hours;
			var price_sched_minutes = minutes;
			var price_sched_secs = seconds;
			
			if(minutes == '00'){
				if(seconds == '00'){
					PriceSchedRunCategory();
				}
			}
				
			tt=price_sched_time();
		}
		price_sched_display_ct();

		var PriceSchedRunCategory = function(){
			var postdata ="CatID="+CategoryId;
			 $.ajax({
				url: base_url + 'pos/pointofsale/select-category-menu-items',
				data: postdata,
				type: "POST",
				dataType: "html",
				success: function (data) {
					$(".inventory-item").html($compile(data)($scope));
				}
			})		
		}


		$(".inventory-item").bind('scroll', chk_scroll);
		function chk_scroll(e){
			var elem = $(e.currentTarget);
			if (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()) {
				scrolled_stop = true;
			}
		}

		/* Category Scroll */
		var catscroll_stop = false;
		var CategoryScrollHeight = parseInt($("#CategoryScrollHeight").val());
		var catscrolldown = CategoryScrollHeight;
		$("#CategoryScrollUp").click(function(){
			catscrolldown = catscrolldown - CategoryScrollHeight;
			var scrollcountdown = catscrolldown - CategoryScrollHeight;
			$('.inventory-category').animate({ scrollTop: scrollcountdown}, 200);

			if(scrollcountdown == 0){
				catscrolldown = CategoryScrollHeight;
				catscroll_stop = false;
				$("#CategoryScrollUp").attr("disabled", true);
				$("#CategoryScrollDown").attr("disabled", false);
			}else{
				$("#CategoryScrollUp").attr("disabled", false);
			}
		})

		$("#CategoryScrollDown").click(function(e){
			$('.inventory-category').animate({ scrollTop: catscrolldown}, 200);
			if(catscroll_stop == false){
				catscrolldown = catscrolldown + CategoryScrollHeight;	
				$("#CategoryScrollUp").attr("disabled", false);
			}else{
				catscrolldown = catscrolldown + CategoryScrollHeight;
			}
		})

		if($(".inventory-category").hasScrollBar()){
			$(".categoryscrollbutton_container").show();
		}else{
			$(".inventory-category").css({width:'100%'});
			$(".categoryscrollbutton_container").hide();
		}

		$(".inventory-category").bind('scroll', chk_scroll2);
		function chk_scroll2(e){
			var elem = $(e.currentTarget);
			if (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()) {
				catscroll_stop = true;
				$("#CategoryScrollDown").attr("disabled", true);
				$("#CategoryScrollUp").attr("disabled", false);
			}else{
				$("#CategoryScrollDown").attr("disabled", false);
			}
		}

	/* Function Scroll */
	var fnscroll_stop = false;
	var FunctionScrollHeight = parseInt($('#FunctionScrollHeight').val());
	var fnscrolldown = FunctionScrollHeight;
	$("#FunctionScrollUp").click(function(e){
		fnscrolldown = fnscrolldown - FunctionScrollHeight;
		var scrollcountdown = fnscrolldown - FunctionScrollHeight;
		$(".pos-functions").animate({ scrollTop: scrollcountdown}, 200);

		if(scrollcountdown == 0){
			fnscrolldown = FunctionScrollHeight;
			fnscroll_stop = false;
			$("#FunctionScrollUp").attr("disabled", true);
			$("#FunctionScrollDown").attr("disabled", false);
		}else{
			$("#FunctionScrollUp").attr("disabled", false);
		}
	})

	$("#FunctionScrollDown").click(function(e){
		$('.pos-functions').animate({ scrollTop: fnscrolldown}, 200);
		if(fnscroll_stop == false){
			fnscrolldown = fnscrolldown + FunctionScrollHeight;	
			$("#FunctionScrollUp").attr("disabled", false);
		}else{
			fnscrolldown = fnscrolldown + FunctionScrollHeight;	
		}
	})

	if($(".pos-functions").hasScrollBar()){
		$(".functionscrollbutton_container").show();
	}else{
		$(".pos-functions").css({width:'100%'});
		$(".functionscrollbutton_container").hide();
	}

	$(".pos-functions").bind('scroll', chk_scroll3);
	function chk_scroll3(e){
		var elem = $(e.currentTarget);
		if (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()) {
			fnscroll_stop = true;
			$("#FunctionScrollDown").attr("disabled", true);
			$("#FunctionScrollUp").attr("disabled", false);
		}else{
			$("#FunctionScrollDown").attr("disabled", false);
		}
	}

	var GiftCardPoints = '';
	var ItemDescription = '';
	var ModifierArray = [];
	var OpenItemArray = [];
	var GiftCardArray = [];
	var WarningStockArray = [];
	var PromptItemType = '';
	$scope.addItem = function(itemid, giftcard, price, question, promptdesc, promptprice, item, part, description, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, PriceQty1, price1, PriceQty2, price2, PriceQty3, price3, PriceQty4, price4, PriceQty5, price5, MinimumAge, Type, PriceModify, DescriptionKitchen){
		$(".btnitems").attr('disabled', true);
		PromptItemType = Type;
		if(Type == 'Modifier'){
			ItemType = Type;
			ItemPriceModify = PriceModify;
			OpenItemType = Type;
			OpenItemPriceModify = PriceModify;
			if(GlobalItemUnique.Unique === undefined || GlobalItemUnique.Unique == 0){
				var msg ='<p>You must first select item on receipt to add <span style="color:#FFC300;">'+ description+'</span>.</p>';
				NumpadAlertClose('add_item_failed', msg)
				.then(function(){
					WindowPopupAlert("Alert Message")
				})
				return false;
			}else{
				var ItemSelInfo = $(".selected").attr('id');
				if(ItemSelInfo){
					var ItemPrinted = ItemSelInfo.split('=')[9];
					if(ItemPrinted == 1){
						var msg ='Cannot Add Modifier to Item Already Sent';
						NumpadAlertClose('add_item_failed', msg)
						.then(function(){
							WindowPopupAlert("Alert Message")
						})
						return false;
					}
				}else{
					var msg ='<p>You must first select item on receipt to add <span style="color:#FFC300;">'+ description+'</span>.</p>';
					NumpadAlertClose('add_item_failed', msg)
					.then(function(){
						WindowPopupAlert("Alert Message")
					})
					return false;
				}
			}
		}
		
		ModifierArray = [];
		ModifierArray.push({"Unique" : itemid, "Description" : description, "Price" : price, "Quantity" : 1, "Points" : points, "Cost" : cost,  "Cost_Extra" : costextra, "Cost_Freight" : costfreight, "Cost_Duty" : costduty, "Custom1" : custom1, "Item" : itemno, "EBT" : ebt, "Price1" : price1, "ListPrice" : listprice, "DescriptionKitchen" : DescriptionKitchen});
		OpenItemArray = [];
		OpenItemArray.push({"Unique" : itemid, "Description" : description, "Price" : price, "Quantity" : 1, "Points" : points, "Cost" : cost,  "Cost_Extra" : costextra, "Cost_Freight" : costfreight, "Cost_Duty" : costduty, "Custom1" : custom1, "Item" : itemno, "EBT" : ebt, "Price1" : price1, "ListPrice" : listprice, "DescriptionKitchen" : DescriptionKitchen});
		GiftCardArray = [];
		GiftCardArray.push({"Unique" : itemid, "Description" : description, "Price" : price, "Quantity" : 1, "Points" : points, "Cost" : cost,  "Cost_Extra" : costextra, "Cost_Freight" : costfreight, "Cost_Duty" : costduty, "Custom1" : custom1, "Item" : itemno, "EBT" : ebt, "Price1" : price1, "ListPrice" : listprice, "DescriptionKitchen" : DescriptionKitchen});
		PriceQty = []; 
		NewPriceQty = [];
		AgeVerifyTempArr = [];
		WarningStockArray = [];

		PriceQty.push({
			"Unique" : itemid,
			[parseFloat(PriceQty1).toFixed(2)] : parseFloat(price1).toFixed(2), 
			[parseFloat(PriceQty2).toFixed(2)] : parseFloat(price2).toFixed(2), 
			[parseFloat(PriceQty3).toFixed(2)] : parseFloat(price3).toFixed(2), 
			[parseFloat(PriceQty4).toFixed(2)] : parseFloat(price4).toFixed(2), 
			[parseFloat(PriceQty5).toFixed(2)] : parseFloat(price5).toFixed(2)
		})

		PriceQtyItemArray.push({
			"Unique" : itemid,
			[parseFloat(PriceQty1).toFixed(2)] : parseFloat(price1).toFixed(2), 
			[parseFloat(PriceQty2).toFixed(2)] : parseFloat(price2).toFixed(2), 
			[parseFloat(PriceQty3).toFixed(2)] : parseFloat(price3).toFixed(2), 
			[parseFloat(PriceQty4).toFixed(2)] : parseFloat(price4).toFixed(2), 
			[parseFloat(PriceQty5).toFixed(2)] : parseFloat(price5).toFixed(2)
		})

		ItemDescription = description;
		if(question == 1 || promptdesc == 1 || promptprice == 1){
			$(".btnitems").attr("disabled", true);
		}

		$("#price_numpad").html('');
		$("#custom_item_keyboard").html();

		var ItemUnique = itemid;
		//var postdata="ItemUnique="+ItemUnique;
		if(giftcard == 1){
			//-->Populate Window Popup (Internal)
			GiftCardPoints = points;
			GiftCardForm('sell_gift_card', ItemUnique, price)
			.then(function(){
				WindowPopupGiftCardForm('Gift Card')
				.then(function(){
					$("#gift_card_number").focus();
					$(".btnitems").attr('disabled', false);
				})
			})
		}else if(giftcard == 2){
			//-->Populate Window Popup (External)
			GiftCardPoints = points;
			GiftCardForm2('sell_gift_card_datacap', ItemUnique, price)
			.then(function(){
				WindowPopupGiftCardForm2('Gift Card')
				.then(function(){
					$("#gift_card_number2").focus();
					$(".btnitems").attr('disabled', false);
				})
			})
		}else{ 
			var postDataAddItem="ItemId="+itemid;
			if($scope.WarningStock == 1){
				WarningStockArray.push(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
				posData.CheckQuantity(postDataAddItem)
				.success(function(CheckQty){
					if(CheckQty.Qty > 0){
						//-->Popup Window Minimum Age
						if(MinimumAge > 0){
							// posData.CheckAgeVerifyCode()
							// .success(function(data){
								// if(data.success){
									NumpadAgeVerify(MinimumAge)
									.then(function(){
										AgeVerifyTempArr.push(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
										WindowPopupAgeNotification()
										.then(function(){
											$("#age_field").focus();
											$(".btnitems").attr("disabled", false);
										})
									})
								// }else{
									// ProcessAddItemMenu(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
								// }
							// })
						}else{
							ProcessAddItemMenu(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
						}
					}else{
						PlaySound();
						$scope.ItemSearch = null;
						$("#barcode_search").attr("disabled", true);
						var msg = CheckQty.Description+"<br/>";
							msg+= "Quantity "+parseFloat(CheckQty.Qty)+"<br/>";
							msg+= "Do you still want to Sell?";
						NumpadAlertYesNo('add_item_without_stock_menu', msg)
						.then(function(){
							$("#use_value").val(itemid);
							$("#use_value2").val(CheckQty.Question);
							WindowPopupAlertYesNo('Add New Item');
						})
					}
				});
			}else{
				console.log("dito sya", MinimumAge);
				if(MinimumAge > 0){
					// posData.CheckAgeVerifyCode()
					// .success(function(data){
						// if(data.success){
							NumpadAgeVerify(MinimumAge)
							.then(function(){
								AgeVerifyTempArr.push(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
								WindowPopupAgeNotification()
								.then(function(){
									$("#age_field").focus();
									$(".btnitems").attr("disabled", false);
								})
							})
						// }else{
							// ProcessAddItemMenu(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
						// }
					// })
				}else{
					setTimeout(function(){
						Qquestion = question;
						ProcessAddItemMenu(ItemUnique, promptdesc, promptprice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen);
					},100);
				}	
			}
		}
		setTimeout(function(){
			if(question == 1 || promptdesc == 1 || promptprice == 1){
				$(".btnitems").attr("disabled", false);
			}
		},1000)
	}

	var ProcessAddItemMenu = function(ItemUnique, PromptDesc, PropmtPrice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen){
		var def = $.Deferred();
		$("#barcode_search").val('');
		var question = 0;
		if($("#use_value2").val()){
			question = $("#use_value2").val();
		}else{
			question = Qquestion;
		}
		var postdata="ItemUnique="+ItemUnique;
		CheckPrompt(postdata, ItemUnique, 1, PromptDesc, PropmtPrice, item, part, description, price, weigh, points, cost, costextra, costfreight, costduty, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen)
		.then(function(){
			if(question == 1){
				Question('', true, '', ItemUnique);	
			}else{
				var postDataAddItem ="ItemId="+ItemUnique;
					postDataAddItem+="&QuantityBefore="+BEFOREQUANTITY;
					postDataAddItem+="&Amount="+price;
					postDataAddItem+="&Description="+encodeURIComponent(description);
					postDataAddItem+="&Points="+points;
					postDataAddItem+="&Cost="+cost;
					postDataAddItem+="&Cost_Extra="+costextra;
					postDataAddItem+="&Cost_Freight="+costfreight;
					postDataAddItem+="&Cost_Duty="+costduty;
					postDataAddItem+="&Custom1="+custom1;
					postDataAddItem+="&Item="+itemno;
					postDataAddItem+="&EBT="+ebt;
					postDataAddItem+="&Price1="+price1;
					postDataAddItem+="&ListPrice="+listprice;
					postDataAddItem+="&PriceQuantity="+JSON.stringify(PriceQty);
					postDataAddItem+="&Type="+Type;
					postDataAddItem+="&PriceModify="+PriceModify;
					postDataAddItem+="&DescriptionKitchen="+encodeURIComponent(DescriptionKitchen);
					postDataAddItem+="&ParentItem="+GlobalItemUnique.Unique;
				posData.AddItem(postDataAddItem)
				.success(function(data){
					ModifierArray = [];
					OpenItemArray = [];
					PriceQty 	  = [];
					$scope.desc = data;
					$("#receiptn").text(data.ReceiptNumber);
					load_data(data);
					
					$scope.BtnPaymentWhen = false;
					PoleDisplay(data.ReceiptDetailsUnique);
					$("#barcode_search").attr("disabled", false);
					$("#barcode_search").focus();
					$(".btnitems").attr("disabled", false);
					GlobalItemUnique.Unique = 0;
					BEFOREQUANTITY = 0;
				})
			}
			$scope.ItemSearch = null;
			def.resolve();
		})
		return def.promise();
	}

	var load_data = function(data){
		def = $.Deferred();
		//--> CUSTOMER
		if(data.CustomerSelected){
			var CustomerId = data.CustomerSelected.CustomerId;
			if(CustomerId){
			   $scope.customer = {
				   selected: data.CustomerSelected.SelectedCustomer,
				   id: data.CustomerSelected.CustomerId
			   }
			   $scope.RemoveCustomerWhen = true;
			   GlobalCustomer = data.CustomerSelected.CustomerId;
			   $("#CustomerSelectedUnique").val(data.CustomerSelected.CustomerId);
			   $("#AccountStatus").val(data.CustomerSelected.AccountStatus);
			   $("#CreditLimit").val(data.CustomerSelected.CreditLimit);
			   AccountNumber = data.CustomerSelected.AccountNumber;
			}else{
			   $scope.customer = {
				   selected: 'GUEST',
				   id: ''
			   }
			   $scope.RemoveCustomerWhen = false;
			   GlobalCustomer = null;
			   $("#CustomerSelectedUnique").val(null);
			}
		}

		//--> ITEM LIST
		if(data.ItemList){
			if(data.ParentId){
				setTimeout(function() {
					var ParentIdSelected = data.ParentId;
					$("."+ParentIdSelected).trigger('click');
					$(".btnitems").attr('disabled',false)
				},100);
			}


			$scope.ordereditemlist = data.ItemList;
			console.log("itemlist", data.ItemList);
			if($("#PoleDisplay").val() == 2){
				if(ConnectionPoleDisplay){
					conn.send(JSON.stringify(["CustomerDisplay", $scope.station_un]));
					conn.send(JSON.stringify(["ItemList", data.ItemList, $scope.station_un]));
				}
			}

			$scope.OrderedItemCount = data.ItemList.length; 

			OrderedItemCount = data.ItemList.length;
			if(data.ItemList.length > 0){
				$scope.BtnEmailReceipt = false;
			}else{
				$scope.BtnEmailReceipt = true;
			}
			scrollOrderListDown();
		}

		//--> TAX
		if(data.ItemTax){
			$scope.ShowTax = data.ItemTax;
			if($("#PoleDisplay").val() == 2){
				if(ConnectionPoleDisplay){
					conn.send(JSON.stringify(['Tax', data.ItemTax, $scope.station_un]));
				}
			}
		}

		// GetCustomerSave()
		// .then(function(){
			
		// })

		//--> EBT
		if(data.TotalEBT){
			if(data.TotalEBT.success == true){
				$scope.EBTShow = false; //show
				$scope.NonEBTShow = false; //show
				$scope.EBT = data.TotalEBT;
				$scope.NonEBT = data.TotalEBT;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['EBT', data.TotalEBT, $scope.station_un]));
					}
				}
			}else{
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['EBT', '', $scope.station_un]));
					}
				}
				$scope.EBTShow = true; //hide
				$scope.NonEBTShow = true; //hide
			}
		}
		//--> DISCOUNT
		if(data.ItemTotalDiscount){
			if(data.ItemTotalDiscount.success == true){
				$scope.TotalDiscountShow = false;
				$scope.TotalDiscountHide = true;
				$scope.Discount = data.ItemTotalDiscount;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Discount', data.ItemTotalDiscount, $scope.station_un]));
					}
				}
			}else{
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Discount', '', $scope.station_un]));
					}
				}
				$scope.TotalDiscountShow = true;
				$scope.TotalDiscountHide = false;
			}
		}
		//--> PAYMENTS
		if(data.ItemPayments){
			$scope.AllPayments = data.ItemPayments;
			scrollTotalDown();
			if($("#PoleDisplay").val() == 2){
				if(ConnectionPoleDisplay){
					conn.send(JSON.stringify(['Payments', data.ItemPayments, $scope.station_un]));
				}
			}
		}
		//--> CHANGE
		if(data.ItemPaymentChange){
			$scope.poschange = data.ItemPaymentChange;
			if($("#PoleDisplay").val() == 2){
				if(ConnectionPoleDisplay){
					conn.send(JSON.stringify(['Change', data.ItemPaymentChange, $scope.station_un]));
				}
			}
		}
		//--> WHEN STILL HAVE BALANCE  CHECK
		if(data.WhenTotals){
			if(data.WhenTotals.success){
				$scope.totals = data.ItemTotals;
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Totals',data.ItemTotals, $scope.station_un]));
					}
				}
				ItemCount();
			}else{
				if($("#PoleDisplay").val() == 2){
					if(ConnectionPoleDisplay){
						conn.send(JSON.stringify(['Totals','',$scope.station_un]));
					}
				}
				$scope.totals = 0;
			}
		}
		//--> AMOUNT DUE
		if(data.ItemAmountDue){
			$scope.amountdue = data.ItemAmountDue;
			$scope.backcolor = data.color;
			if($("#PoleDisplay").val() == 2){
				if(ConnectionPoleDisplay){
					conn.send(JSON.stringify(["DisplayTotal",data.ItemAmountDue, $scope.station_un]));
					conn.send(JSON.stringify(["ClearNumber",'', $scope.station_un]));
				}
			}
		}
		//--> HEADER INFORMATION
		if(data.HeaderInfo){
			var resOrderNo = data.HeaderInfo.OrderNo;
			$("#receiptn").text(data.HeaderInfo.receipt_number);
			$("#station").text(data.HeaderInfo.station_name);
			$("#user_name").text(data.HeaderInfo.user_name);
			$("#login_name").text(data.HeaderInfo.login_name);
			$("#tableno").text(data.HeaderInfo.tableno);
			var table_assigned = data.HeaderInfo.tableno;
			if(table_assigned != 'Table'){
				$("#tableno").addClass('table_assigned');
			}else{
				$("#tableno").removeClass('table_assigned');
			}
			$("#customer_count").text((data.HeaderInfo.customer_count > 0 ? data.HeaderInfo.customer_count : 1));
			$scope.StatStationName 	= data.HeaderInfo.station_number;
			$scope.StatCashIn 		= data.HeaderInfo.cashin;
			$scope.TempStationName 	= data.HeaderInfo.station_number;
			$scope.TempCashIn 		= data.HeaderInfo.cashin;
			$("#receiptlabel").text(data.HeaderInfo.LabelNote);
			if(resOrderNo !== null){
				$("#OrderNoDisplayLine").show();
				$("#OrderNoDisplay").text(data.HeaderInfo.OrderNo);
			}else{
				$("#OrderNoDisplayLine").hide();
			}
		}
		//--> TAX CHECKING
		if(data.SaleTaxCheck){
			if(data.SaleTaxCheck.success == true){
				$scope.ReceiptNoTaxHide = false;
				$scope.ReceiptTaxHide = true;
			}else if(data.SaleTaxCheck.success == false){
				$scope.ReceiptNoTaxHide = true;
				$scope.ReceiptTaxHide = false;
			}
		}
		//--> STATUS CHECK IF 1 ACTIVE, 4 COMPLETED
		if(data.ReceiptStatusCheck){
			var status = data.ReceiptStatusCheck.status;
			var orders = data.ReceiptStatusCheck.orders;
			$scope.ReceiptStatus = status;
			$scope.ReceiptCurrentBalance = data.ReceiptStatusCheck.current_balance;
			if(status == 1 && orders == false){
				NewSaleButtons();
			}else if (status == 1 && orders == true){
				EnableButtonsWhenItemAdded();
			}else if (status == 4){
				CompletedSale();
			}else if (status == null){
				OtherButtons();
			}
		}
		//--> POINTS
		if(data.PointsSet){
			if(data.PointsSet.PointsView > 0){
				if(data.PointsSet.CustomerPointsView > 0){
					$("#points").text('Pts '+data.PointsSet.Points);
					$("#points").append(' | ');
					$("#points").append(data.PointsSet.CustomerPoints);
				}else{
					$("#points").text('Pts '+data.PointsSet.Points);
				}
			}else{
				$("#points").text('');
			}
		}

		/*
		|--------------------------------------------------------|
		| Printer not working
		|--------------------------------------------------------|
		*/
		if(data.PrinterNotWorking){
			var msg = data.PrinterNotWorking;
			PrinterStatusWindow('no_customer_selected', msg)
			.then(function(){
				WindowPopupPrinterStatus('Printer Status');
			})
		}

		if(data.CheckBalance){
			if(data.CheckBalance.balance == true){
				$scope.BtnApplyPaymentWhen = false;
				$scope.BtnPrintWhen = true;
				$scope.BtnAddCustWhen = false;
				$(".btnpayment").attr({"disabled": false});
			}else if (data.CheckBalance.balance == false){
				$scope.BtnApplyPaymentWhen = true;
				$scope.BtnPrintWhen = false;
				//CompletedSale();
				if($("#TableOrder").val() == 1){
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							if(tableconn){
								tableconn.send(JSON.stringify(["TableClickedAssigned", $("#LastSectionSelected").val() ]));
							}
						}
					}
				}
				$(".btnpayment").attr({"disabled": true});
			}
		}

		/*
		|--------------------------------------------------------|
		| Receipt PDF
		|--------------------------------------------------------|
		*/
		if(data.PDFReceipt){
			var PathReceiptPDF = base_url + data.PDFReceipt;
			testpdf_receipt(PathReceiptPDF);
		}

		if(data.OpenPayment == 1){
			PaymentView();
		}

		QtyBufferReset = '';
		QtyBufferPanel = '';
		$("#currentBeforeQty").text('CLR');
	}

	function testpdf_receipt (pathToPdf) {
		const frame = document.createElement('iframe')
		frame.src = pathToPdf.trim()
		frame.style = "display:none;";
		const container = document.getElementsByTagName('body') // this will return a NodeList
		container[0].appendChild(frame);
		frame.contentWindow.print();
	}

	$("#printer_status_window").on("close", function(e){
		e.preventDefault();
		$("#printer_status_window_container").html('');
	})

	var populatePrinterStatus = function(form, msg){
		var def = $.Deferred();
		setTimeout(function(){
			$("#printer_status_window").append('<div id="printer_status_window_container" style="background: #144766; color:#EEE;"></div>');
			$("#printer_status_window_container").html('');
			var html = '<form id="'+form+'">'+
							'<h4>'+msg+'</h4>'+
							'<input type="text" class="hdfield" id="number_field" style="display:none;" />'+
							'<br/>'+
							'<div id="printer_status"></div>'+
						'</form>'
			$("#printer_status_window_container").append(html);
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupPrinterStatus = function(header_text){
		var def = $.Deferred();
		setTimeout(function(){
			$("#printer_status_window").jqxWindow({
				height: 300,
				minWidth: 450,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				zIndex: 99999,
			});
			setTimeout(function(){
				$('#printer_status_window').jqxWindow('setTitle', header_text);
				$('#printer_status_window').jqxWindow('open');
			},100);
			
			def.resolve();	
		},100);
		return def.promise();
	}

	var PrinterStatusWindow = function(form, msg){
		var def = $.Deferred();
		populatePrinterStatus(form, msg)
		.then(function(){
			$('#printer_status').hdkeyboard({
			  layout: "alert_close",
			  input: $('#number_field')
			});
			def.resolve();
		});
		return def.promise();
	}
		
	$(document).on('submit', '#add_item_without_stock_menu', function(e){
		e.preventDefault();
		//var ItemUnique = $("#use_value").val();
		var ItemUnique 		= WarningStockArray[0];
		var PromptDesk 		= WarningStockArray[1];
		var PromptPrice		= WarningStockArray[2];
		var ItemNumber  	= WarningStockArray[3];
		var ItemPart		= WarningStockArray[4];
		var ItemDesc 		= WarningStockArray[5];
		var ItemPrice		= WarningStockArray[6];
		var ItemWeight 		= WarningStockArray[7];
		var ItemPoints 		= WarningStockArray[8];
		var ItemCost 		= WarningStockArray[9];
		var ItemCostExtra 	= WarningStockArray[10];
		var ItemCostFreight = WarningStockArray[11];
		var ItemCostDuty 	= WarningStockArray[12];
		var ItemCustom1 	= WarningStockArray[13];
		var ItemNo 			= WarningStockArray[14];
		var ItemEBT 		= WarningStockArray[15];
		var ItemPrice1 		= WarningStockArray[16];
		var ItemListPrice	= WarningStockArray[17];
		var ItemMinimumAge 	= WarningStockArray[18];
		var ItemType 		= WarningStockArray[19];
		var ItemPriceModify = WarningStockArray[20];
		var ItemDescriptionKitchen = WarningStockArray[21];
		ProcessAddItemMenu(ItemUnique, PromptDesk, PromptPrice, ItemNumber, ItemPart, ItemDesc, ItemPrice, ItemWeight, ItemPoints, ItemCost, ItemCostExtra, ItemCostFreight, ItemCostDuty, ItemCustom1, ItemNo, ItemEBT, ItemPrice1, ItemListPrice, ItemMinimumAge, ItemType, ItemPriceModify, ItemDescriptionKitchen);
		//$("#barcode_search").attr("disabled", false);
		//$("#barcode_search").focus();
		$("#dialog-numpad-alert").jqxWindow('close');
	})

	$(document).on('click', '#add_item_without_stock_menu .alert_no', function(e){
		$("#barcode_search").prop('disabled', false);
		$("#dialog-numpad-alert").jqxWindow('close');
		$("#barcode_search").focus();
	})

	//-->Set Select Item in Order List
	var getItemInformation = [];
	var ItemQuantity = '';
	var ItemPriceQtyArray = [];
	$scope.getItemDiscount = 0;
	$scope.setSelected = function(ReceiptDestailsUnique, ItemUnique, SellPrice, Description, price1, PriceQty1, price2, PriceQty2, price3, PriceQty3, price4, PriceQty4, price5, PriceQty5, Quantity, Discount, ListPrice) {
		ItemPriceQtyArray = [];
		
		getItemInformation = [
			Description,
			ListPrice, 
			SellPrice,
			Discount 
		];

		if ($scope.lastSelected) {
			$scope.lastSelected.selected = '';
		}
		$scope.getItemDiscount = Discount; 
		ItemQuantity = Quantity;
		$scope.ItemUnique = ItemUnique;
		$scope.ReceiptDetailsUnique = ReceiptDestailsUnique;
		$scope.SelectedSellPrice = parseFloat(SellPrice).toFixed(2);
		$scope.SelectedDescription = Description;
		this.selected = 'selected';
		$scope.lastSelected = this;
		GlobalItemUnique.Unique = ReceiptDestailsUnique;
		var postData = "Unique="+ReceiptDestailsUnique;
		posData.TaxChecker(postData)
		.success(function(data){
			if(data.success == true){
				//-->Show Button No Item Tax
				$scope.ItemNoTaxHide = false;
				$scope.ItemTaxHide = true;
				}else{
				//-->Show Button Item Tax
				$scope.ItemTaxHide = false;
				$scope.ItemNoTaxHide = true;
			}
		})
		ItemPriceQtyArray.push({
			"Unique" : ItemUnique,
			[parseFloat(PriceQty1).toFixed(2)] : parseFloat(SellPrice).toFixed(2), //change from price1 to  2/12/2020
			[parseFloat(PriceQty2).toFixed(2)] : parseFloat(price2).toFixed(2), 
			[parseFloat(PriceQty3).toFixed(2)] : parseFloat(price3).toFixed(2), 
			[parseFloat(PriceQty4).toFixed(2)] : parseFloat(price4).toFixed(2), 
			[parseFloat(PriceQty5).toFixed(2)] : parseFloat(price5).toFixed(2)
		});

		// console.log(ItemPriceQtyArray);
	};
	
	$scope.showModal = false;
	$scope.showModalDiscountItem = false;
	$scope.itemdiscfield = "";
	$scope.showModalDiscountReceipt = false;
	$scope.showModalPriceChange = false;
	$scope.showModalQuantityChange = false;
	$scope.showModalRecallSale = false;
	$scope.itemDiscount = 0.00;
	$scope.ItemNoTaxHide = false;
	$scope.ItemTaxHide = true;
	$scope.ReceiptNoTaxHide = false;
	$scope.ReceiptTaxHide = true;

	var SetOrderTypeNo;
	$scope.toggleModal = function(){
		$("#toggleModalfunction").attr("disabled", true);
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				posData.NewSaleQue()
				.success(function(data){
					if(data.success == true){
						$scope.QueReceiptHeaderUnique = data.ReceiptHeaderUnique;
						$scope.newsaleqshowModal = !$scope.newsaleqshowModal;
					}else if(data.success == false){
						posData.NewSale()
						.success(function(data){
							if(data.success == true){
								$scope.newsaleid = data.NewSaleId;
								$scope.showModal = false;
								load_data(data);
								// GetCustomerSave();
								PoleDisplayReset();
								setTimeout(function(){
									GetSelectedCustomer();
								},500)
								$("#barcode_search").focus();
								ItemsCategoryView();
								ordertype();
								if($("#TableOrder").val() == 1){
									if($("#PoleDisplay").val() == 2){
										if(ConnectionPoleDisplay){
											if(tableconn){
												tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
											}
										}
									}
								}

								var TableNumberChange   = $("#TableNumberChange").val();
								var TableCustomerNo     = $("#TableCustomerNo").val();
								if(TableCustomerNo == 1){
									var OrderTypePopup = $("#POSOrderTypeRequired").val();
									if(OrderTypePopup == 2){
										posData.OrderTypePopupList()
										.success(function(data){
											if(data.OrderType == null || data.OrderType == ''){
												OrderTypeIDApp = data.Default;
												OrderTypeWindowApp('OrderTypePopupAppNewSale', data.html)
												.then(function(){
													WindowPopupOrderTypeApp('Order type');
												})
											}else{
												$("#customercount").trigger('click');
											}
										})
									}else{
										$("#customercount").trigger('click');
									}
								}
							}
							//GotoCashierMenu = false;
						})
					}
				}).then(function(){
					setTimeout(function(){
						$("#toggleModalfunction").attr("disabled", false);
					},500);
				})
			}else{
				var msg = result.msg;
				NumpadAlertClose('new_sale_cashin', msg)
				.then(function(){
					WindowPopupAlert("Information")
				})
				setTimeout(function(){
					$("#toggleModalfunction").attr("disabled", false);
				},500);
			}
		})
	};

	$scope.CancelReceipt = function(){
		var postData = "ReceiptHeaderUnique="+$scope.QueReceiptHeaderUnique;
		posData.CancelReceipt(postData)
		.success(function(data){
			if(data.success == true){
				$scope.newsaleqshowModal = false;
				LoadOrderedItemList();
				LoadTotals()
				.then(function(){
					POSTotal();
				})
				LoadTax();
				LoadEBT();
				LoadDiscount();
				ReceiptTaxChecker();
				EnableDisablePayment();
				GlobalCustomer = null;
				$scope.customer = {
					selected: 'Guest',
					id: ''
				}
			}else if (data.success == false){
				$scope.alert = {
					message: "Please void payments first."
				};
				Alertdialog.setTitle("Cancel Receipt");
				Alertdialog.open();
			}
		})
	};

	//-->Put On Hold Sale 12*04*17
	$scope.PutOnHold = function(){
		// $scope.newsaleqshowModal = !$scope.newsaleqshowModal;
		var postdata ="FunctionButton=OnHold";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'OnHold';
				NumpadPasscode('putonhold_passcode')
				.then(function(){
					WindowPopupPasscode('Put On Hold')
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#OnHoldfunction").attr("disabled", false);
			}else{
				var OrderTypePopup = $("#POSOrderTypeRequired").val();
				if(OrderTypePopup > 0){
					if($("#OrderTypeName").val() <= 0){
						posData.OrderTypePopupList()
						.success(function(data){
							if(data.OrderType == null || data.OrderType == ''){
								OrderTypeIDApp = data.Default;
								OrderTypeWindowApp('OrderTypePopupPutOnHold', data.html)
								.then(function(){
									WindowPopupOrderTypeApp('Order type')
								})
							}else{
								PutOnHoldFunction();
							}
						})
					}else{
						PutOnHoldFunction();
					}
				}else{
					PutOnHoldFunction();
				}
			}
		})
	};

	$(document).on('submit', '#putonhold_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var OrderTypePopup = $("#POSOrderTypeRequired").val();
						if(OrderTypePopup > 0){
							if($("#OrderTypeName").val() <= 0){
								posData.OrderTypePopupList()
								.success(function(data){
									OrderTypeIDApp = data.Default;
									OrderTypeWindowApp('OrderTypePopupPutOnHold', data.html)
									.then(function(){
										WindowPopupOrderTypeApp('Order type')
									})
								})
							}else{
								PutOnHoldFunction();
							}
						}else{
							PutOnHoldFunction();
						}
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	//-->Put On Hold Sale Old
	$scope.PutOnHoldOld = function(){
		var OrderTypePopup = $("#POSOrderTypeRequired").val();
		if(OrderTypePopup > 0){
			if($("#OrderTypeName").val() <= 0){
				posData.OrderTypePopupList()
				.success(function(data){
					if(data.OrderType == null || data.OrderType == ''){
						OrderTypeIDApp = data.Default;
						OrderTypeWindowApp('OrderTypePopupPutOnHold', data.html)
						.then(function(){
							WindowPopupOrderTypeApp('Order type')
						})
					}else{
						PutOnHoldFunction();
					}
				})
			}else{
				PutOnHoldFunction();
			}
		}else{
			PutOnHoldFunction();
		}
	};

	var PutOnHoldFunction = function(){
		$scope.newsaleqshowModal = false;
		posData.CheckSettingRequiredLabel()
		.success(function(data){
			if(data.OnHoldRequireLabel !== '1'){
				//KitchenPrintReceipt("PutOnHoldPrinterStatus")
				//.then(function(){
					//PutOnHoldReceipt()
					OnHoldFunction()
					.then(function(){
						if(GotoCashierMenu){
							$window.location = base_url + 'pos/cashier';
						}else{
							ItemsCategoryView();
						}
					})
				//});
			}else{
				$("#custom_item_keyboard").html('');
				var type = 7;
				posData.CheckReceiptNote()
				.success(function(data){
					if(data.RNotes == '' || data.RNotes == null){
						NumpadKeyboard('receipt_note_form_onhold')
						.then(function(){
							WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
							.then(function(){
								setTimeout(function(){
									var searchInput = $('#search_field');
									var strLength = searchInput.val(data.RNotes).length * 25;
									searchInput.focus();
									searchInput[0].setSelectionRange(strLength, strLength);
								},100);
							})
						})
					}else{
						//KitchenPrintReceipt("PutOnHoldPrinterStatus")
						//.then(function(){
							//PutOnHoldReceipt()
							OnHoldFunction()
							.then(function(){
								if(GotoCashierMenu){
									$window.location = base_url + 'pos/cashier';
								}else{
									ItemsCategoryView();
								}
							})
						//});
					}
				})
			}
		})
	}

	$(document).on("submit", "#OrderTypePopupPutOnHold", function(e){
		e.preventDefault();
		if(OrderTypeIDApp > 0){
			$("#OrderType").val(OrderTypeIDApp);
			$("#ordertype-popup").jqxWindow('close');
			var postdata ="OrderTypeUnique="+OrderTypeIDApp;
			posData.SetOrderType(postdata)
			.success(function(data){
				PutOnHoldFunction();
			})
		}else{
			var msg = "Select Order Type";
			NumpadAlertClose('ordertype_options', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			});
		}
		
	})

	$scope.ReturnDisplay = function(){
		$scope.newsaleqshowModal = false;
		GotoCashierMenu = false;
	};

	$scope.yes = function(){
		//-->SaleType = 1
		posData.NewSale()
		.success(function(data){
			if(data.success == true){
				$scope.newsaleid = data.NewSaleId;
				$scope.showModal = false;
			}
			load_data(data);
			}).then(function(){
			// GetCustomerSave();
			//LoadHeaderInfo();
			//LoadOrderedItemList();
			//LoadTax();
			//ReceiptTaxChecker();
			//LoadEBT();
			//LoadDiscount();
			//LoadPayments();
			//LoadChange();
			//CheckReceiptStatus();
			setTimeout(function(){
				GetSelectedCustomer();
			},500)
			//LoadTotals()
			//.then(function(){
			//	POSTotal()
			//	.then(function(){
					PoleDisplayReset();
			//	})
			//})
			$("#barcode_search").focus();
			ItemsCategoryView();
		});
	};

	$scope.no = function(){
		$scope.showModal = false;
	};
		
	//Discount
	var populateNumpadDiscount = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-discount").append('<div id="discount_numpad" style="background: #144766; color:#EEE;"></div>');
			$("#discount_numpad").html('');
			if(form_name == 'item_discount_percent_form' || form_name == 'item_discount_dollar_form' || form_name == 'item_discount_dollar_prompt' || form_name == 'item_discount_percent_prompt'){
				$("#discount_numpad").append(''+
				'<div class="discount-item-info" style="margin-bottom: 5px;">'+
					'<div class="" style="font-weight:bold;">Item: '+$scope.itemno+'</div>'+
					'<div class="" style="font-weight:bold;">Description: '+$scope.itemdesc+'</div>'+
				'</div>'+
				'');
			}
			if(form_name == 'item_discount_percent_form' || form_name == 'receipt_discount_percent_form' || form_name == 'item_discount_percent_prompt' || form_name == 'receipt_discount_percent_prompt' || form_name == 'item_line_discount_percent_form'){
				$("#discount_numpad").append('<h4 style="text-align:center;">Enter % Discount</h4>');
			}else if(form_name == 'item_discount_dollar_form' || form_name == 'receipt_discount_dollar_form' || form_name == 'item_discount_dollar_prompt' || form_name == 'receipt_discount_dollar_prompt' || form_name == 'item_line_discount_dollar_form'){
				$("#discount_numpad").append('<h4 style="text-align:center;">Enter $ Discount</h4>');
			}
			
			$("#discount_numpad").append(''+
			'<form id="'+form_name+'">'+
				//'<input type="text" id="number_field" class="hdfield" maxlength="'+NumpadPriceInputLimit+'" style="color:#000">'+
				'<div id="discount_field" class="hdfield"></div> '+
				'<div id="discount_keyboard"></div>'+
			'</form>');
			$("#discount_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val()});
			$('#discount_field').on('change', function (event) {
				var value = event.args.value;
				var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
				myNumber = value;
			}); 
			def.resolve();
		},100);
		return def.promise();
	}
		
	var WindowPopupDiscount = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			var ParentWidth = $("#wrapper").width();
			var ComputeWidth = (ParentWidth / 2);
			var UseWidth = (ComputeWidth);
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#dialog-numpad-discount").jqxWindow({
				/*
				height: 750,
				minWidth: 300,
				width: UseWidth,
				*/
				// title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#dialog-numpad-discount').jqxWindow('setTitle', header_title);
			$('#dialog-numpad-discount').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadDiscount = function(discount_type, discount_list = false){
		var def = $.Deferred();
		var uselayout = 'numeric';
		if(discount_list){
			uselayout = 'numeric';
		}
		populateNumpadDiscount(discount_type)
		.then(function(){
			$('#discount_keyboard').numeric_numpad({
				layout: uselayout,
				input: $('#discount_field')
			});
			def.resolve();
		});
		return def.promise();
	}
		
	//-->Discount Item;
	$scope.DiscountItemPercent = function(){
		$("#DiscountItemPercentfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		if(SelectedItem){
			var postdata ="FunctionButton=DiscountItemPercent";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'DiscountItemPercent';
					NumpadPasscode('discount_item_percent_passcode')
					.then(function(){
						WindowPopupPasscode('Discount Item Percent')
						.then(function(){
							$("#number_field").focus();
						})
					})
				}else{
					var SelectedItem = GlobalItemUnique.Unique;
					var postDataItemInfo="Unique="+SelectedItem;
					posData.ItemInfo(postDataItemInfo)
					.success(function(data){
						$scope.iteminfo = data;
						$scope.itemno = data.Item;
						$scope.itemdesc = data.Description;
						NumpadDiscount('item_discount_percent_form', true)
						.then(function(){
							WindowPopupDiscount('Discount Item Percent')
							.then(function(){
								$("#discount_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#discount_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#discount_field input").select();
								},100)
							})
						})
					})
				}
			})
		}else{
			var msg = "Please select item first.";
			NumpadAlertClose('discount_item_percent_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Dollar')
			});
		}
		setTimeout(function(){
			$("#DiscountItemPercentfunction").attr("disabled", false); 	
		},1000);
	};

	$(document).on("submit", "#discount_item_percent_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						$("#dialog-numpad-passcode").jqxWindow('close');
						var SelectedItem = GlobalItemUnique.Unique;
						var postDataItemInfo="Unique="+SelectedItem;
						posData.ItemInfo(postDataItemInfo)
						.success(function(data){
							$scope.iteminfo = data;
							$scope.itemno = data.Item;
							$scope.itemdesc = data.Description;
							NumpadDiscount('item_discount_percent_form', true)
							.then(function(){
								WindowPopupDiscount('Discount Item Percent')
								.then(function(){
									$("#discount_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#discount_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#discount_field input").select();
									},100)
								})
							})
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
		
	$(document).on('submit', '#item_discount_percent_form', function(e){
		e.preventDefault();
		if($("#discount_field").val() >= 0){
			var Unique = GlobalItemUnique.Unique;
			var EnterDiscountAmount = $("#discount_field").val();
			if(EnterDiscountAmount == ''){
				EnterDiscountAmount = 0.00;
			}

			NewDiscountAmount = EnterDiscountAmount;
			NewOptionDiscount = 1;
			
			var ItemSelInfo 	= $(".selected").attr('id');
			// var itemListPrice = $(".selected").find('.line2sell').text();
			var ItemSelInfoPrice= ItemSelInfo.split('=')[11];
			
			var ExistingDiscount = 0;
			var ItemInfoDisc = $(".selected").find('.line2disc').text();
			ExistingDiscount = ItemInfoDisc;

			var ConverDiscountPercent = EnterDiscountAmount / 100;
			var DiscountPercentDollar = (ConverDiscountPercent * ItemSelInfoPrice);
			var NewDiscountPercentDollar = parseFloat(DiscountPercentDollar) + parseFloat(ExistingDiscount); 
			$scope.DiscountAmountField = DiscountPercentDollar;
			
			if($scope.getItemDiscount > 0 && DiscountPercentDollar > 0){

				$scope.DiscountAmountField = EnterDiscountAmount;

				AccessToOpenDiscountContent("item_line_discount_"+(DiscountType == "Percent" ? "percent" : "dollar")+"_form_three", "Discount item percent", parseInt(EnterDiscountAmount), 'percent');
				
				$("#dialog-numpad-discount").jqxWindow("close");

				return;
			}

			if( parseFloat(NewDiscountPercentDollar) > parseFloat($scope.DiscountSecurityAmount) && EnterDiscountAmount != 0 && parseFloat($scope.DiscountSecurityAmount) != 0){
				$scope.DiscountAmountField = EnterDiscountAmount;
				$scope.FunctionButton = 'DiscountItemPercent';
				NumpadPasscode('discount_item_security_percent_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Item Percent ' + ($scope.DiscountSecurityAmount ? '| Limit ' + $scope.DiscountSecurityAmount : ''))
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#dialog-numpad-discount").jqxWindow('close');

				return;
			}

			$scope.DiscountAmountField = 0;

			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType=Percent";
			posData.DiscountBelowCostPage2(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var DiscountAmount = EnterDiscountAmount
					var postDataDiscountSave="optiondiscount="+1;
						postDataDiscountSave+="&discountamount="+DiscountAmount;
						postDataDiscountSave+="&unique="+Unique;
					posData.DiscountItem(postDataDiscountSave)
					.success(function(data){
						if(data.success == true){
							load_data(data);
							$("#dialog-numpad-discount").jqxWindow('close');
							GlobalItemUnique = {};
							PoleDisplay(Unique);
						}else{
							$("#dialog-numpad-discount").jqxWindow('close'); 
							var msg = "Discount must be less than the item amount";
							NumpadAlertClose('discount_item_percent_alert', msg)
							.then(function(){
								WindowPopupAlert('Discount Item Percent')
							});
						}
						$("#barcode_search").focus();
					})
				}
				$("#dialog-numpad-discount").jqxWindow('close');
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close'); 
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_item_percent_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Percent')
			});
		}
	})

	$(document).on('submit', '#rediscount_item_security_percent_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						if(parseFloat($scope.DiscountAmountField) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact your manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						AccessToOpenDiscountContent("item_line_discount_"+(DiscountType == "Percent" ? "percent" : "dollar")+"_form_two", "Discount item percent", (DiscountType == 'Percent' ? parseInt($scope.DiscountAmountField) : parseFloat($scope.DiscountAmountField).toFixed(2)) , (DiscountType == 'Percent' ? "percent" : "dollar"));
						
						$("#dialog-numpad-passcode").jqxWindow('close');
						
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
		
	$scope.DiscountItemDollar = function(){
		$("#DiscountItemDollarfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		if(SelectedItem){
			var postdata ="FunctionButton=DiscountItemDollar";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'DiscountItemDollar';
					NumpadPasscode('discount_item_dollar_passcode')
					.then(function(){
						WindowPopupPasscode('Discount Item Dollar')
						.then(function(){
							$("#number_field").focus();
						})
					})
				}else{
					var postDataItemInfo = "Unique="+SelectedItem;
					posData.ItemInfo(postDataItemInfo)
					.success(function(data){
						$scope.iteminfo = data;
						$scope.itemno = data.Item;
						$scope.itemdesc = data.Description;
						NumpadDiscount('item_discount_dollar_form', true)
						.then(function(){
							WindowPopupDiscount('Discount Item Dollar')
							.then(function(){
								$("#discount_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#discount_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#discount_field input").select();
								},100)
							})
						})
					})
				}
			})
		}else{
			var msg = "Please select item first.";
			NumpadAlertClose('discount_item_percent_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Dollar')
			});
		}
		setTimeout(function(){
			$("#DiscountItemDollarfunction").attr("disabled", false); 	
		},1000);
	};

	$(document).on("submit", "#discount_item_dollar_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var SelectedItem = GlobalItemUnique.Unique;
						$("#dialog-numpad-passcode").jqxWindow('close');
						var postDataItemInfo = "Unique="+SelectedItem;
						posData.ItemInfo(postDataItemInfo)
						.success(function(data){
							$scope.iteminfo = data;
							$scope.itemno = data.Item;
							$scope.itemdesc = data.Description;
							NumpadDiscount('item_discount_dollar_form', true)
							.then(function(){
								WindowPopupDiscount('Discount Item Dollar')
								.then(function(){
									$("#discount_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#discount_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#discount_field input").select();
									},100)
								})
							})
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
	
	var NewDiscountAmount = 0;
	var NewOptionDiscount = 0;
	$(document).on('submit', '#item_discount_dollar_form', function(e){
		e.preventDefault();
		if($("#discount_field").val() > 0){
			var Unique = GlobalItemUnique.Unique;
			var EnterDiscountAmount = $("#discount_field").val();
			if(EnterDiscountAmount == ''){
				EnterDiscountAmount = 0.00;
			}
			NewDiscountAmount = EnterDiscountAmount;
			NewOptionDiscount = 2;			
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType=Dollar";
			posData.DiscountBelowCostPage2(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var DiscountAmount = EnterDiscountAmount;
					var postDataDiscountSave="optiondiscount="+2;
						postDataDiscountSave+="&discountamount="+DiscountAmount;
						postDataDiscountSave+="&unique="+Unique;
					posData.DiscountItem(postDataDiscountSave)
					.success(function(data){
						if(data.success == true){
							load_data(data);
							$("#dialog-numpad-discount").jqxWindow('close');
							GlobalItemUnique = {};
							PoleDisplay(Unique);
						}else{
							$("#dialog-numpad-discount").jqxWindow('close');
							var msg = "Discount must be less than the item amount";
							NumpadAlertClose('discount_item_dollar_alert', msg)
							.then(function(){
								WindowPopupAlert('Discount Item Dollar')
							});
						}
					}).then(function(){
						$('#barcode_search').focus();
					})
				}
				$("#dialog-numpad-discount").jqxWindow('close');
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close');
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_item_dollar_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Dollar')
			});
		}
	})

	$(document).on('click', '#discount_below_cost_yes2', function(e){
		e.preventDefault();
		$scope.FunctionButton = "SellBelowCost";
		var postdata ="FunctionButton=SellBelowCost";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'SellBelowCost';
				NumpadPasscode('discount_below_cost_passcode2')
				.then(function(){
					WindowPopupPasscode('Sell Below Price')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				var Unique = GlobalItemUnique.Unique;
				var postDataDiscountSave="optiondiscount="+NewOptionDiscount;
					postDataDiscountSave+="&discountamount="+NewDiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
					postDataDiscountSave+="&discountunique="+DiscountUnique;
					postDataDiscountSave+="&discountname="+DiscountName;
					postDataDiscountSave+="&DiscountApply="+DiscountApply;
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						$("#dialog-numpad-discount").jqxWindow('close');
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close');
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_dollar_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Dollar')
						});
					}
					$("#sell_below_cost").jqxWindow('close');
					NewDiscountAmount = 0;
					NewOptionDiscount = 0;
					$('#barcode_search').focus();
				})
			}
			$("#sell_below_cost").jqxWindow('close');
		})
	})

	$(document).on('submit', '#discount_below_cost_passcode2', function(e){
		e.preventDefault();
		var Unique = GlobalItemUnique.Unique;
		var CardRead = $("#number_field").val();
        var CRP = new CardReaderParser(CardRead);
        if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var postDataDiscountSave="optiondiscount="+NewOptionDiscount;
							postDataDiscountSave+="&discountamount="+NewDiscountAmount;
							postDataDiscountSave+="&unique="+Unique;
							postDataDiscountSave+="&discountunique="+DiscountUnique;
							postDataDiscountSave+="&discountname="+DiscountName;
							postDataDiscountSave+="&DiscountApply="+DiscountApply;
						posData.DiscountItem(postDataDiscountSave)
						.success(function(data){
							if(data.success == true){
								load_data(data);
								$("#dialog-numpad-discount").jqxWindow('close');
								GlobalItemUnique = {};
								PoleDisplay(Unique);
							}else{
								$("#dialog-numpad-discount").jqxWindow('close');
								var msg = "Discount must be less than the item amount";
								NumpadAlertClose('discount_item_dollar_alert', msg)
								.then(function(){
									WindowPopupAlert('Discount Item Dollar')
								});
							}
							$("#sell_below_cost").jqxWindow('close');
							NewDiscountAmount = 0;
							NewOptionDiscount = 0;
							$('#barcode_search').focus();
							$("#dialog-numpad-passcode").jqxWindow("close");
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#discount_below_cost_no2', function(e){
		e.preventDefault();
		NewDiscountAmount = 0;
		NewOptionDiscount = 0;
		$("#sell_below_cost").jqxWindow('close');
	})

	$scope.DiscountItemno = function(){
		dialogDiscountItemForm.close();
		$scope.discountItem = {
			amount: 0
		};
	};
	
	
	var LocationRequest = function(){
		var recall_location="recall_location=pos/pointofsale"
		posData.RecallLocationRequest(recall_location)
		.success(function(data){
			if(data.success == true)
			$window.location = base_url + "pos/pointofsale/recall-sale";
		})
	}

	var QuickOnHold = function(){
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Recall processing please wait...' });

		var def = new $.Deferred();
		setTimeout(function(){
			var postdata ="OrderType=" + OrderTypeSelDescription;
				postdata+="&ReceiptHeaderUnique="+GlobalReceiptHeaderUnique;
			posData.OnHold(postdata)
			.success(function(data){
				if(data.success){
					OnHoldClicked();
					// GlobalCustomer = null;
					// $scope.customer = {
					// 	selected: 'Guest',
					// 	id:''
					// }
					$scope.RemoveCustomerWhen = false;
					$scope.BtnPaymentWhen = true;
					$scope.KitchenNoteDisabled = true;
					PoleDisplayReset();
					load_data(data);
				}
				setTimeout($.unblockUI, 100); 
				def.resolve();
			});
		},100); 
		return def.promise();
	}

	var TableQuickOnHold = function(){
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Processing please wait...' });
		var def = new $.Deferred();
		setTimeout(function(){
			var postdata ="OrderType="+$("#OrderType").val();
			posData.TableQuickOnHold(postdata)
			.success(function(data){
				if(data.success == true){
					load_data(data);
					GlobalCustomer = null;
					$scope.customer = {
						selected: 'Guest',
						id:''
					}
					PoleDisplayReset();
				}
				setTimeout($.unblockUI, 100);
				def.resolve();
			});
		},100); 
		return def.promise();
	}

	$scope.ReCall = function(){
		$("#Recallfunction").attr("disabled", true);
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				posData.RecallFirstCheck()
				.success(function(firstdata){
					if(firstdata.OnHoldRequireLabel != 1){
						if(firstdata.success == true){
							var OrderTypePopup = $("#POSOrderTypeRequired").val();
							if(OrderTypePopup > 0){
								if($("#OrderTypeName").val() <= 0){
									var postdata ="FunctionButton=OnHold";
									posData.CheckUserManagerCookie(postdata)
									.success(function(CUMdata){
										if(CUMdata.prompt){
											$scope.FunctionButton = 'OnHold';
											NumpadPasscode('completed_ordertype_no_label_required_w_ordertype_notset_passcode')
											.then(function(){
												WindowPopupPasscode('On Hold')
												.then(function(){
													$("#number_field").focus();
												})
											})
											$("#OnHoldSalefunction").attr("disabled", false);
										}else{
											posData.OrderTypePopupList()
											.success(function(data){
												if(data.OrderType == null || data.OrderType == ''){
													OrderTypeIDApp = data.Default;
													OrderTypeWindowApp('RecallOrderType', data.html)
													.then(function(){
														WindowPopupOrderTypeApp('Order type')
													})
												}else{
													posData.EmptyTransactionCompleted()
													.success(function(data){
														RecallOrderTypeFunction();
													})
												}
											})
										}
									})
								}else{
									posData.NewSaleQue()
									.success(function(a_data){
										if(a_data.success){
											var postdata ="FunctionButton=OnHold";
											posData.CheckUserManagerCookie(postdata)
											.success(function(CUMdata){
												if(CUMdata.prompt){
													$scope.FunctionButton = 'OnHold';
													NumpadPasscode('completed_ordertype_no_label_required_w_ordertype_isset_passcode')
													.then(function(){
														WindowPopupPasscode('On Hold')
														.then(function(){
															$("#number_field").focus();
														})
													})
													$("#OnHoldSalefunction").attr("disabled", false);
												}else{
													posData.RecallCheckPrevReceiptStatus()
													.success(function(data){
														if(data.Status == 4){
															LocationRequest();
														}else{
															posData.EmptyTransactionCompleted()
															.success(function(data){
																RecallOrderTypeFunction();
															})
														}
													})
												}
											})
										}else{
											posData.RecallCheckPrevReceiptStatus()
											.success(function(data){
												if(data.Status == 4){
													LocationRequest();
												}else{
													posData.EmptyTransactionCompleted()
													.success(function(data){
														RecallOrderTypeFunction();
													})
												}
											})
											$("#OnHoldSalefunction").attr("disabled", false);
										}
									})
								}
							}else{
								posData.NewSaleQue()
								.success(function(b_data){
									if(b_data.success){
										var postdata ="FunctionButton=OnHold";
										posData.CheckUserManagerCookie(postdata)
										.success(function(CUMdata){
											if(CUMdata.prompt){
												$scope.FunctionButton = 'OnHold';
												NumpadPasscode('completed_ordertype_label_required_no_ordertype_passcode')
												.then(function(){
													WindowPopupPasscode('On Hold')
													.then(function(){
														$("#number_field").focus();
													})
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}else{
												posData.RecallCheckPrevReceiptStatus()
												.success(function(data){
													if(data.Status == 4){
														LocationRequest();
													}else{
														posData.EmptyTransactionCompleted()
														.success(function(data){
															RecallOrderTypeFunction();
														})
													}
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}
										})
									}else{
										// test here
										posData.RecallCheckPrevReceiptStatus()
										.success(function(data){
											if(data.Status == 4){
												LocationRequest();
											}else{
												posData.EmptyTransactionCompleted()
												.success(function(data){
													RecallOrderTypeFunction();
												})
											}
										})
										$("#OnHoldSalefunction").attr("disabled", false);	
									}
								})
							}
						}else{
							posData.NewSaleQue()
							.success(function(c_data){
								if(c_data.success){
									var postdata ="FunctionButton=OnHold";
									posData.CheckUserManagerCookie(postdata)
									.success(function(CUMdata){
										if(CUMdata.prompt){
											$scope.FunctionButton = 'OnHold';
											NumpadPasscode('completed_no_ordertype_passcode')
											.then(function(){
												WindowPopupPasscode('On Hold')
												.then(function(){
													$("#number_field").focus();
												})
											})
											$("#OnHoldSalefunction").attr("disabled", false);
										}else{
											posData.EmptyTransactionCompleted()
											.success(function(data){
												RecallOrderTypeFunction();
											})
										}
									})
								}else{
									posData.RecallCheckPrevReceiptStatus()
									.success(function(data){
										if(data.Status == 4){
											LocationRequest();
										}else{
											posData.EmptyTransactionCompleted()
											.success(function(data){
												RecallOrderTypeFunction();
											})
										}
									})
									$("#OnHoldSalefunction").attr("disabled", false);	
								}
							})
						}
					}else{
						posData.NewSaleQue()
						.success(function(d_data){
							if(d_data.success == true){
								$("#custom_item_keyboard").html('');
								var OrderTypePopup = $("#POSOrderTypeRequired").val();
								if(OrderTypePopup > 0){
									if($("#OrderTypeName").val() <= 0){
										var postdata ="FunctionButton=OnHold";
										posData.CheckUserManagerCookie(postdata)
										.success(function(CUMdata){
											if(CUMdata.prompt){
												$scope.FunctionButton = 'OnHold';
												NumpadPasscode('completed_ordertype_w_label_passcode')
												.then(function(){
													WindowPopupPasscode('On Hold')
													.then(function(){
														$("#number_field").focus();
													})
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}else{
												posData.OrderTypePopupList()
												.success(function(data){
													if(data.OrderType == null || data.OrderType == ''){
														OrderTypeIDApp = data.Default;
														OrderTypeWindowApp('RecallOrderTypeRequiredLabel', data.html)
														.then(function(){
															WindowPopupOrderTypeApp('Order type')
														})
													}else{
														RecallOrderTypeRequiredLabel();
													}
												})
											}
										})
									}else{
										var postdata ="FunctionButton=OnHold";
										posData.CheckUserManagerCookie(postdata)
										.success(function(CUMdata){
											if(CUMdata.prompt){
												$scope.FunctionButton = 'OnHold';
												NumpadPasscode('completed_no_ordertype_w_label_passcode')
												.then(function(){
													WindowPopupPasscode('On Hold')
													.then(function(){
														$("#number_field").focus();
													})
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}else{
												RecallOrderTypeRequiredLabel();
											}
										})
									}
								}else{
									var postdata ="FunctionButton=OnHold";
									posData.CheckUserManagerCookie(postdata)
									.success(function(CUMdata){
										if(CUMdata.prompt){
											$scope.FunctionButton = 'OnHold';
											NumpadPasscode('completed_no_ordertype_w_label_passcode')
											.then(function(){
												WindowPopupPasscode('On Hold')
												.then(function(){
													$("#number_field").focus();
												})
											})
											$("#OnHoldSalefunction").attr("disabled", false);
										}else{
											RecallOrderTypeRequiredLabel();
										}
									})
								}
							}else{
								posData.RecallCheckPrevReceiptStatus()
								.success(function(data){
									if(data.Status == 4){
										LocationRequest();
									}else{
										RecallOrderTypeFunction();
									}
								})
								$("#OnHoldSalefunction").attr("disabled", false);	
							}
						})
					}
				})
				setTimeout(function(){
					$("#Recallfunction").attr("disabled", false);
				},1000);
			}else{
				var msg = result.msg;
				NumpadAlertClose('onhold_disabled', msg)
				.then(function(){
					WindowPopupAlert("Information")
				})
				$("#Recallfunction").attr("disabled", false);
			}
		})
	}

	$(document).on('submit', '#completed_ordertype_no_label_required_w_ordertype_notset_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						posData.OrderTypePopupList()
						.success(function(data){
							OrderTypeIDApp = data.Default;
							OrderTypeWindowApp('RecallOrderType', data.html)
							.then(function(){
								WindowPopupOrderTypeApp('Order type')
							})
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#completed_ordertype_no_label_required_w_ordertype_isset_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						posData.RecallCheckPrevReceiptStatus()
						.success(function(data){
							if(data.Status == 4){
								LocationRequest();
							}else{
								RecallOrderTypeFunction();
							}
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#completed_ordertype_label_required_no_ordertype_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						posData.RecallCheckPrevReceiptStatus()
						.success(function(data){
							if(data.Status == 4){
								LocationRequest();
							}else{
								RecallOrderTypeFunction();
							}
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#completed_no_ordertype_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						RecallOrderTypeFunction();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#completed_ordertype_w_label_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						posData.OrderTypePopupList()
						.success(function(data){
							OrderTypeIDApp = data.Default;
							OrderTypeWindowApp('RecallOrderTypeRequiredLabel', data.html)
							.then(function(){
								WindowPopupOrderTypeApp('Order type')
							})
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#completed_no_ordertype_w_label_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						RecallOrderTypeRequiredLabel();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#completed_no_ordertype_no_label_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(cdata){
				if(cdata.success == true){
					if(cdata.login == true){
						RecallOrderTypeFunction();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', cdata.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', cdata.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

		
	$scope.ReCallOld = function(){
		$("#Recallfunction").attr("disabled", true);
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				posData.RecallFirstCheck()
				.success(function(firstdata){
					if(firstdata.OnHoldRequireLabel !== '1'){
						if(firstdata.success == true){
							var OrderTypePopup = $("#POSOrderTypeRequired").val();
							if(OrderTypePopup > 0){
								if($("#OrderTypeName").val() <= 0){
									var DisableOnHold = $("#POSDisableOnHold").val();
									if(DisableOnHold != 1){
										posData.OrderTypePopupList()
										.success(function(data){
											OrderTypeIDApp = data.Default;
											OrderTypeWindowApp('RecallOrderType', data.html)
											.then(function(){
												WindowPopupOrderTypeApp('Order type')
											})
										})
									}else{
										var msg ="You must first Complete or Cancel Sale before continuing.";
										NumpadAlertClose('onhold_disabled', msg)
										.then(function(){
											WindowPopupAlert("Information")
										})
									}
								}else{
									posData.NewSaleQue()
									.success(function(a_data){
										if(a_data.success){
											var DisableOnHold = $("#POSDisableOnHold").val();
											if(DisableOnHold != 1){
												posData.RecallCheckPrevReceiptStatus()
												.success(function(data){
													if(data.Status == 4){
														LocationRequest();
													}else{
														RecallOrderTypeFunction();
													}
												})
											}else{
												var msg ="You must first Complete or Cancel Sale before continuing.";
												NumpadAlertClose('onhold_disabled', msg)
												.then(function(){
													WindowPopupAlert("Information")
												})
											}
										}else{
											posData.RecallCheckPrevReceiptStatus()
											.success(function(data){
												if(data.Status == 4){
													LocationRequest();
												}else{
													RecallOrderTypeFunction();
												}
											})
										}
									})
								}
							}else{
								posData.NewSaleQue()
								.success(function(b_data){
									if(b_data.success){
										var DisableOnHold = $("#POSDisableOnHold").val();
										if(DisableOnHold != 1){
											posData.RecallCheckPrevReceiptStatus()
											.success(function(data){
												if(data.Status == 4){
													LocationRequest();
												}else{
													RecallOrderTypeFunction();
												}
											})
										}else{
											var msg ="You must first Complete or Cancel Sale before continuing.";
											NumpadAlertClose('onhold_disabled', msg)
											.then(function(){
												WindowPopupAlert("Information")
											})
										}
									}else{
										posData.RecallCheckPrevReceiptStatus()
										.success(function(data){
											if(data.Status == 4){
												LocationRequest();
											}else{
												RecallOrderTypeFunction();
											}
										})
									}
								})
							}
						}else{
							posData.NewSaleQue()
							.success(function(c_data){
								if(c_data.success){
									var DisableOnHold = $("#POSDisableOnHold").val();
									if(DisableOnHold != 1){
										RecallOrderTypeFunction();
									}else{
										var msg ="You must first Complete or Cancel Sale before continuing.";
										NumpadAlertClose('onhold_disabled', msg)
										.then(function(){
											WindowPopupAlert("Information")
										})
									}
								}else{
									RecallOrderTypeFunction();
								}
							})
						}
					}else{
						posData.NewSaleQue()
						.success(function(d_data){
							if(d_data.success == true){
								var DisableOnHold = $("#POSDisableOnHold").val();
								if(DisableOnHold != 1){
									$("#custom_item_keyboard").html('');
									var OrderTypePopup = $("#POSOrderTypeRequired").val();
									if(OrderTypePopup > 0){
										if($("#OrderTypeName").val() <= 0){
											posData.OrderTypePopupList()
											.success(function(data){
												OrderTypeIDApp = data.Default;
												OrderTypeWindowApp('RecallOrderTypeRequiredLabel', data.html)
												.then(function(){
													WindowPopupOrderTypeApp('Order type')
												})
											})
										}else{
											RecallOrderTypeFunction();
										}
									}else{
										RecallOrderTypeFunction();
									}
								}else{
									var msg ="You must first Complete or Cancel Sale before continuing.";
									NumpadAlertClose('onhold_disabled', msg)
									.then(function(){
										WindowPopupAlert("Information")
									})
								}
							}else{
								RecallOrderTypeFunction();
							}
						})
					}
				})
				setTimeout(function(){
					$("#Recallfunction").attr("disabled", false);
				},1000);
			}else{
				var msg = result.msg;
				NumpadAlertClose('onhold_disabled', msg)
				.then(function(){
					WindowPopupAlert("Information")
				})
				$("#Recallfunction").attr("disabled", false);
			}
		})
	}

	var RecallOrderTypeFunction = function(){
		// posData.RecallSecondCheck()
		// .success(function(seconddata){
			// if(seconddata.success == true){
			posData.CheckReceiptCompleted()
			.success(function(data){
					if(data.Result > 0){
						if(data.paid){
							if(data.Total == 0){
								LocationRequest();
							}else{
								QuickOnHold()
								.then(function(){
									LocationRequest();
								})
							}
						}else{
							if(data.Total == 0){
								LocationRequest();
							}else{
								QuickOnHold()
								.then(function(){
									LocationRequest();
								})
							}
						}
					}else{
						LocationRequest();
					}
			})	
				// setTimeout(function(){
					// QuickOnHold()
					// .then(function(){
						//LocationRequest();
					// })
				// },100);
			// }else{
			// 	// QuickOnHold()
			// 	// .then(function(){
			// 		LocationRequest();
			// 	// });
			// }
		// })	
	}

	$(document).on("submit", "#RecallOrderType", function(e){
		e.preventDefault();
		$("#OrderType").val(OrderTypeIDApp);
		$("#ordertype-popup").jqxWindow('close');
		setTimeout(function(){
			RecallOrderTypeFunction();
		},500);
	})

	var RecallOrderTypeWithoutKitchenPrint = function(){
		QuickOnHold()
		.then(function(){
			LocationRequest();
		});
	}

	var RecallOrderTypeRequiredLabel = function(){
		var type = 7;
		posData.CheckReceiptNote()
		.success(function(data){
			if(data.RNotes == ''){
				NumpadKeyboard('receipt_note_form_required')
				.then(function(){
					WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
					.then(function(){
						setTimeout(function(){
							var searchInput = $('#search_field');
							var strLength = searchInput.val(data.RNotes).length * 25;
							searchInput.focus();
							searchInput[0].setSelectionRange(strLength, strLength);
						},100);
					})
				})
			}else{
				posData.RecallFirstCheck()
				.success(function(firstdata){
					if(firstdata.success == true){
						posData.RecallSecondCheck()
						.success(function(seconddata){
							if(seconddata.success == true){
								KitchenPrintReceipt("RecallOnHoldPrinterStatus")
								.then(function(){
									setTimeout(function(){
										QuickOnHold()
										.then(function(){
											LocationRequest();
										});
									},100);
								})
							}else{
								QuickOnHold()
								.then(function(){
									LocationRequest();
								});
							}
						})
					}else{
						QuickOnHold()
						.then(function(){
							LocationRequest();
						});
					}
				})
			}
		})
	}

	$(document).on("submit", "#RecallOrderTypeRequiredLabel", function(e){
		e.preventDefault();
		$("#OrderType").val(OrderTypeIDApp);
		$("#ordertype-popup").jqxWindow('close');
		setTimeout(function(){
			RecallOrderTypeRequiredLabel();
		},500);
	})

	$(document).on('submit', '#receipt_note_form_required', function(e){
		e.preventDefault();
		var postData="receiptnotemsg=" + $("#search_field").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success == true){
				$("#dialog-numpad-keyboard").jqxWindow('close');
				$("#price_numpad").html('');
				$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote);
				posData.RecallFirstCheck()
				.success(function(firstdata){
					if(firstdata.success == true){
						posData.RecallSecondCheck()
						.success(function(seconddata){
							if(seconddata.success == true){
								KitchenPrintReceipt("RecallOnHoldPrinterStatus")
								.then(function(){
									setTimeout(function(){
										QuickOnHold()
										.then(function(){
											LocationRequest();
										})
									},100);
								})
							}else{
								QuickOnHold()
								.then(function(){
									LocationRequest();
								});
							}
						})
					}else{
						QuickOnHold()
						.then(function(){
							LocationRequest();
						});
					}
				})
			}
		})
	})
	
	//-->Payment
	$scope.Payment = function(){
		window.location.href = base_url + 'pos/pointofsale/payment';
	};
	/*End Payment Plugin*/
	
	var RemoveItemCheckReasons = function(){
		var def = $.Deferred();
		posData.RemoveItemCheckReasons()
		.success(function(data){
			def.resolve(data.setting);
		})
		return def.promise();
	}

	//-->RemoveItem
	var GiftCardRemoveQ = [];
	$scope.RemoveItem = function(){
		GiftCardRemoveQ = [];
		$("#RemoveItemfunction").attr("disabled", true);
		var ItemSelected 	= $(".orderedlist").find('div').hasClass('selected');
		if(ItemSelected){
		var ItemSelInfo 	= $(".selected").attr('id');
		var ItemSelUnique 	= ItemSelInfo.split('=')[0];
		var ItemSelCompleted= ItemSelInfo.split('=')[1];
		var ItemSelRemove 	= ItemSelInfo.split('=')[2];
		var ItemSelGC 		= ItemSelInfo.split('=')[3];
		var ItemSelGCRemove = ItemSelInfo.split('=')[4];
		var ItemSelGCTrancode = ItemSelInfo.split('=')[5];
		var ItemSelGCAmount = ItemSelInfo.split('=')[6];
		var ItemSelGCRemoveItemCheck = ItemSelInfo.split('=')[7];
		var ItemSelGCNumber = ItemSelInfo.split('=')[8];
		var ItemReturnReceiptDetailsUnique = ItemSelInfo.split('=')[10];
		
		console.log("return",ItemReturnReceiptDetailsUnique);
		if(ItemReturnReceiptDetailsUnique){
			for(var i=0; i < ReturnItemArr.length; i++){
				if(ItemReturnReceiptDetailsUnique == ReturnItemArr[i]){
					delete ReturnItemArr[i];
				}
			}
		}

		var postdata="ReceiptDetailsUnique="+ItemSelUnique;
			if(ItemSelCompleted == 4){
				var msg = "Cannot remove Item, please refund instead.";
				NumpadAlertClose ('item_cannot_remove', msg)
				.then(function(){
					WindowPopupAlert('Removing Item')	
				})
			}else{
				if(ItemSelGC == 'true'){
					GiftCardRemoveQ.push(ItemSelGCRemove, ItemSelGCRemoveItemCheck);
					if(ItemSelGCTrancode == 'Issue'){ //When Issue then Void Issue
						var msg = 'Void Issue Gift Card '+ItemSelGCNumber+'<br/>'; 
							msg+= 'Amount '+ItemSelGCAmount+'<br/>';
							msg+= '</br>Are you sure?';
						NumpadAlertYesNo('void_issue_gift_card', msg, ItemSelUnique)
						.then(function(){
							WindowPopupAlertYesNo('Void Issue Gift Card')
							.then(function(){
								$("#use_value").val(ItemSelUnique);
							});
						})
					}else if(ItemSelGCTrancode == 'Reload'){ //When Reload then Void Reload
						var msg = 'Void Reload Gift Card '+ItemSelGCNumber+'<br/>'; 
							msg+= 'Amount '+ItemSelGCAmount+'<br/>';
							msg+= '</br>Are you sure?';
						NumpadAlertYesNo('void_reload_gift_card', msg, ItemSelUnique)
						.then(function(){
							WindowPopupAlertYesNo('Void Reload Gift Card')
							.then(function(){
								$("#use_value").val(ItemSelUnique);
							});
						})
					}else if(ItemSelGCTrancode == 'Return'){ //When Return then Void Return
						var msg = 'Void Return Gift Card '+data.GiftCardNumber+'<br/>'; 
							msg+= 'Amount '+ItemSelGCAmount+'<br/>';
							msg+= '</br>Are you sure?';
						NumpadAlertYesNo('void_return_gift_card', msg, ItemSelUnique)
						.then(function(){
							WindowPopupAlertYesNo('Void Return Gift Card')
							.then(function(){
								$("#use_value").val(ItemSelUnique);
							});
						})
					}
				}else{
					if(ItemSelRemove){
						if($("#RemoveItemCheck").val() == 1){
							var postdata ="FunctionButton=RemoveItem";
							posData.CheckUserManagerCookie(postdata)
							.success(function(data){
								if(data.prompt){
									$scope.FunctionButton = 'RemoveItem';
									NumpadPasscode('remove_item_passcode')
									.then(function(){
										WindowPopupPasscode('Remove Item')
										.then(function(){
											$("#number_field").focus();
										})
									})
								}else{
									after_remove_item()
									.done(function(data){
										if(data.success){
											load_data(data);
											GlobalItemUnique = {};
											CheckBalance();
											PoleDisplayTotal();
											// PoleDisplayReset();
										}else{
											ViewReasonList('remove_item_accept', 1)
											.then(function(){
												WindowPopupReason();
												$("#dialog-numpad-passcode").jqxWindow('close');
											})
										}
									})
								}
							})
						}else{
							var postdata ="FunctionButton=RemoveItem";
							posData.CheckUserManagerCookie(postdata)
							.success(function(data){
								if(data.prompt){
									$scope.FunctionButton = 'RemoveItem';
									NumpadPasscode('remove_item_no_reason_passcode')
									.then(function(){
										WindowPopupPasscode('Remove Item')
										.then(function(){
											$("#number_field").focus();
										})
									})
								}else{
									var postdata ="Unique="+ItemSelUnique;
									posData.RemoveItem(postdata)
									.success(function(data){
										if(data.remove == true){
											load_data(data);
											PoleDisplay(ItemSelUnique);
											GlobalItemUnique = {};
											$("#dialog-numpad-passcode").jqxWindow('close');
										}
									})
								}
							})
						}
					}else{
						var postdata ="Unique="+ItemSelUnique;
						posData.RemoveItem(postdata)
						.success(function(data){
							if(data.success == true){
								load_data(data);
								PoleDisplay(ItemSelUnique);
								GlobalItemUnique = {};
								$('#dialog-reason-list').jqxWindow('close');
							}
						})
					}
				}
			}
		}else{
			var msg = "Please select item first.";
			NumpadAlertOk ('item_printed_alert', msg)
			.then(function(){
				WindowPopupAlert ('Remove Item Alert')	
			})
		}
		setTimeout(function(){
			$("#RemoveItemfunction").attr("disabled", false);
		},1000);
	};

	$(document).on('submit','#remove_multiple_item_void_passcode', function(e){
			e.preventDefault();
			var CardRead = $("#number_field").val();
			var CRP = new CardReaderParser(CardRead);
			if(CRP.converted){
					var passcode = CRP.converted;
					var hashpasscode = CryptoJS.MD5(passcode);
					var postdata ="passcode="+hashpasscode;
							postdata+="&FunctionButton="+$scope.FunctionButton;
					posData.EnterPassCode(postdata)
					.success(function(data){
						if(data.success == true){
								if(data.login == true){
										if( $("#RemoveItemCheckReasons").val() == 1){
												ViewReasonMultipleItemList('remove_multiple_item_accept')
												.then(function(){
													WindowPopupReason();
													$("#dialog-numpad-passcode").jqxWindow('close');
												})
										}else{
												var postdata ="RemoveItemSelected="+JSON.stringify(RemoveMultiItemArray);
												posData.RemoveMultipleItemFunction(postdata)
												.success(function(data){
													load_data(data);
												})
										}

										$('#remove_multiple').jqxWindow('close');
									}else{
											NumpadAlertClose ('invalid_credentials', data.msg)
											.then(function(){
													WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
											});	
									}
							}else{
									NumpadAlertClose ('invalid_credentials', data.msg)
									.then(function(){
											WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
									});	
							}

							$("#dialog-numpad-passcode").jqxWindow('close');
					})
			}
	})

	$(document).on('click', '#remove_multiple_item_accept .button_proceed', function(e){
		e.preventDefault();
		var ReasonSelectedUnique = $('input[type=radio][name=group1]:checked').attr('id');
		if(!ReasonSelectedUnique){
			var msg ='Please select reason';
			NumpadAlertClose('reason_not_selected', msg)
			.then(function(){
				WindowPopupAlert('Remove Item(s)')
			})
			return false;
		}
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px', 
		}, message: 'Please wait while removing items',
			baseZ: 99999  
		});
		var postdata ="RemoveItemSelected="+JSON.stringify(RemoveMultiItemArray);
			postdata+="&RemoveItemSelectedNotPrint="+JSON.stringify(RemoveMultipleItemNotPrintedArray);
			postdata+="&ReasonUnique="+ReasonSelectedUnique;
		posData.RemoveMultipleItemReasonFunction(postdata)
		.success(function(data){
			load_data(data);
			setTimeout($.unblockUI, 100);
			RemoveMultiItemArray = [];
			RemoveMultipleItemNotPrintedArray = [];
		})
		$("#dialog-reason-list").jqxWindow('close');
	})

	$(document).on('click', '#remove_multiple_item_accept .button_q_cancel', function(e){
		e.preventDefault();
		$("#dialog-reason-list").jqxWindow('close');
	})

	$(document).on("submit", "#void_return_gift_card", function(e){ 
		e.preventDefault();
		if(GiftCardRemoveQ[0]){//Remove True
			GiftCardBalOption("giftcard_void_return_option")
			.then(function(){
				WindowPopupGiftCardBalOption('Gift Card Void Return Option')
			})
		}else{
			$("#dialog-numpad-alert").jqxWindow("close");
			var SelectedItem = GlobalItemUnique.Unique;
			var postDataRemoveItem="Unique="+SelectedItem;
			//$("body").block({message: 'Void Return please wait...'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Void Return please wait...' });

			posData.GiftCardVoidReturn(postDataRemoveItem)
			.success(function(data){
				//$("body").unblock();
				setTimeout($.unblockUI, 100);
				if(data.CmdStatus == 'Approved'){
					var msg = data.Status+"<br/>";
						msg+= data.msg+"<br/>";
						msg+= data.Balance;
					NumpadAlertOk('void_reload_approved', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})

					after_remove_item()
					.done(function(){
						load_data(data);
						PoleDisplay(ItemSelUnique);
						GlobalItemUnique = {};
						/*
						LoadOrderedItemList();
						LoadTax();
						LoadEBT();
						LoadDiscount();
						LoadPayments();
						LoadChange();
						CheckReceiptStatus();
						GlobalItemUnique = {};
						LoadTotals()
						.then(function(){
							POSTotal()
							.then(function(){
								CheckBalance();
								PoleDisplayReset();
							});
						});
						*/
					})
				}else if(data.CmdStatus == 'Declined'){
					var msg = data.msg;
					NumpadAlertOk('void_reload_declined', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}else if(data.CmdStatus == 'Error'){
					var msg = data.msg;
					NumpadAlertOk('void_reload_declined', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}
			})
		}
		$("#dialog-numpad-alert").jqxWindow("close");
	})

	$(document).on("submit", "#giftcard_void_return_option", function(e){
		e.preventDefault();
		if(GCBalOptionID == 'Swipe'){
			NumpadGiftCard("gc_void_return_manual")
			.then(function(){
				WindowPopupGiftCard("Gift Card Void Return")
				.then(function(){
					$("#card_field").focus();
				})
			})
		}else{
			$("#dialog-numpad-alert").jqxWindow("close");
			var SelectedItem = GlobalItemUnique.Unique;
			var postDataRemoveItem="Unique="+SelectedItem;
			//$("body").block({message: 'Void Return please wait...'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Void Return please wait...' });
			posData.GiftCardVoidReturn(postDataRemoveItem)
			.success(function(data){
				//$("body").unblock();
				setTimeout($.unblockUI, 100);
				if(data.CmdStatus == 'Approved'){
					var msg = data.Status+"<br/>";
						msg+= data.msg+"<br/>";
						msg+= data.Balance;
					NumpadAlertOk('void_reload_approved', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})

					after_remove_item()
					.done(function(){
						LoadOrderedItemList();
						LoadTax();
						LoadEBT();
						LoadDiscount();
						LoadPayments();
						LoadChange();
						CheckReceiptStatus();
						GlobalItemUnique = {};
						LoadTotals()
						.then(function(){
							POSTotal()
							.then(function(){
								CheckBalance();
								PoleDisplayReset();
							});
						});
					})
				}else if(data.CmdStatus == 'Declined'){
					var msg = data.msg;
					NumpadAlertOk('void_reload_declined', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}else if(data.CmdStatus == 'Error'){
					var msg = data.msg;
					NumpadAlertOk('void_reload_declined', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}
			})
		}
		$("#gc_balance_option").jqxWindow("close");
	})

	$(document).on("submit", "#gc_void_return_manual", function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow("close");
		var SelectedItem = GlobalItemUnique.Unique;
		var postdata ="Unique="+SelectedItem;
			postdata+="&AcctNo="+$("#card_field").val();
			postdata+="&ReturnUnique="+ReasonID;
		//$("body").block({message: 'Void Return please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Void Return please wait...' });

		posData.GiftCardVoidReturn(postdata)
		.success(function(data){
			//$("body").unblock();
			setTimeout($.unblockUI, 100);
			if(data.CmdStatus == 'Approved'){
				var msg = data.Status+"<br/>";
					msg+= data.msg+"<br/>";
					msg+= data.Balance;
				NumpadAlertOk('void_reload_approved', msg)
				.then(function(){
					WindowPopupAlert ('Gift Card Void Return')
				})

				after_remove_item()
				.done(function(){
					LoadOrderedItemList();
					LoadTax();
					LoadEBT();
					LoadDiscount();
					LoadPayments();
					LoadChange();
					CheckReceiptStatus();
					GlobalItemUnique = {};
					LoadTotals()
					.then(function(){
						POSTotal()
						.then(function(){
							CheckBalance();
							PoleDisplayReset();
						});
					});
				})
			}else if(data.CmdStatus == 'Declined'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertOk('void_reload_declined', msg)
				.then(function(){
					WindowPopupAlert ('Remove Gift Card')
				})
			}else if(data.CmdStatus == 'Error'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertOk('void_reload_declined', msg)
				.then(function(){
					WindowPopupAlert ('Remove Gift Card')
				})
			}
		})
		$("#dialog-numpad-gift-card").jqxWindow("close");
	})
		
	$(document).on("submit", "#void_issue_gift_card", function(e){
		e.preventDefault();
		if(GiftCardRemoveQ[0]){//Remove True
			GiftCardBalOption("giftcard_void_issue_option")
			.then(function(){
				WindowPopupGiftCardBalOption('Gift Card Void Issue Option')
			})
		}else{
			if(GiftCardRemoveQ[1] == true){//RemoveItemCheck
				CheckReason()
				.then(function(result){
					if(result == true){
						var postdata ="FunctionButton=RemoveItem";
						posData.CheckUserManagerCookie(postdata)
						.success(function(data){
							if(data.prompt){
								$scope.FunctionButton = 'RemoveItem';
								NumpadPasscode('remove_item_passcode')
								.then(function(){
									WindowPopupPasscode('Remove Item')
									.then(function(){
										$("#number_field").focus();
									})
								})
							}else{
								ViewReasonList('remove_giftcard_void_issue_accept', 1)
								.then(function(){
									WindowPopupReason();
									$("#dialog-numpad-passcode").jqxWindow('close');
								})
							}
						})
					}else{
						
					}
				})
			}else{
				var msg = "Item already sold, please return item instead.";
				NumpadAlertOk('item_printed_alert', msg)
				.then(function(){
					WindowPopupAlert ('Remove Item Alert')	
				})
			}
		}
		$("#dialog-numpad-alert").jqxWindow("close");
	})

	$(document).on('click', "#remove_giftcard_void_issue_accept .button_proceed", function(e){
		e.preventDefault();
		if(ReasonID !== ''){
			GiftCardBalOption("giftcard_void_issue_option")
			.then(function(){
				WindowPopupGiftCardBalOption('Gift Card Void Issue Option')
			})
		}else{
			var msg = "Please select the reason first";
			NumpadAlertOk('gift_card_cannot_return', msg)
			.then(function(){
				WindowPopupAlert('Return Item');
			})	
		}
		$("#dialog-reason-list").jqxWindow('close');
	})

	$(document).on("submit", "#giftcard_void_issue_option", function(e){
		e.preventDefault();
		$("#gc_balance_option").jqxWindow("close");
		if(GCBalOptionID == 'Swipe'){
			NumpadGiftCard("gc_void_issue_manual")
			.then(function(){
				WindowPopupGiftCard("Gift Card Void Issue")
				.then(function(){
					$("#card_field").focus();
				})
			})
		}else{
			var SelectedItem = GlobalItemUnique.Unique;
			var postdata="Unique="+SelectedItem;
				postdata+="&AcctNo="+GCBalOptionID;
				postdata+="&ReturnUnique="+ReasonID;
			//$("body").block({message: 'Void Issue please wait...'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Void Issue please wait...' });
			posData.GiftCardVoidIssue(postdata)
			.success(function(data){
				//$("body").unblock();
				setTimeout($.unblockUI, 100);
				if(data.CmdStatus == 'Approved'){
					var msg = data.Status+"<br/>";
						msg+= data.msg
					NumpadAlertOk('void_issue_approved', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card Issue')
					})

					load_data(data);

					after_remove_item()
					.done(function(){
						
						// LoadOrderedItemList();
						// LoadTax();
						// LoadEBT();
						// LoadDiscount();
						// LoadPayments();
						// LoadChange();
						// CheckReceiptStatus();
						// GlobalItemUnique = {};
						// LoadTotals()
						// .then(function(){
						// 	POSTotal()
						// 	.then(function(){
						// 		CheckBalance();
						// 		PoleDisplayReset();
						// 	});
						// });
					})
				}else if(data.CmdStatus == 'Declined'){
					var msg = data.Status+"<br/>";
						msg+= data.msg
					NumpadAlertOk('void_reload_declined', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}else if(data.CmdStatus == 'Error'){
					var msg = data.Status+"<br/>";
						msg+= data.msg
					NumpadAlertOk('void_reload_error', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}
			})
		}
	})

	$(document).on("submit", "#gc_void_issue_manual", function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var postdata="Unique="+SelectedItem;
			postdata+="&AcctNo="+$("#card_field").val();
			postdata+="&ReturnUnique="+ReasonID;
		//$("body").block({message: 'Void Issue please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Void Issue please wait...' });
		posData.GiftCardVoidIssue(postdata)
		.success(function(data){
			//$("body").unblock();
			setTimeout($.unblockUI, 100); 
			if(data.CmdStatus == 'Approved'){
				var msg = data.Status+"<br/>";
					msg+= data.msg
				NumpadAlertOk('void_issue_approved', msg)
				.then(function(){
					WindowPopupAlert ('Remove Gift Card Issue')
				})
				load_data(data);
				after_remove_item()
				.done(function(){
					// LoadOrderedItemList();
					// LoadTax();
					// LoadEBT();
					// LoadDiscount();
					// LoadPayments();
					// LoadChange();
					// CheckReceiptStatus();
					// GlobalItemUnique = {};
					// LoadTotals()
					// .then(function(){
					// 	POSTotal()
					// 	.then(function(){
					// 		CheckBalance();
					// 		PoleDisplayReset();
					// 	});
					// });
				})
			}else if(data.CmdStatus == 'Declined'){
				var msg = data.Status+"<br/>";
					msg+= data.msg
				NumpadAlertOk('void_reload_declined', msg)
				.then(function(){
					WindowPopupAlert ('Remove Gift Card')
				})
			}else if(data.CmdStatus == 'Error'){
				var msg = data.Status+"<br/>";
					msg+= data.msg
				NumpadAlertOk('void_reload_error', msg)
				.then(function(){
					WindowPopupAlert ('Remove Gift Card')
				})
			}
		})
		$("#dialog-numpad-gift-card").jqxWindow("close");
	})

	$(document).on("click", "#remove_giftcard_void_issue_accept .button_q_cancel", function(e){
		e.preventDefault();
		$("#dialog-reason-list").jqxWindow('close');
	})

	$(document).on("submit", "#void_reload_gift_card", function(e){
		e.preventDefault();
		if(GiftCardRemoveQ[0]){//Remove True
			GiftCardBalOption("giftcard_void_reload_option")
			.then(function(){
				WindowPopupGiftCardBalOption('Gift Card Void Issue Option')
			})
		}else{
			if(GiftCardRemoveQ[1] == true){//RemoveItemCheck
				CheckReason()
				.then(function(result){
					if(result == true){
						var postdata ="FunctionButton=RemoveItem";
						posData.CheckUserManagerCookie(postdata)
						.success(function(data){
							if(data.prompt){
								$scope.FunctionButton = 'RemoveItem';
								NumpadPasscode('remove_item_passcode')
								.then(function(){
									WindowPopupPasscode('Remove Item')
									.then(function(){
										$("#number_field").focus();
									})
								})
							}else{
								ViewReasonList('remove_giftcard_void_reload_accept', 1)
								.then(function(){
									WindowPopupReason();
									$("#dialog-numpad-passcode").jqxWindow('close');
								})
							}
						})
					}else{
						
					}
				})
			}else{
				var msg = "Item already sold, please return item instead.";
				NumpadAlertOk('item_printed_alert', msg)
				.then(function(){
					WindowPopupAlert ('Remove Item Alert')	
				})
			}
		}
		$("#dialog-numpad-alert").jqxWindow("close");
	})

	$(document).on("submit", "#giftcard_void_reload_option", function(e){
		e.preventDefault();
		if(GCBalOptionID == 'Swipe'){
			NumpadGiftCard("gc_void_reload_manual")
			.then(function(){
				WindowPopupGiftCard("Gift Card Void Reload")
				.then(function(){
					$("#card_field").focus();
				})
			})
		}else{
			var SelectedItem = GlobalItemUnique.Unique;
			var postdata="Unique="+SelectedItem;
				postdata+="&AcctNo="+GCBalOptionID;
				postdata+="&ReturnUnique="+ReasonID;	
			//$("body").block({message: 'Void Reload please wait...'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Void Reload please wait...' });
			posData.GiftCardVoidReload(postdata)
			.success(function(data){
				//$("body").unblock();
				setTimeout($.unblockUI, 100);
				if(data.CmdStatus == 'Approved'){
					var msg = data.Status+"<br/>";
						msg+= data.msg
					NumpadAlertOk('void_reload_approved', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
					after_remove_item()
					.done(function(){
						LoadOrderedItemList();
						LoadTax();
						LoadEBT();
						LoadDiscount();
						LoadPayments();
						LoadChange();
						CheckReceiptStatus();
						GlobalItemUnique = {};
						LoadTotals()
						.then(function(){
							POSTotal()
							.then(function(){
								CheckBalance();
								PoleDisplayReset();
							});
						});
					})
				}else if(data.CmdStatus == 'Declined'){
					var msg = data.msg;
					NumpadAlertOk('void_reload_declined', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}else if(data.CmdStatus == 'Error'){
					var msg = data.msg;
					NumpadAlertOk('void_reload_error', msg)
					.then(function(){
						WindowPopupAlert ('Remove Gift Card')
					})
				}
			})
		}
		$("#gc_balance_option").jqxWindow("close");
	})

	$(document).on("submit", "#gc_void_reload_manual", function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var postdata ="Unique="+SelectedItem;
			postdata+="&AcctNo="+$("#card_field").val();
			postdata+="&ReturnUnique="+ReasonID;
		//$("body").block({message: 'Void Reload please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Void Reload please wait...'});
		posData.GiftCardVoidReload(postdata)
		.success(function(data){
			//$("body").unblock();
			setTimeout($.unblockUI, 100);
			if(data.CmdStatus == 'Approved'){
				var msg = data.Status+"<br/>";
					msg+= data.msg+"<br/>";
					msg+= data.Balance;
				NumpadAlertOk('void_reload_approved', msg)
				.then(function(){
					WindowPopupAlert ('Gift Card Void Reload')
				})
				after_remove_item()
				.done(function(){
					load_data(data);
					// LoadOrderedItemList();
					// LoadTax();
					// LoadEBT();
					// LoadDiscount();
					// LoadPayments();
					// LoadChange();
					// CheckReceiptStatus();
					// GlobalItemUnique = {};
					// LoadTotals()
					// .then(function(){
					// 	POSTotal()
					// 	.then(function(){
					// 		CheckBalance();
					// 		PoleDisplayReset();
					// 	});
					// });
				})
			}else if(data.CmdStatus == 'Declined'){
				var msg = data.msg;
				NumpadAlertOk('void_reload_declined', msg)
				.then(function(){
					WindowPopupAlert ('Gift Card Void Reload')
				})
			}else if(data.CmdStatus == 'Error'){
				var msg = data.msg;
				NumpadAlertOk('void_reload_error', msg)
				.then(function(){
					WindowPopupAlert ('Gift Card Void Reload')
				})
			}
		})
		$("#dialog-numpad-gift-card").jqxWindow("close");
	})

	$(document).on("click", "#remove_giftcard_void_reload_accept .button_proceed", function(e){
		e.preventDefault();
		if(ReasonID !== ''){
			GiftCardBalOption("giftcard_void_reload_option")
			.then(function(){
				WindowPopupGiftCardBalOption('Gift Card Void Reload Option')
			})
		}else{
			var msg = "Please select the reason first";
			NumpadAlertOk('gift_card_cannot_return', msg)
			.then(function(){
				WindowPopupAlert('Return Item');
			})
		}
		$("#dialog-reason-list").jqxWindow('close');
	})

	$(document).on("click", "#remove_giftcard_void_reload_accept .button_q_cancel", function(e){
		e.preventDefault();
		$("#dialog-reason-list").jqxWindow('close');
	})

	var remove_item_process = function(){
		var ReceiptDetailsUnique = GlobalItemUnique.Unique;
		var postdata ="ReceiptDetailsUnique="+ReceiptDetailsUnique;
			postdata+="&ReturnUnique="+ReasonID;
		posData.RemoveItemReason(postdata)
		.success(function(data){
			if(data.success == true){
				load_data(data);
				PoleDisplay(ReceiptDetailsUnique);
				//LoadOrderedItemList();
				//LoadTotals()
				//.then(function(){
				//	POSTotal();
				//})
				//LoadTax();
				//LoadEBT();
				//LoadDiscount();
				//LoadPayments();
				//LoadChange();
				//CheckReceiptStatus();
				GlobalItemUnique = {};
				$('#dialog-reason-list').jqxWindow('close');
			}
		})
	}
	
	$(document).on("submit", "#remove_item_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						if( $("#RemoveItemCheckReasons").val() == 1){
							ViewReasonList('remove_item_accept', 1)
							.then(function(){
								WindowPopupReason();
								$("#dialog-numpad-passcode").jqxWindow('close');
							})
						}else{
							var ItemSelected 	= $(".orderedlist").find('div').hasClass('selected');
							var ItemSelInfo 	= $(".selected").attr('id');
							var ItemSelUnique 	= ItemSelInfo.split('=')[0];
							var postdata ="Unique="+ItemSelUnique;
							posData.RemoveItem(postdata)
							.success(function(data){
								if(data.remove == true){
									load_data(data);
									PoleDisplay(ItemSelUnique);
									GlobalItemUnique = {};
									$("#dialog-numpad-passcode").jqxWindow('close');
								}else{
									$("#dialog-numpad-passcode").jqxWindow('close');
									var msg = "Item already sold, please return item instead.";
									NumpadAlertOk('item_printed_alert', msg)
									.then(function(){
										WindowPopupAlert ('Remove Item Alert')	
									})
								}
							})
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}	
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', "#remove_item_accept .button_proceed", function(e){
		e.preventDefault();
		var ReceiptDetailsUnique = GlobalItemUnique.Unique;
		var postdata ="ReceiptDetailsUnique="+ReceiptDetailsUnique;
			postdata+="&ReturnUnique="+ReasonID;
		posData.RemoveItemReason(postdata)
		.success(function(data){
			if(data.success == true){
				load_data(data);
				PoleDisplay(ReceiptDetailsUnique);
				GlobalItemUnique = {};
				$('#dialog-reason-list').jqxWindow('close');
			}else{
				$.blockUI({ css: { 
					border: '2px solid #fff',
					padding: '15px', 
					backgroundColor: '#210e66', 
					'-webkit-border-radius': '10px', 
					'-moz-border-radius': '10px', 
					opacity: 1, 
					color: '#fff',
					fontSize: '20px' 
				}, message: data.TranCode + ' process please wait..' });
				postdata+="GCProcess="+data.TranCode;
				if(data.TranCode == 'Issue'){
					posData.GiftCardVoidIssue(postdata)
					.success(function(gcdata){
						if(gcdata.success){
							GiftCardVoidIssue(gcdata);
							PoleDisplay(ReceiptDetailsUnique);
							// LoadOrderedItemList();
							// LoadTotals()
							// .then(function(){
							// 	POSTotal();
							// })
							// LoadTax();
							// LoadEBT();
							// LoadDiscount();
							// LoadPayments();
							// LoadChange();
							// CheckReceiptStatus();
							// ShowPoints();
							GlobalItemUnique = {};
							$('#dialog-reason-list').jqxWindow('close');
						}else{
							var msg = data.TranResponse;
							NumpadAlertClose('cancel_gc_response', msg)
							.then(function(){
								WindowPopupAlert('Cancel Sale')
							})
						}
						setTimeout($.unblockUI, 100)
						//$("body").unblock();
					})
				}else if(data.TranCode == 'Reload'){
					posData.GiftCardVoidReload(postdata)
					.success(function(gcdata){
						if(gcdata.success){
							load_data(gcdata);
							PoleDisplay(ReceiptDetailsUnique);
							// LoadOrderedItemList();
							// LoadTotals()
							// .then(function(){
							// 	POSTotal();
							// })
							// LoadTax();
							// LoadEBT();
							// LoadDiscount();
							// LoadPayments();
							// LoadChange();
							// CheckReceiptStatus();
							// ShowPoints();
							GlobalItemUnique = {};
							$('#dialog-reason-list').jqxWindow('close');
						}else{
							var msg = data.TranResponse;
							NumpadAlertClose('cancel_gc_response', msg)
							.then(function(){
								WindowPopupAlert('Cancel Sale')
							})
						}
						setTimeout($.unblockUI, 100)
						//$("body").unblock();
					})
				}else if(data.TranCode == 'Return'){
					posData.GiftCardVoidReload(postdata)
					.success(function(gcdata){
						if(gcdata.success){
							PoleDisplay(ReceiptDetailsUnique);
							LoadOrderedItemList();
							LoadTotals()
							.then(function(){
								POSTotal();
							})
							LoadTax();
							LoadEBT();
							LoadDiscount();
							LoadPayments();
							LoadChange();
							CheckReceiptStatus();
							ShowPoints();
							GlobalItemUnique = {};
							$('#dialog-reason-list').jqxWindow('close');
						}else{
							var msg = data.TranResponse;
							NumpadAlertClose('cancel_gc_response', msg)
							.then(function(){
								WindowPopupAlert('Cancel Sale')
							})
						}
						setTimeout($.unblockUI, 100)
						//$("body").unblock();
					})
				}
			}
		})
	})

	$(document).on('submit', '#remove_item_no_reason_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var ItemSelected 	= $(".orderedlist").find('div').hasClass('selected');
						var ItemSelInfo 	= $(".selected").attr('id');
						var ItemSelUnique 	= ItemSelInfo.split('=')[0];
						var postdata ="Unique="+ItemSelUnique;
						posData.RemoveItem(postdata)
						.success(function(data){
							if(data.success == true){
								load_data(data);
								PoleDisplay(ItemSelUnique);
								GlobalItemUnique = {};
								$("#dialog-numpad-passcode").jqxWindow('close');
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', "#remove_item_accept .button_q_cancel", function(e){
		e.preventDefault();
		$('#dialog-reason-list').jqxWindow('close');
	})

	var after_remove_item = function(){
		var def = $.Deferred();
		var postDataRemoveItem="Unique="+$scope.ItemUnique;
		posData.CheckItemQuestion(postDataRemoveItem)
		.success(function(check_item_question_data){
			if(check_item_question_data.success == true){
				posData.RemoveMultipleItem(postDataRemoveItem)
				.success(function(data){
					def.resolve();
				})
			}else{
				def.resolve(check_item_question_data.success);
			}
		})
		return def.promise();
	}
		
	$scope.FunctionButton = '';
	//-->Cancel Sale
	$scope.CancelSale = function(){
		$("#CancelSalefunction").attr("disabled", true);
		$scope.FunctionButton = 'CancelSale';
		var msg = 'Cancel Sale cannot be reversed. <br/><br/>';
			msg+= 'Are you sure?';	
		NumpadAlertYesNo('cancel_sale_form', msg)
		.then(function(){
			WindowPopupAlertYesNo('Cancel Sale')
			.then(function(){
				setTimeout(function(){
					$("#CancelSalefunction").attr("disabled", false);
				},1000);
			})
		})
	};
		
	$(document).on('submit', '#cancel_sale_form', function(e){
		e.preventDefault();
		posData.CancelSale()
		.success(function(data){
			if(data.giftcard){
				var msg = "Gift Card must be voided before cancel.";
				NumpadAlertClose('cancel_sale_with_gc', msg)
				.then(function(){
					WindowPopupAlert('Cancel Sale')
				})
			}else{
				if(data.success == true){
					if(data.cancel == true){
						load_data(data);
						GlobalCustomer = null;
						$scope.customer = {
							selected: 'Guest',
							id: ''
						}
						PoleDisplayReset();
						if($("#TableOrder").val() == 1){
							if($("#PoleDisplay").val() == 2){
								if(ConnectionPoleDisplay){
									if(tableconn){
										tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
									}
								}
							}
						}
						$("#CustomerSelectedUnique").val('');
						$scope.RemoveCustomerWhen = false;
						ItemsCategoryView();
						ordertype();
						LoadEverything();
					}else if(data.cancel == false){
						if(data.RemoveItemCheck == 1){
							CheckReason()
							.then(function(result){
								if(result == true){
									var postdata ="FunctionButton=CancelSale";
									posData.CheckUserManagerCookie(postdata)
									.success(function(data){
										if(data.prompt){
											NumpadPasscode('cancel_sale_passcode')
											.then(function(){
												WindowPopupPasscode('Cancel Sale')
												.then(function(){
													$("#number_field").focus();
												})
											})
										}else{
											ViewReasonList('cancel_sale_accept', 0)
											.then(function(){
												WindowPopupReason();
												$("#dialog-numpad-passcode").jqxWindow('close');
											})
										}
									})
									$("#dialog-numpad-alert").jqxWindow('close');
								}else{
									var postdata="ReasonID=0";
									posData.CancelSaleReason(postdata)
									.success(function(data){
										if(data.success == true){
											load_data(data);
											GlobalCustomer = null;
											$scope.customer = {
												selected: 'Guest',
												id: ''
											}
											PoleDisplayReset();
											$scope.RemoveCustomerWhen = false;
											ItemsCategoryView();
											if($("#TableOrder").val() == 1){
												if($("#PoleDisplay").val() == 2){
													if(ConnectionPoleDisplay){
														if(tableconn){
															tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
														}
													}
												}
											}
											ordertype();
											$("#CustomerSelectedUnique").val('');
										}	
									})	
								}
							})
						}else{
							var postdata="ReasonID=0";
							posData.CancelSaleReason(postdata)
							.success(function(data){
								if(data.success == true){
									load_data(data);
									GlobalCustomer = null;
									$scope.customer = {
										selected: 'Guest',
										id: ''
									}
									PoleDisplayReset();
									$scope.RemoveCustomerWhen = false;
									ItemsCategoryView();
									ordertype();
									$("#CustomerSelectedUnique").val('');
								}	
							})
						}
					}
				}else if (data.success == false){
					var msg = "Cannot cancel sale with payment. Please refund instead.";
					NumpadAlertClose('cancel_sale_void_alert', msg)
					.then(function(){
						WindowPopupAlert('Cancel Sale Alert')
					})
				}
			}
			ReturnItemArr = [];
		}).then(function(){
			$("#dialog-numpad-alert").jqxWindow('close');
			$("#dialog-numpad-passcode").jqxWindow('close');
		})
	})

	$(document).on('click', '#cancel_sale_form .alert_no', function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow('close');
	})

	$(document).on("submit", "#cancel_sale_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						ViewReasonList('cancel_sale_accept', 0)
						.then(function(){
							WindowPopupReason();
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('cancel_sale_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('cancel_sale_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('cancel_sale_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}		
	})

	$(document).on("click", "#cancel_sale_accept .button_proceed", function(e){
		e.preventDefault();
		var postdata = "ReasonID="+ReasonID;
		posData.CancelSaleReason(postdata)
			.success(function(data){
			if(data.success == true){
				load_data(data);
				EnableDisablePayment();
				CancelSaleClicked();
				GlobalCustomer = null;
				$scope.customer = {
					selected: 'Guest',
					id: ''
				}
				PoleDisplayReset();
				$scope.RemoveCustomerWhen = false;
				ItemsCategoryView();
				if($("#TableOrder").val() == 1){
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							if(tableconn){
								tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
							}
						}
					}
				}
				$("#CustomerSelectedUnique").val('');
			}
			$('#dialog-reason-list').jqxWindow('close');	
		})
	})

	$(document).on("click", "#cancel_sale_accept .button_q_cancel", function(e){
		e.preventDefault();
		$('#dialog-reason-list').jqxWindow('close');
	})
	
	$scope.AlertNo = function(){
		$scope.alert = {
			cancelsalemessage: ''
		}
		AlertYesNodialog.close(); 
	}
	
	//-->Receipt Discount
	var validateFloatKeyPress = function(el, evt) {
		var charCode = (evt.which) ? evt.which : event.keyCode;
		var number = el.value.split('.');
		if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
			return false;
		}
		//just one dot
		if(number.length>1 && charCode == 46){
			return false;
		}
		//get the carat position
		var caratPos = getSelectionStart(el);
		var dotPos = el.value.indexOf(".");
		if( caratPos > dotPos && dotPos>-1 && (number[1].length > 1)){
			return false;
		}
		return true;
	}

	var  getSelectionStart = function(o) {
		if (o.createTextRange) {
			var r = document.selection.createRange().duplicate()
			r.moveEnd('character', o.value.length)
			if (r.text == '') return o.value.length
			return o.value.lastIndexOf(r.text)
		} else return o.selectionStart
	}
	
	$scope.ReceiptDiscountPercent = function(){
		$("#ReceiptDiscountPercentfunction").attr("disabled", true); 
		var postdata ="FunctionButton=DiscountReceiptPercent";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'DiscountReceiptPercent';
				NumpadPasscode('discount_receipt_percent_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Receipt Percent')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				NumpadDiscount('receipt_discount_percent_form')
				.then(function(){
					WindowPopupDiscount('Discount Percent')
					.then(function(){
						$("#discount_field").jqxNumberInput('focus');
						setTimeout(function(){
							var input = $('#discount_field input')[0];
							if('selectionStart' in input) {
								input.setSelectionRange(0, 0);
							}else{
								var range = input.createTextRange();
								range.collapse(true);
								range.moveEnd('character', 0);
								range.moveStart('character', 0);
								range.select();
							}
							$("#discount_field input").select();
						},100)
					})
				})
				//discount_receipt_process();
			}
			setTimeout(function(){
				$("#ReceiptDiscountPercentfunction").attr("disabled", false); 	
			},1000);
			
		})
	};

	$(document).on("submit", "#discount_receipt_percent_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadDiscount('receipt_discount_percent_form')
						.then(function(){
							WindowPopupDiscount('Discount Percent')
							.then(function(){
								$("#discount_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#discount_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#discount_field input").select();
								},100)
							})
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
	/*
	$(document).on('submit', '#receipt_discount_percent_form', function(e){
		e.preventDefault();
		if($("#number_field").val()){
			var DiscountAmount = $("#number_field").val();
			if(DiscountAmount == ''){
				DiscountAmount = 0.00;
			}
			var postDataReceiptDiscount="optiondiscount="+1;
			postDataReceiptDiscount+="&discountamount="+DiscountAmount;
			posData.ReceiptDiscount(postDataReceiptDiscount)
			.success(function(data){
				if(data.success == true){
					load_data(data);
					//LoadOrderedItemList();
					//LoadTax();
					//LoadEBT();
					//LoadDiscount();
					//LoadPayments();
					//LoadChange();
					GlobalItemUnique = {};
					$("#dialog-numpad-discount").jqxWindow('close');
					//LoadTotals()
					//.then(function(){
					//	POSTotal()
					//	.then(function(){
							PoleDisplayTotal();
					//	});
					//});
				}else{
					$("#dialog-numpad-discount").jqxWindow('close'); 
					var msg = "Discount must be less than the total amount";
					NumpadAlertClose('discount_receipt_alert', msg)
					.then(function(){
						WindowPopupAlert('Receipt Discount Alert');
					})
				}
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close'); 
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_receipt_alert', msg)
			.then(function(){
				WindowPopupAlert('Receipt Discount Alert');
			})
		}
	})
	*/
	
	$scope.ReceiptDiscountDollar = function(){
		$("#ReceiptDiscountDollarfunction").attr("disabled", true);
		var postdata ="FunctionButton=DiscountReceiptDollar";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'DiscountReceiptDollar';
				NumpadPasscode('discount_receipt_dollar_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Receipt Dollar')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				//discount_receipt_process();
				NumpadDiscount('receipt_discount_dollar_form', true)
				.then(function(){
					WindowPopupDiscount('Discount Dollar')
					.then(function(){
						$("#discount_field").jqxNumberInput('focus');
						setTimeout(function(){
							var input = $('#discount_field input')[0];
							if('selectionStart' in input) {
								input.setSelectionRange(0, 0);
							}else{
								var range = input.createTextRange();
								range.collapse(true);
								range.moveEnd('character', 0);
								range.moveStart('character', 0);
								range.select();
							}
							$("#discount_field input").select();
						},100)
					})
				})
			}
			setTimeout(function(){
				$("#ReceiptDiscountDollarfunction").attr("disabled", false); 	
			},1000);
		})
	}

	$(document).on("submit", "#discount_receipt_dollar_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadDiscount('receipt_discount_dollar_form', true)
						.then(function(){
							WindowPopupDiscount('Discount Dollar')
							.then(function(){
								$("#discount_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#discount_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#discount_field input").select();
								},100)
							})
						})
						setTimeout(function(){
							$("#ReceiptDiscountDollarfunction").attr("disabled", false);
						},1000);
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
	
	$(document).on('submit', '#receipt_discount_dollar_form', function(e){
		e.preventDefault();
		if($("#discount_field").val() > 0){
			DiscountReceiptBelowCostSellPrice = parseFloat($("#discount_field").val()).toFixed(2);

			var EnterDiscountAmount = $("#discount_field").val();
			
			$scope.DiscountAmountField = EnterDiscountAmount;
			
			if(EnterDiscountAmount > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0 ){

				$scope.FunctionButton = 'DiscountReceiptDollar';
				NumpadPasscode('discount_receipt_dollar_security_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Receipt Dollar ' + ($scope.DiscountSecurityAmount ? '| Limit ' + $scope.DiscountSecurityAmount : '') )
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#dialog-numpad-discount").jqxWindow('close');

				return;
			}

			posData.getDiscountReceiptApplied()
			.success(function(resdata){

				if(resdata.result > 0){
					AccessToOpenDiscountReceipt('receipt_discount_dollar_form_two', 'Discount receipt dollar', EnterDiscountAmount, 'dollar');
					
					$("#dialog-numpad-discount").jqxWindow('close');
				}else{
					
					var postdata ="NewPrice="+parseFloat(EnterDiscountAmount).toFixed(2);
						postdata+="&DiscountType=Dollar";
					posData.DiscountReceiptLineBelowCost(postdata)
					.success(function(data){
						if(data.belowcost){
							populateSellBelowCostWindow(data.html)
							.then(function(){
								WindowBelowCost(data.Description);
							})
							$("#dialog-numpad-discount").jqxWindow('close');
						}else{
							var DiscountAmount = parseFloat(EnterDiscountAmount).toFixed(2);
							var postdata ="DiscountType=Dollar";
								postdata+="&DiscountUnique="+DiscountUnique;
								postdata+="&discountamount="+DiscountAmount;
								postdata+="&discountname="+DiscountName;
							posData.ReceiptDiscount(postdata)
							.success(function(data){
								if(data.success == true){
									load_data(data);
									GlobalItemUnique = {};
									$("#dialog-numpad-discount").jqxWindow('close');
									PoleDisplayTotal();
								}else{
									$("#dialog-numpad-discount").jqxWindow('close'); 
									var msg = "Discount must be less than the total amount";
									NumpadAlertClose('discount_receipt_alert', msg)
									.then(function(){
										WindowPopupAlert('Receipt Discount Alert');
									})
								}
							}).then(function(){
								$("#barcode_search").focus();
							})
						}
					})
				}
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close'); 
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_receipt_alert', msg)
			.then(function(){
				WindowPopupAlert('Receipt Discount Alert');
			})
		}
	})

	$(document).on('submit', '#receipt_discount_dollar_form_two', function(e){
		e.preventDefault();
		var EnterDiscountAmount = parseFloat( $("#typed_discount_value").val() ).toFixed(2);
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}

		$scope.DiscountAmountField = EnterDiscountAmount;
		
		if(parseFloat(EnterDiscountAmount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('receipt_change_discount_dollar_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Receipt Dollar | New Discount '+ parseFloat(EnterDiscountAmount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}

		DiscountApply = "Yes";

		var postdata ="NewPrice="+parseFloat($("#typed_discount_value").val()).toFixed(2);
			postdata+="&DiscountType=Dollar";
			postdata+="&DiscountApply=Yes";
		posData.DiscountReceiptLineBelowCost(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
				$("#discount_content").jqxWindow('close');
			}else{
				var DiscountAmount = parseFloat($("#typed_discount_value").val()).toFixed(2);
				var postdata ="DiscountType=Dollar";
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&discountamount="+DiscountAmount;
					postdata+="&discountname="+DiscountName;
					postdata+="&DiscountApply=Yes";
				posData.ReceiptDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						PoleDisplayTotal();
					}else{
						var msg = "Discount must be less than the total amount";
						NumpadAlertClose('discount_receipt_alert', msg)
						.then(function(){
							WindowPopupAlert('Receipt Discount Alert');
						})
					}

					$("#discount_content").jqxWindow('close');
				}).then(function(){
					$("#barcode_search").focus();
				})
			}
		})
	})

	$(document).on('submit', '#receipt_change_discount_dollar_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						if(parseFloat($scope.DiscountAmountField) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact your manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						DiscountApply = "Yes";
						var postdata ="NewPrice="+parseFloat($scope.DiscountAmountField).toFixed(2);
							postdata+="&DiscountType=Dollar";
							postdata+="&DiscountApply=Yes";
						posData.DiscountReceiptLineBelowCost(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{
								var DiscountAmount = parseFloat($scope.DiscountAmountField).toFixed(2);
								var postdata ="DiscountType=Dollar";
									postdata+="&DiscountUnique="+DiscountUnique;
									postdata+="&discountamount="+DiscountAmount;
									postdata+="&discountname="+DiscountName;
									postdata+="&DiscountApply=Yes";
								posData.ReceiptDiscount(postdata)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										GlobalItemUnique = {};
										PoleDisplayTotal();
									}else{
										var msg = "Discount must be less than the total amount";
										NumpadAlertClose('discount_receipt_alert', msg)
										.then(function(){
											WindowPopupAlert('Receipt Discount Alert');
										})
									}

									$("#dialog-numpad-passcode").jqxWindow('close');
								}).then(function(){
									$("#barcode_search").focus();
								})
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	// Receipt Discount direct (no numpad)
	$(document).on('click', '#receipt_discount_dollar_form_two #_discount_content_sell_price', function(e){
		e.preventDefault();
		var currentReceiptDiscount = $("#ReceiptDiscountView").text();
		var AddDiscountTotal = parseFloat( $("#typed_discount_value").val() ) + parseFloat(currentReceiptDiscount);

		if(parseFloat(AddDiscountTotal) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.DiscountAmountField = AddDiscountTotal;
			$scope.FunctionButton ='DiscountReceiptDollar';
			NumpadPasscode('receipt_add_another_discount_direct_security')
			.then(function(){
				WindowPopupPasscode('Discount Receipt Dollar | New Discount '+parseFloat(AddDiscountTotal).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : '') )
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');
			return;
		}

		DiscountApply = "No";

		var postdata ="NewPrice="+parseFloat($("#typed_discount_value").val()).toFixed(2);
			postdata+="&DiscountType=Dollar";
			postdata+="&DiscountApply=No";

		$scope.DiscountAmountField = parseFloat($("#typed_discount_value").val()).toFixed(2);

		posData.DiscountReceiptLineBelowCost(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
				$("#discount_content").jqxWindow('close');
			}else{
				var DiscountAmount = parseFloat($("#typed_discount_value").val()).toFixed(2);
				var postdata ="DiscountType=Dollar";
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&discountamount="+DiscountAmount;
					postdata+="&discountname="+DiscountName;
					postdata+="&DiscountApply=No";
				posData.ReceiptDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						PoleDisplayTotal();
					}else{
						var msg = "Discount must be less than the total amount";
						NumpadAlertClose('discount_receipt_alert', msg)
						.then(function(){
							WindowPopupAlert('Receipt Discount Alert');
						})
					}
					$("#discount_content").jqxWindow('close');

				}).then(function(){
					$("#barcode_search").focus();
				})
			}
		})
	})

	$(document).on('submit', '#receipt_add_another_discount_direct_security', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						console.log();
						if($scope.DiscountAmountField > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact your manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						DiscountApply = "No";

						var postdata ="NewPrice="+parseFloat($scope.DiscountAmountField).toFixed(2);
							postdata+="&DiscountType=Dollar";
							postdata+="&DiscountApply=No";

						posData.DiscountReceiptLineBelowCost(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{
								var DiscountAmount = parseFloat($scope.DiscountAmountField).toFixed(2);
								var postdata ="DiscountType=Dollar";
									postdata+="&DiscountUnique="+DiscountUnique;
									postdata+="&discountamount="+DiscountAmount;
									postdata+="&discountname="+DiscountName;
									postdata+="&DiscountApply=No";
								posData.ReceiptDiscount(postdata)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										GlobalItemUnique = {};
										PoleDisplayTotal();
									}else{
										var msg = "Discount must be less than the total amount";
										NumpadAlertClose('discount_receipt_alert', msg)
										.then(function(){
											WindowPopupAlert('Receipt Discount Alert');
										})
									}
									$("#dialog-numpad-passcode").jqxWindow('close');

								}).then(function(){
									$("#barcode_search").focus();
								})
							}
						})

					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
	
	//Discount
	var populateNumpadPriceChange = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-change-price").append('<div id="price_change_numpad" style="background: #144766; color:#EEE;"></div>');
			$("#price_change_numpad").html('');
			$("#price_change_numpad").append(''+
			'<div style="margin-bottom: 5px;">'+
				'<div class="" style="font-weight:bold;">Item: '+$scope.price_change_itemno+'</div>'+
				'<div class="" style="font-weight:bold;">Description: '+$scope.price_change_desc+'</div>'+
			'</div>'+
			'<h4 style="text-align:center;">Enter New Price</h4>'+
			'');
			$("#price_change_numpad").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="number_field" class="hdfield" maxlength="'+NumpadPriceInputLimit+'" style="color:#000">'+
				'<div id="keyboard"></div>'+
			'</form>');
			def.resolve();
		},100);
		return def.promise();
	}
	
	var WindowPopupPriceChange = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-change-price").jqxWindow({
				height: 490,
				minWidth: 300,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-change-price').jqxWindow('open');
			def.resolve();
		},100);
		return def.promise();
	}
	
	var NumpadPriceChange = function(form_name){
		var def = $.Deferred();
		populateNumpadPriceChange(form_name)
		.then(function(){
			$('#keyboard').hdkeyboard({
				layout: "numeric",
				input: $('#number_field')
			});
			setTimeout(function(){
				$("#number_field").focus();
				def.resolve();
			},100);
		});
		return def.promise();
	}
	
	//-->Price Change;
	$scope.PriceChange_old = function(){
		$("#PriceChange").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		var postDataPriceChangeInfo = "Unique="+SelectedItem;
		setTimeout(function(){
			$("#PriceChange").attr("disabled", false);
		},1000);
		$("#dialog-numpad-all-price").jqxWindow('close');
		posData.ItemInfo(postDataPriceChangeInfo)
		.success(function(data) {
			if(data.price_change){
				$scope.price_change_itemno = data.Item;
				$scope.price_change_desc = data.Description;
				NumpadPriceChange('price_change_form')
				.then(function(){
					WindowPopupPriceChange('Price Change')
					.then(function(){
						$("#number_field").val(data.SellPrice);
						$("#number_field").focus();
						setTimeout(function(){
							$("#number_field").select();
						},100);
					})
				})
			}else{
				var msg = "To change discount amount, please remove and add the discount again.";
				NumpadAlertClose('discount_price_change_alert', msg)
				.then(function(){
					WindowPopupAlert('Change Price Info');
				})
			}
		})
	};

	$scope.PriceChange = function(){
		ItemInformation = [];
		myNumber = '';
		$("#PriceChange").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		var postdata ="FunctionButton=DiscountItem";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'DiscountItem';
				NumpadPasscode('price_change_passcode')
				.then(function(){
					WindowPopupPasscode('Price Change')
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#PriceChange").attr("disabled", false);
				$("#dialog-numpad-all-price").jqxWindow('close');
			}else{
				var ItemSelInfo 	= $(".selected").attr('id');
				var ItemCanDiscount = ItemSelInfo.split("=")[12];
				var ItemDescription = ItemSelInfo.split("=")[13];
				if(ItemCanDiscount == 0){
					var msg = ItemDescription+ " cannot be discounted";
					NumpadAlertOk('price_change_failed', msg)
					.then(function(){
						WindowPopupAlert('Info');
						$("#ItemInlineDiscountListfunction").attr("disabled", false);
					})
					$("#PriceChange").attr("disabled", false);
					return;
				}

				var postDataPriceChangeInfo ="Unique="+SelectedItem;
				setTimeout(function(){
					$("#PriceChange").attr("disabled", false);
				},1000);
				$("#dialog-numpad-all-price").jqxWindow('close');
				posData.ItemInfo(postDataPriceChangeInfo)
				.success(function(data) {
					if(data.price_change){
						$scope.price_change_itemno = data.Item;
						$scope.price_change_desc = data.Description;
						ItemInformation.push(data.ItemUnique, data.Item, data.Description, data.ListPrice, data.Discount);
						PriceChangeViewPage()
						.then(function(){
							PriceChangeReasonWindowProperties()
							.then(function(){
								$("#price_change_number_field").jqxNumberInput('focus')
								setTimeout(function(){
									var input = $('#price_change_number_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#price_change_number_field input").select();
								},100)
							})
						})
					}else{
						var msg = "To change discount amount, please remove and add the discount again.";
						NumpadAlertClose('discount_price_change_alert', msg)
						.then(function(){
							WindowPopupAlert('Change Price Info');
						})
					}
				})
			}
		})
	}

	$scope.PriceChangeReason = function(){
		ItemInformation = [];
		myNumber = '';
		$("#PriceChange").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		if($(".selected").length > 0){
			var postdata ="FunctionButton=DiscountItem";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'DiscountItem';
					NumpadPasscode('price_change_passcode')
					.then(function(){
						WindowPopupPasscode('Price Change')
						.then(function(){
							$("#number_field").focus();
						})
					})
					$("#PriceChange").attr("disabled", false);
				}else{
					var ItemSelInfo 	= $(".selected").attr('id');
					var ItemCanDiscount = ItemSelInfo.split("=")[12];
					var ItemDescription = ItemSelInfo.split("=")[13];
					if(ItemCanDiscount == 0){
						var msg = ItemDescription+ " cannot be discounted";
						NumpadAlertOk('price_change_failed', msg)
						.then(function(){
							WindowPopupAlert('Info');
							$("#ItemInlineDiscountListfunction").attr("disabled", false);
						})

						return;
					}

					var postDataPriceChangeInfo ="Unique="+SelectedItem;
					setTimeout(function(){
						$("#PriceChange").attr("disabled", false);
					},1000);
					$("#dialog-numpad-all-price").jqxWindow('close');
					posData.ItemInfo(postDataPriceChangeInfo)
					.success(function(data) {
						if(data.price_change){
							$scope.price_change_itemno = data.Item;
							$scope.price_change_desc = data.Description;
							ItemInformation.push(data.ItemUnique, data.Item, data.Description, data.ListPrice, data.Discount);
							PriceChangeViewPage()
							.then(function(){
								PriceChangeReasonWindowProperties()
								.then(function(){
									
								})
							})
						}else{
							var msg = "To change discount amount, please remove and add the discount again.";
							NumpadAlertClose('discount_price_change_alert', msg)
							.then(function(){
								WindowPopupAlert('Change Price Info');
							})
						}
					})
				}
			})
		}else{
			var msg = "Please select Item first.";
			NumpadAlertClose ('no_item_selected', msg)
			.then(function(){
				WindowPopupAlert("Info");
			})
		}
	}

	$(document).on('submit', '#price_change_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var ItemSelInfo 	= $(".selected").attr('id');
						var ItemCanDiscount = ItemSelInfo.split("=")[12];
						var ItemDescription = ItemSelInfo.split("=")[13];
						if(ItemCanDiscount == 0){
							var msg = ItemDescription+ " cannot be discounted";
							NumpadAlertOk('price_change_failed', msg)
							.then(function(){
								WindowPopupAlert('Info');
								$("#ItemInlineDiscountListfunction").attr("disabled", false);
							})

							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						ItemInformation = [];
						myNumber = '';
						$("#PriceChange").attr("disabled", true);
						var SelectedItem = GlobalItemUnique.Unique;
						var postDataPriceChangeInfo ="Unique="+SelectedItem;
						setTimeout(function(){
							$("#PriceChange").attr("disabled", false);
						},1000);
						$("#dialog-numpad-all-price").jqxWindow('close');
						posData.ItemInfo(postDataPriceChangeInfo)
						.success(function(data) {
							if(data.price_change){
								$scope.price_change_itemno = data.Item;
								$scope.price_change_desc = data.Description;
								ItemInformation.push(data.ItemUnique, data.Item, data.Description, data.ListPrice, data.Discount);
								PriceChangeViewPage()
								.then(function(){
									PriceChangeReasonWindowProperties()
									.then(function(){
										
									})
								})
							}else{
								var msg = "To change discount amount, please remove and add the discount again.";
								NumpadAlertClose('discount_price_change_alert', msg)
								.then(function(){
									WindowPopupAlert('Change Price Info');
								})
							}
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('price_change_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('price_change_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('price_change_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$("#sell_below_cost").on('close', function(e){
		e.preventDefault();
		$("#sell_below_cost_container").remove();
	})
	/*
	|-----------------------------------------------------------------------|
	| Sell Below Price Window
	|-----------------------------------------------------------------------|
	*/
	var populateSellBelowCostWindow = function(html){
		var def = $.Deferred();
		$("#sell_below_cost").append('<div id="sell_below_cost_container" style="background: #144766; color:#EEE; padding:0; margin:0;"></div>');
		$("#sell_below_cost_container").html('');
		$("#sell_below_cost_container").append(html);
		setTimeout(function(){
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowBelowCost = function(header_title){
		var def = $.Deferred();
		var OrderListWidth = ($(".orderedlist").width() + 3);
		setTimeout(function(){
			$("#sell_below_cost").jqxWindow({
				height: 200,
				width: 350,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#sell_below_cost').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	$(document).on('submit', '#price_change_form', function(e){
		e.preventDefault();
		var Price = $("#number_field").val();
		var Unique = GlobalItemUnique.Unique;
		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+Price;
		posData.SellBelowCostPage(postdata)
		.success(function(data){
			if(data.NewPrice < data.OldPrice){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
					$("#dialog-numpad-change-price").jqxWindow('close');
				})
			}else if(data.NewPrice == data.OldPrice){
				$("#dialog-numpad-change-price").jqxWindow('close');
			}else if(data.NewPrice > data.OldPrice){
				var postDataPriceChange="Unique="+Unique;
					postDataPriceChange+="&NewPrice="+Price;
				if(Price){
					posData.PriceChange(postDataPriceChange)
					.success(function(data){
						load_data(data);
						PoleDisplay(Unique);
						GlobalItemUnique = {};
						$("#dialog-numpad-change-price").jqxWindow('close');
					})
				}else{
					$("#dialog-numpad-change-price").jqxWindow('close');
				}
			}
		})
	})

	var SellBelowPrice = 0;
	$(document).on('click', '#sell_below_cost_yes', function(e){
		e.preventDefault();
		$scope.FunctionButton = "SellBelowCost";
		var postdata ="FunctionButton=SellBelowCost";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				SellBelowPrice = $("#sell_below_cost_amount").val();
				$scope.FunctionButton = 'SellBelowCost';
				NumpadPasscode('sell_below_cost_passcode')
				.then(function(){
					WindowPopupPasscode('Sell Below Price')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				var Price = $("#sell_below_cost_amount").val();
				var Unique = GlobalItemUnique.Unique;
				var postDataPriceChange="Unique="+Unique;
					postDataPriceChange+="&NewPrice="+$("#sell_below_cost_amount").val();
					postDataPriceChange+='&PriceChangeReasonUnique='+ParsePriceChangeReasonUnique;	
					postDataPriceChange+="&PriceChangeReason="+ParsePriceChangeReason;
					postDataPriceChange+="&PriceChangeNote="+PriceChangeNote;
				if(Price){
					posData.PriceChange(postDataPriceChange)
					.success(function(data){
						load_data(data);
						PoleDisplay(Unique);
						GlobalItemUnique = {};
						$('#sell_below_cost').jqxWindow('close');
					})
				}else{
					$('#sell_below_cost').jqxWindow('close');
				}
			}
		})
	})
			
	$(document).on('click', '#discount_below_cost_yes', function(e){
		e.preventDefault();
		$scope.FunctionButton = "SellBelowCost";
		var postdata ="FunctionButton=SellBelowCost";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'SellBelowCost';
				NumpadPasscode('discount_below_cost_passcode')
				.then(function(){
					WindowPopupPasscode('Sell Below Price')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				var DiscountNewPrice = '';
				if(DiscountPromptNewPrice > 0){
					DiscountNewPrice = DiscountPromptNewPrice;
				}else{
					DiscountNewPrice = DiscountItemPrice;
				}
				var Unique = GlobalItemUnique.Unique;	
				var postdata ="ReceiptDetailsUnique="+Unique;
					postdata+="&ItemUnique="+DiscountItemUnique;
					postdata+="&SellPrice="+parseFloat(DiscountPromptNewPrice).toFixed(2);
					postdata+="&DiscountType="+DiscountType;
					postdata+="&DiscountName="+DiscountName;
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&Quantity="+ItemQuantity;
				posData.SaveItemDiscount(postdata)
				.success(function(data){
					if(data.success){
						load_data(data);
						// GetCustomerSave();
						setTimeout(function(){
							GetSelectedCustomer();
						},500);
						$scope.BtnPaymentWhen = false;
						PoleDisplayTotal();
						Qquestion = 0;
					}else{
						var msg = data.msg;
						NumpadAlertClose('set_discount_from_list', msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
							.then(function(){
								$(".alert_close").focus();
							})
						})
					}
				})
				$('#sell_below_cost').jqxWindow('close');
			}
		})
	})

	$(document).on('submit', '#discount_below_cost_passcode', function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var CardRead = $("#number_field").val();
        var CRP = new CardReaderParser(CardRead);
        if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var DiscountNewPrice = '';
						if(DiscountPromptNewPrice > 0){
							DiscountNewPrice = DiscountPromptNewPrice;
						}else{
							DiscountNewPrice = DiscountItemPrice;
						}
						var Unique = GlobalItemUnique.Unique;
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&ItemUnique="+DiscountItemUnique;
							postdata+="&SellPrice="+parseFloat(DiscountNewPrice).toFixed(2);
							postdata+="&DiscountType="+DiscountType;
							postdata+="&DiscountName="+DiscountName;
							postdata+="&DiscountUnique="+DiscountUnique;
							postdata+="&Quantity="+ItemQuantity;
						posData.SaveItemDiscount(postdata)
						.success(function(data){
							if(data.success == true){
								load_data(data);
								// GetCustomerSave();
								setTimeout(function(){
									GetSelectedCustomer();
								},500);
								$scope.BtnPaymentWhen = false;
								PoleDisplayTotal();
								Qquestion = 0;
							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
						})
						$('#sell_below_cost').jqxWindow('close');
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}					
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#discount_below_cost_no', function(e){
		e.preventDefault();
		$('#sell_below_cost').jqxWindow('close');
	})

	$(document).on('submit', '#sell_below_cost_passcode', function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var CardRead = $("#number_field").val();
        var CRP = new CardReaderParser(CardRead);
        if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var Price = SellBelowPrice;
						var Unique = GlobalItemUnique.Unique;
						var postDataPriceChange="Unique="+Unique;
							postDataPriceChange+="&NewPrice="+Price;
						if(Price){
							posData.PriceChange(postDataPriceChange)
							.success(function(data){
								load_data(data);
								PoleDisplay(Unique);
								GlobalItemUnique = [];
							})
						}
						$('#sell_below_cost').jqxWindow('close');
						$("#dialog-numpad-passcode").jqxWindow('close');
						SellBelowPrice = 0;
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}					
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#sell_below_cost_no', function(e){
		e.preventDefault();
		$('#sell_below_cost').jqxWindow('close');
	})
		
	
	//Quantity Change
	$scope.Quantity = function(){

		ItemInfoDescription = '';
		console.log("desc",ItemInfoDescription);
		$("#Quantityfunction").attr("disabled", true);
		$("#quantity_numpad").html('');
		var itemInfo = $(".selected").attr('id');
		
		ItemInfoDescription = itemInfo.split('=')[13]; 

		var SelectedItem = GlobalItemUnique.Unique;
		var postDataQuantityChangeInfo="Unique="+SelectedItem;
		if(SelectedItem){
			var postdata="ReceiptDetailsUnique="+SelectedItem;
			posData.CheckCompleted(postdata)
			.success(function(data){
				if(data.completed == 4){
					var msg = "Cannot change Quantity, add item instead.";
					NumpadAlertClose ('item_cannot_remove', msg)
					.then(function(){
						WindowPopupAlert ('Removing Item')	
					}) 
				}else{
					var KitchenPrinterStatus = $scope.KitchenPrinter;
					var Process = false;
					if(KitchenPrinterStatus){
						var ItemStat = function() {
							var def = $.Deferred();
							var postdata="ReceiptDetailsUnique="+SelectedItem;
							posData.KitchenPrintProcessed(postdata)
							.success(function(data){
								if(data.success == true){
									Process = true;
								}else if(data.success == false){
									Process = false;
								}
								def.resolve(Process);
							});
							return def.promise();
						}
					}else{
						Process = true;
						var ItemStat = function() {
							var def = $.Deferred();
							def.resolve(Process);
							return def.promise();	
						}
					}
			
					ItemStat().done(function(status){
						if(status){
							posData.TransCheck(postDataQuantityChangeInfo)
							.success(function(data){
								if(data.qtychange == true){
									posData.ItemInfo(postDataQuantityChangeInfo)
									.success(function(data){
										$scope.iteminfo = data;
									}).then(function(success){
										posData.QuantityTotal(postDataQuantityChangeInfo)
										.success(function(data2) {
											NumpadQuantity()
											.then(function(){
												WindowPopupQuantity()
												.then(function(){
													$("#quantity_field").val(data2.Quantity);
													$("#quantity_field").jqxNumberInput('focus');
													setTimeout(function(){
														var input = $('#quantity_field input')[0];
														if('selectionStart' in input) {
															input.setSelectionRange(0, 0);
														}else{
															var range = input.createTextRange();
															range.collapse(true);
															range.moveEnd('character', 0);
															range.moveStart('character', 0);
															range.select();
														}
														$("#quantity_field input").select();
													},100)
												})
											})
										})
									});
								}else if(data.qtychange == false){
									var msg = "Can't change the item Quantity, please add item instead.";
									NumpadAlertClose ('quantity_cannot_change_alert', msg)
									.then(function(){
										WindowPopupAlert ('Quantity Change Alert')
										.then(function(){
											
										})	
									}) 
								}
							})
						}else{
							var msg="Product is already printed. <br/>";
								msg+="Please add new product instead.";
							NumpadAlertClose ('item_printed_alert', msg)
							.then(function(){
								WindowPopupAlert ('Quantity Change Alert');	
							}) 
						}
					})
				}
			})
		}else{
			var msg = "Please select item first.";
			NumpadAlertClose ('item_printed_alert', msg)
			.then(function(){
				WindowPopupAlert ('Quantity Change Alert')	
			}) 
		}
		setTimeout(function(){
			$("#Quantityfunction").attr("disabled", false);
		},1000);
	};
		
	$(document).on('submit','#quantity_form', function(e){
		e.preventDefault();
		var Quantity = $("#quantity_field").val();
		var Unique = GlobalItemUnique.Unique;
		var postDataQuantityChange="Unique="+Unique;
			postDataQuantityChange+="&NewQuantity="+Quantity;
			postDataQuantityChange+="&PriceQtyChange="+JSON.stringify(ItemPriceQtyArray);

		console.log(postDataQuantityChange);
		// return;

		if(Quantity){
			posData.QuantityChange(postDataQuantityChange)
			.success(function(data){
				if(data.success == true){
					load_data(data);
					$("#quantity_numpad").html('');
					$("#dialog-numpad-quantity").jqxWindow('close');
					GlobalItemUnique = {};
					PoleDisplayTotal();
				}else{
					$("#dialog-numpad-quantity").jqxWindow('close');
					var msg = "Gift Card Quantity cannot be changed, please sell or return gift card instead."
					NumpadAlertOk('item_note_alert', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
					});
				}
				ItemPriceQtyArray = [];
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			$("#quantity_numpad").html('');
			$("#dialog-numpad-quantity").jqxWindow('close');
		}
	})

	$scope.ClearDiscountItem = function (){
		$scope.itemdiscfield = '';
	};

	var Types = [];
	var OrdeTypeList = function(){
		posData.OrderTypeList()
		.success(function(data){
			Types.push(data);
		})
	}

	var populateOrderTypeApp = function(form_name, types){
		var def = $.Deferred();
		setTimeout(function(){
			$("#ordertype-popup").append('<div id="ordertype-popup-container" style="background: #144766; color:#EEE;"></div>');
			$("#ordertype-popup-container").html('');
			$("#ordertype-popup-container").append(types);
			$("#ordertype-popup-container").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="ordertype_input" class="hdfield" style="color:#000; display:none;">'+
				'<div id="keyboard_order_type"></div>'+
			'</form>');
			def.resolve();
		},100);
		return def.promise();
	}
		
	var WindowPopupOrderTypeApp = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#ordertype-popup").jqxWindow({
				height: 320,
				width: 300,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }	
			});
			$('#ordertype-popup').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var OrderTypeWindowApp = function(form_name, types){
		var def = $.Deferred();
		populateOrderTypeApp(form_name, types)
		.then(function(){
			$('#keyboard_order_type').hdkeyboard({
			  layout: "alert_yes_ok",
			  input: $('#ordertype_input')
			});
			$('#ordertype_input').focus();
			def.resolve();
		})
		return def.promise();
	}

	var OrderTypeIDApp = '';
	$(document).on('click', '.radio_ordertype', function(){
		var id = $('input[type=radio][name=group1]:checked').attr('id');
		OrderTypeIDApp = id;
	});

	$(document).on("submit", "#OrderTypePopupApp", function(e){
		e.preventDefault();
		if(OrderTypeIDApp > 0){
			$("#OrderType").val(OrderTypeIDApp);
			$("#ordertype-popup").jqxWindow('close');
			var postdata ="OrderTypeUnique="+OrderTypeIDApp;
			posData.SetOrderType(postdata)
			.success(function(data){
				OnHoldFunction();
			})
		}else{
			var msg = "Select Order Type";
			NumpadAlertClose('ordertype_options', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			});
		}
	})
	
	
	//-->On Hold Sale 12*04*17
	$scope.OnHold = function(){
		$("#OnHoldfunction").attr("disabled", true);
		var OrderTypePopup = $("#POSOrderTypeRequired").val();
		var postdata ="FunctionButton=OnHold";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'OnHold';
				NumpadPasscode('onhold_passcode')
				.then(function(){
					WindowPopupPasscode('On Hold')
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#OnHoldfunction").attr("disabled", false);
			}else{
				if(OrderTypePopup > 0){
					if($("#OrderTypeName").val() <= 0){
						posData.OrderTypePopupList()
						.success(function(data){
							if(data.OrderType == null || data.OrderType == ''){
								OrderTypeIDApp = data.Default;
								OrderTypeWindowApp('OrderTypePopupApp', data.html)
								.then(function(){
									WindowPopupOrderTypeApp('Order type')
									.then(function(){
										$("#OnHoldfunction").attr("disabled", false);
									})
								})
							}else{
								$("#OnHoldfunction").attr("disabled", false);
								OnHoldFunction();
							}
						})
					}else{
						$("#OnHoldfunction").attr("disabled", false);
						OnHoldFunction();
					}
				}else{
					$("#OnHoldfunction").attr("disabled", false);
					OnHoldFunction();
				}
			}
		})
	}

	$(document).on('submit', '#onhold_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var OrderTypePopup = $("#POSOrderTypeRequired").val();
						if(OrderTypePopup > 0){
							if($("#OrderTypeName").val() <= 0){
								posData.OrderTypePopupList()
								.success(function(data){
									OrderTypeIDApp = data.Default;
									OrderTypeWindowApp('OrderTypePopupApp', data.html)
									.then(function(){
										WindowPopupOrderTypeApp('Order type')
									})
								})
							}else{
								$("#OnHoldfunction").attr("disabled", false);
								OnHoldFunction();
							}
						}else{
							$("#OnHoldfunction").attr("disabled", false);
							OnHoldFunction();
						}
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	//-->On Hold Sale Old;
	$scope.OnHoldOld = function(){
		var DisableOnHold = $("#POSDisableOnHold").val();
		if(DisableOnHold != 1){
			$("#OnHoldfunction").attr("disabled", true);
			var OrderTypePopup = $("#POSOrderTypeRequired").val();
			if(OrderTypePopup > 0){
				if($("#OrderTypeName").val() <= 0){
					posData.OrderTypePopupList()
					.success(function(data){
						OrderTypeIDApp = data.Default;
						OrderTypeWindowApp('OrderTypePopupApp', data.html)
						.then(function(){
							WindowPopupOrderTypeApp('Order type')
						})
					})
				}else{
					$("#OnHoldfunction").attr("disabled", false);
					OnHoldFunction();
				}
			}else{
				$("#OnHoldfunction").attr("disabled", false);
				OnHoldFunction();
			}
		}else{
			var msg ="You must first Complete or Cancel Sale before continuing.";
			NumpadAlertClose('onhold_disabled', msg)
			.then(function(){
				WindowPopupAlert("Information")
			})
		}
	};

	$(document).on('click', '.clear', function(e){
		e.preventDefault();
		$("#search_field").val('');
		$("#search_field").focus();
	})

	var OnHoldFunction = function(){
		posData.CheckSettingRequiredLabel()
		.success(function(data){
			if(data.OnHoldRequireLabel != 1){
				OnHold()
				.then(function(){
					ItemsCategoryView();
					LoadEverything();
				})
			}else{
				$("#custom_item_keyboard").html('');
				var type = 7;
				posData.CheckReceiptNote()
				.success(function(data){
					if(data.RNotes == '' || data.RNotes == null){
						NumpadKeyboard('receipt_note_form_onhold')
						.then(function(){
							WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
							.then(function(){
								setTimeout(function(){
									$("#note_receipt_header_unique").val(data.RUnique);
									var searchInput = $('#search_field');
									var strLength = searchInput.val(data.RNotes).length * 25;
									searchInput.focus();
									searchInput[0].setSelectionRange(strLength, strLength);
								},100);
							})
						})
					}else{
						OnHold()
						.then(function(){
							ItemsCategoryView();
							LoadEverything();
						})
					}
				})
			}
		})
	}

	$(document).on('submit', '#receipt_note_form_onhold', function(e){
		e.preventDefault();
		var p = new SwipeParserObj($("#search_field").val());
		if( p.hasTrack1 ){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			var creditholdername = p.account_name.replace('/', ' ')
			creditholdername = creditholdername.trim();
			$("#search_field").val(creditholdername);
			var splitName = p.account_name.split('/');
			var postdata ="FirstName="+splitName[1];
				postdata+="&LastName="+splitName[0];
			posData.SwipeCreateCustomer(postdata)
			.success(function(data){
				
			})
		}
		var postData="receiptnotemsg=" +$("#search_field").val();
			postData+="&ReceiptHeaderUnique="+$("#note_receipt_header_unique").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success == true){
				$("#dialog-numpad-keyboard").jqxWindow('close');
				$("#price_numpad").html('');
				$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote);
				OnHold()
				.then(function(){
					if(GotoCashierMenu){
						$window.location = base_url + 'pos/cashier';
					}else{
						ItemsCategoryView();
						LoadEverything();
					}
				})
			}
		})
	})

	$scope.NoItemTax = function(){
		$("#NoItemTaxfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		var postDataItemtaxInfo="Unique="+SelectedItem;
		if(SelectedItem){
			posData.CheckNoItemTax(postDataItemtaxInfo)
			.success(function(data){
				if(data.success == true){
					load_data(data);
					PoleDisplay(SelectedItem);
					$scope.ItemNoTaxHide = true;
					$scope.ItemTaxHide = false;
				}
				ReceiptTaxChecker();
				GlobalItemUnique = {};
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			var msg = "Please select item first.";
				NumpadAlertClose ('item_printed_alert', msg)
				.then(function(){
				WindowPopupAlert ('No Item Tax Alert')	
				}) 
		}
		setTimeout(function(){
			$("#NoItemTaxfunction").attr("disabled", false);
		},1000);
	};

	$scope.ItemTax = function(){
		$("#ItemTaxfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		var postDataItemtaxInfo="Unique="+SelectedItem;
		if(SelectedItem){
			posData.CheckItemTax(postDataItemtaxInfo)
			.success(function(data){
				if(data.success == true){
					load_data(data);
					PoleDisplay(SelectedItem);
					$scope.ItemNoTaxHide = false;
					$scope.ItemTaxHide = true;
				}
				ReceiptTaxChecker();
				GlobalItemUnique = {};
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			var msg = "Please select item first.";
				NumpadAlertClose ('item_printed_alert', msg)
				.then(function(){
				WindowPopupAlert ('Item Tax Alert')	
				}) 
		}
		setTimeout(function(){
			$("#ItemTaxfunction").attr("disabled", false);
		},1000);
	};

	$scope.NoReceiptTax = function(){
		$("#NoReceiptTaxfunction").attr("disabled", true);
		posData.OrderedItemList()
		.success(function(data){
			if(data && data !=""){
				posData.UpdateNoReceiptTax()
				.success(function(data){
					load_data(data);
					$scope.ReceiptNoTaxHide = true;
					$scope.ReceiptTaxHide = false;
					PoleDisplayTotal();
				})
			}else{
				$scope.alert = {
					message: "Add Item without holding tax."
				};
				Alertdialog.setTitle("No Receipt Tax");
				Alertdialog.open();
			}
		}).then(function(){
			$("#barcode_search").focus();
		})
		setTimeout(function(){
			$("#NoReceiptTaxfunction").attr("disabled", false);
		},1000);
	};

	$scope.ReceiptTax = function(){
		$("#ReceiptTaxfunction").attr("disabled", true);
		posData.ReceiptTax()
		.success(function(data){
			if(data.success == true){
				load_data(data);
				$scope.ReceiptNoTaxHide = false;
				$scope.ReceiptTaxHide = true;
				PoleDisplayTotal();
			}
		}).then(function(){
			$("#barcode_search").focus();
		})
		setTimeout(function(){
			$("#ReceiptTaxfunction").attr("disabled", false);
		},1000);
	};

	$scope.searchCustomergridSettings = {
		width: "100%",
		height: 420,
		altRows: true,
		theme: 'bootstrap',
		pageable: true,
		pagerMode: 'default',
		columnsResize: true,
		filterable: true,
		filterMode: 'simple',
		source:  {
			dataType: "json",
			dataFields: [
				{ name: 'Unique', type: 'int' },
				{ name: 'FirstName', type: 'string' },
				{ name: 'LastName', type: 'string' },
				{ name: 'Company', type: 'string' },
				{ name: 'Address1', type: 'string' },
				{ name: 'Phone1', type: 'string'},
				{ name: 'Phone2', type: 'string'},
				{ name: 'Email', type: 'string'},
			],
			localdata: {}
		},
		columns: [
			{ text: 'Unique', dataField: 'Unique', hidden: true},
			{ text: 'First Name', dataField: 'FirstName', width: '15%' },
			{ text: 'Last Name', dataField: 'LastName', width: '15%' },
			{ text: 'Company', dataField: 'Company', width: '15%' },
			{ text: 'Address', dataField: 'Address', width: '20%' },
			{ text: 'Phone1', dataField: 'Phone1', width: '10%' },
			{ text: 'Phone2', dataField: 'Phone2', width: '10%'},
			{ text: 'Email', dataField: 'Email', width: '15%'}
		]
	}
		
	$rootScope.$on("CallEditReceiptButtonFn", function(){
		$scope.EditReceiptButtonFn();
	})

	$scope.EditReceiptButtonFn = function(){
		EditReceiptButton();
	}

	var NewSaleButtons = function(){
		$scope.BtnRemoveMultipleWhen = true;
		$scope.BtnGiftReceiptWhen = true;
		$scope.BtnReorder = false;
		$scope.BtnItemSplitCheck = false;
		$scope.BtnPaymentWhen = true;
		$scope.BtnRecallWhen = false;
		$scope.BtnOnHoldWhen = true;
		$scope.BtnRemoveItemWhen = true;
		$scope.BtnCancelSaleWhen = true;
		$scope.BtnDiscountItemWhen = true;
		$scope.BtnReceiptDiscountWhen = true;
		$scope.BtnDiscountReceiptWhen = true;
		$scope.BtnPriceChangeWhen = true;
		$scope.BtnReturnWhen = true;
		$scope.BtnQuantityWhen = true;
		$scope.BtnItemTaxWhen = true;
		$scope.BtnReceiptNoTaxWhen = true;
		$scope.BtnReceiptTaxWhen = true;
		$scope.BtnReceiptNoteWhen = false;
		$scope.BtnItemNoteWhen = true;
		$scope.BtnItemsWhen = false; 
		$scope.DropdownWhen = false;
		$scope.BtnAddCustWhen = false;
		$scope.BtnEditWhen = false;
		$scope.TxtSearchWhen = false;
		$scope.BtnSearchWhen = false;
		$scope.CustomerFormWhen = false;
		$scope.CustomerLinkWhen = false;
		$scope.BtnApplyPaymentWhen = false;
		$scope.KitchenNoteDisabled = true;
		$scope.BtnEBTCalulateWhen = true;
		$scope.QtyBeforeWhen = false;
		$scope.BtnReturnReceipt = false;
		$scope.BtnBeforeQtyWhen = false;
		var orderlist = $scope.ordereditemlist;
		if(orderlist.length == 0){
			$scope.BtnApplyPaymentWhen = true;
			ItemsCategoryView();
		}
		$scope.BtnCheckPrintWhen = true;
	};

	var CompletedSale = function(){
		$scope.BtnRemoveMultipleWhen = false;
		$scope.BtnGiftReceiptWhen = false;
		$scope.BtnItemSplitCheck = true;
		$scope.BtnReorder = true;
		$scope.BtnOnHoldWhen = true;
		$scope.BtnRemoveItemWhen = true;
		$scope.BtnCancelSaleWhen = true;
		$scope.BtnDiscountItemWhen = true;
		$scope.BtnReceiptDiscountWhen = true;
		$scope.BtnDiscountReceiptWhen = true;
		$scope.BtnPriceChangeWhen = true;
		$scope.BtnReturnWhen = true;
		$scope.BtnQuantityWhen = true;
		$scope.BtnItemTaxWhen = true;
		$scope.BtnReceiptNoTaxWhen = true;
		$scope.BtnReceiptTaxWhen = true;
		$scope.BtnReceiptNoteWhen = true;
		$scope.BtnItemNoteWhen = true;
		$scope.BtnItemsWhen = true;
		$scope.DropdownWhen = true;
		$scope.BtnAddCustWhen = true;
		$scope.BtnEditWhen = true;
		$scope.TxtSearchWhen = true;
		$scope.BtnSearchWhen = true;
		$scope.RemoveCustomerWhen = false;
		$scope.CustomerFormWhen = true;
		$scope.CustomerLinkWhen = true;
		$scope.KitchenNoteDisabled = true;
		$scope.BtnEBTCalulateWhen = true;
		$scope.BtnApplyPaymentWhen = true;
		$scope.QtyBeforeWhen = true;
		$scope.BtnCheckPrintWhen = false;
		$scope.BtnGiftReceiptWhen = false;
		$scope.BtnReturnReceipt = true;
		$scope.BtnDisableWhen = true;
		$scope.BtnBeforeQtyWhen = true;
	};

	var OnHoldClicked = function(){
		$scope.BtnRemoveMultipleWhen = true;
		$scope.BtnGiftReceiptWhen = true;
		$scope.BtnReorder = false;
		$scope.BtnItemSplitCheck = false;
		$scope.BtnPaymentWhen = true;
		$scope.BtnOnHoldWhen = true;
		$scope.BtnRemoveItemWhen = true;
		$scope.BtnCancelSaleWhen = true;
		$scope.BtnDiscountItemWhen = true;
		$scope.BtnReceiptDiscountWhen = true;
		$scope.BtnDiscountReceiptWhen = true;
		$scope.BtnPriceChangeWhen = true;
		$scope.BtnReturnWhen = true;
		$scope.BtnQuantityWhen = true;
		$scope.BtnItemTaxWhen = true;
		$scope.BtnReceiptNoTaxWhen = true;
		$scope.BtnReceiptTaxWhen = true;
		$scope.BtnReceiptNoteWhen = true;
		$scope.BtnItemNoteWhen = true;
		$scope.BtnCheckPrintWhen = true;
		$scope.KitchenNoteDisabled = true;
		$scope.BtnEBTCalulateWhen = true;
		$scope.BtnApplyPaymentWhen = true;
		$scope.QtyBeforeWhen = false;
		$scope.BtnReturnReceipt = false;
		$scope.BtnBeforeQtyWhen = false;
	}
	
	var CancelSaleClicked = function(){
		$scope.BtnRemoveMultipleWhen = true;
		$scope.BtnGiftReceiptWhen = true;
		$scope.BtnReorder = true;
		$scope.BtnItemSplitCheck = false;
		$scope.BtnPaymentWhen = true;
		$scope.BtnOnHoldWhen = true;
		$scope.BtnRemoveItemWhen = true;
		$scope.BtnCancelSaleWhen = true;
		$scope.BtnDiscountItemWhen = true;
		$scope.BtnDiscountReceiptWhen = true;
		$scope.BtnReceiptDiscountWhen = true;
		$scope.BtnPriceChangeWhen = true;
		$scope.BtnReturnWhen = true;
		$scope.BtnQuantityWhen = true;
		$scope.BtnItemTaxWhen = true;
		$scope.BtnReceiptNoTaxWhen = true;
		$scope.BtnReceiptTaxWhen = true;
		$scope.BtnReceiptNoteWhen = true;
		$scope.BtnItemNoteWhen = true;
		$scope.BtnCheckPrintWhen = true;
		$scope.KitchenNoteDisabled = true;
		$scope.BtnEBTCalulateWhen = true;
		$scope.BtnApplyPaymentWhen = true;
		$scope.QtyBeforeWhen = false;
		$scope.BtnReturnReceipt = false;
		$scope.BtnBeforeQtyWhen = false;
	}

	var EditReceiptButton = function(){
		$scope.BtnRemoveItemWhen = false;
		$scope.BtnRemoveMultipleWhen = false;
		$scope.BtnGiftReceiptWhen = false;
		$scope.BtnPriceChangeWhen = false;
		$scope.BtnReorder = false;
		$scope.BtnItemSplitCheck = false;
		$scope.BtnReturnWhen = false;
		$scope.BtnQuantityWhen = false;
		$scope.BtnItemTaxWhen = false;
		$scope.BtnReceiptNoTaxWhen = false;
		$scope.BtnReceiptTaxWhen = false;
		$scope.BtnReceiptNoteWhen = false;
		$scope.BtnItemNoteWhen = false;
		$scope.BtnItemsWhen = false;
		$scope.DropdownWhen = false;
		$scope.BtnAddCustWhen = false;
		$scope.BtnEditWhen = false;
		$scope.TxtSearchWhen = false;
		$scope.BtnSearchWhen = false;
		$scope.CustomerFormWhen = false;
		$scope.CustomerLinkWhen = false;
		$scope.BtnCheckPrintWhen = false;
		$scope.KitchenNoteDisabled = false;
		$scope.BtnEBTCalulateWhen = false;
		$scope.BtnApplyPaymentWhen = true;
		$scope.QtyBeforeWhen = false;
		$scope.BtnDiscountItemWhen = false;
		$scope.BtnDiscountReceiptWhen = false;
		$scope.BtnReturnReceipt = false;
		$scope.BtnBeforeQtyWhen = false;
	}

	var EnableButtonsWhenItemAdded = function(){
		$scope.BtnRemoveMultipleWhen = false;
		$scope.BtnGiftReceiptWhen = false;
		$scope.BtnReorder = false;
		$scope.BtnItemSplitCheck = false;
		$scope.BtnPaymentWhen = false;
		$scope.BtnOnHoldWhen = false;
		$scope.BtnRemoveItemWhen = false;
		$scope.BtnCancelSaleWhen = false;
		$scope.BtnDiscountItemWhen = false;
		$scope.BtnDiscountReceiptWhen = false;
		$scope.BtnReceiptDiscountWhen = false;
		$scope.BtnPriceChangeWhen = false;
		$scope.BtnReturnWhen = false;
		$scope.BtnQuantityWhen = false;
		$scope.BtnItemTaxWhen = false;
		$scope.BtnReceiptNoTaxWhen = false;
		$scope.BtnReceiptTaxWhen = false;
		$scope.BtnReceiptNoteWhen = false;
		$scope.BtnItemNoteWhen = false;
		$scope.BtnItemsWhen = false;
		$scope.DropdownWhen = false;
		$scope.BtnAddCustWhen = false;
		$scope.BtnEditWhen = false;
		$scope.TxtSearchWhen = false;
		$scope.BtnSearchWhen = false;
		$scope.CustomerFormWhen = false;
		$scope.CustomerLinkWhen = false;
		$scope.BtnCheckPrintWhen = false;
		$scope.KitchenNoteDisabled = false;
		$scope.BtnEBTCalulateWhen = false;
		$scope.BtnApplyPaymentWhen = false;
		$scope.QtyBeforeWhen = false;
		$scope.BtnReturnReceipt = false;
		$scope.BtnBeforeQtyWhen = false;
	};

	var OtherButtons = function(){
		$scope.BtnRemoveMultipleWhen = true;
		$scope.BtnGiftReceiptWhen = false;
		$scope.BtnReorder = false;
		$scope.BtnItemSplitCheck = false;
		$scope.BtnPaymentWhen = true;
		$scope.BtnRecallWhen = false;
		$scope.QtyBeforeWhen = false;
		$scope.BtnOnHoldWhen = true;
		$scope.BtnRemoveItemWhen = true;
		$scope.BtnCancelSaleWhen = true;
		$scope.BtnDiscountItemWhen = true;
		$scope.BtnDiscountReceiptWhen = true;
		$scope.BtnReceiptDiscountWhen = true;
		$scope.BtnPriceChangeWhen = true;
		$scope.BtnReturnWhen = true;
		$scope.BtnQuantityWhen = true;
		$scope.BtnItemTaxWhen = true;
		$scope.BtnReceiptNoTaxWhen = true;
		$scope.BtnReceiptTaxWhen = true;
		$scope.BtnReceiptNoteWhen = true;
		$scope.BtnItemNoteWhen = true;
		$scope.BtnItemsWhen = false;
		$scope.DropdownWhen = false;
		$scope.BtnAddCustWhen = false;
		$scope.BtnEditWhen = false;
		$scope.TxtSearchWhen = false;
		$scope.BtnSearchWhen = false;
		$scope.KitchenNoteDisabled = true;
		$scope.BtnEBTCalulateWhen = true;
		$scope.BtnApplyPaymentWhen = false;
		$scope.BtnCheckPrintWhen = true;
		$scope.BtnReturnReceipt = false;
		$scope.BtnBeforeQtyWhen = false;
	};
	
	$scope.dialogReceiptNote ={
		created: function(args){
			dialogreceiptnote = args.instance;
		},
		resizable: false,
		width: "100%", height: 300,
		autoOpen: false,
		theme: 'darkblue'
	};


	/*Popup Keyboard*/
	var populateNumpadKeyboardReasonWithCreditCardCheck = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-keyboard").append('<div id="custom_item_keyboard" style="background: #144766; color:#EEE;"></div>');
			$("#custom_item_keyboard").html('');
			if($("#CustomerPurchasesEnabled").val() == 1){
				$("#custom_item_keyboard").append('<div style="width:50%; float:left;"><h4 style="text-align:right;">Reason</h4></div><div style="width:50%; float:left;" align="right"><img id="icon_credit_card" src="'+base_url+'assets/img/credit_card_icon3.png'+'" width="60" height="50" style="cursor:pointer;"></div>');
			}else{
				$("#custom_item_keyboard").append('<h4 align="center">Reason</h4>');
			}
			$("#custom_item_keyboard").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="search_field" style="color:#000;">'+
				'<div id="keyboard_reason_credit_card_check"></div>'+
			'</form>');
			def.resolve();
		},100);
		return def.promise();
	}
	
	var WindowPopupKeyboardReasonWithCreditCardCheck = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-keyboard").jqxWindow({
				height: 430,
				minWidth: '80%',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-keyboard').jqxWindow('setTitle', header_title);
			$('#dialog-numpad-keyboard').jqxWindow('open');
			setTimeout(function(){	
				$("#search_field").focus();
			},300);
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var NumpadKeyboardReasonWithCreditCardCheck = function(form_name){
		var def = $.Deferred();
		populateNumpadKeyboardReasonWithCreditCardCheck(form_name)
		.then(function(){
			$('#keyboard_reason_credit_card_check').jkeyboard({
				layout: "english",
				input: $('#search_field')
			});
			def.resolve();
		});
		return def.promise();
	}
	/*End Keyboard*/
		
	var ReceiptNoteId;
	$scope.ReceiptNote = function(){
		$("#ReceiptNotefunction").attr("disabled", true);
		$("#custom_item_keyboard").html('');
		var type = 7;
		NumpadKeyboardReasonWithCreditCardCheck('receipt_note_form')
		.then(function(){
			posData.CheckReceiptNote()
			.success(function(data){
				WindowPopupKeyboardReasonWithCreditCardCheck('Receipt Note | Receipt# '+data.ReceiptNo)
				.then(function(){
					setTimeout(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val(data.RNotes).length * 25;
						searchInput.focus();
						searchInput[0].setSelectionRange(strLength, strLength);
					},100);
				})
			})
		})
		setTimeout(function(){
			$("#ReceiptNotefunction").attr("disabled", false);
		},1000);
	};

	$(document).on("click", "#icon_credit_card", function(){
		$("#dialog-numpad-keyboard").block({message: 'Please wait...'}) 
		posData.CustomerCreditCardCheck()
		.success(function(data){
			if(data.CmdStatus == 'Approved'){
				var creditholdername = data.CardHolderName.trim();
				var splitName = creditholdername.split('/');
				var FirstName = splitName[1];
				var LastName = splitName[0];
				var postdata ="FirstName="+splitName[1];
					postdata+="&LastName="+splitName[0];
				posData.SwipeCreateCustomer(postdata)
				.success(function(data){
					$("#search_field").val(FirstName+' '+LastName);
					LoadHeaderInfo();
					GetSelectedCustomer();
				}).then(function(){
					var postData="receiptnotemsg=" + $("#search_field").val();
					posData.SaveRNoteMsg(postData)
					.success(function(data){
						if(data.success == true){
							$("#receiptlabel").text(data.LabelNote.trim());
						}
					})
				})
			}else{
				var msg = data.TextResponse;
				NumpadAlertOk('credit_card_invalid', msg)
				.then(function(){
					WindowPopupAlert('Information')
				});
			}
			$("#dialog-numpad-keyboard").unblock();
		})
	})

	var receiptlabel_oneclicked = function(){
		$("#receiptlabel").one("click",function(e){
			$("#custom_item_keyboard").html('');
			var type = 7;
			/*
			NumpadKeyboard('receipt_note_form')
			.then(function(){
				posData.CheckReceiptNote()
				.success(function(data){
					WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
					.then(function(){
						setTimeout(function(){
							var searchInput = $('#search_field');
							var strLength = searchInput.val(data.RNotes).length * 25;
							searchInput[0].setSelectionRange(strLength, strLength);
							searchInput.focus();
						},100);
						receiptlabel_oneclicked();
					})
				})
			})
			*/
			NumpadKeyboardReasonWithCreditCardCheck('receipt_note_form')
			.then(function(){
				posData.CheckReceiptNote()
				.success(function(data){
					WindowPopupKeyboardReasonWithCreditCardCheck('Receipt Note | Receipt# '+data.ReceiptNo)
					.then(function(){
						setTimeout(function(){
							var searchInput = $('#search_field');
							var strLength = searchInput.val(data.RNotes).length * 25;
							searchInput.focus();
							searchInput[0].setSelectionRange(strLength, strLength);
						},100);
						receiptlabel_oneclicked();
					})
				})
			})
		})
	}
	receiptlabel_oneclicked();
	
	$(document).on('submit', '#receipt_note_form', function(e){
		e.preventDefault();
		var p = new SwipeParserObj($("#search_field").val());
		if( p.hasTrack1 ){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			var creditholdername = p.account_name.replace('/', ' ');
			$("#search_field").val(creditholdername.trim());
			$("#search_field").val(creditholdername.trim());
			var splitName = p.account_name.split('/');
			var postdata ="FirstName="+splitName[1];
				postdata+="&LastName="+splitName[0];
			posData.SwipeCreateCustomer(postdata)
			.success(function(data){
				GetSelectedCustomer();
			})
		}
		
		var postData="receiptnotemsg=" + $("#search_field").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success == true){
				//$("#dialog-numpad-keyboard").jqxWindow('close');
				//$("#price_numpad").html('');
				//$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote.trim());
			}
		})
	})

	$(document).on('click', '#receipt_note_form .return', function(e){
		e.preventDefault();
		var postData="receiptnotemsg=" + $("#search_field").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success == true){
				$("#dialog-numpad-keyboard").jqxWindow('close');
				$("#price_numpad").html('');
				$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote.trim());
			}
		})
	})

	$(document).on('click', '#receipt_note_form .clear', function(e){
		e.preventDefault();
		$("#search_field").val('');
		$("#search_field").focus();
	})

	var CheckNotes = function(detailsUnique, type){
		var def = $.Deferred();
		var postdata="receipt_details_unique="+detailsUnique;
			postdata+="&type="+type;
		posData.CheckNote(postdata)
		.success(function(data){
			$("#search_field").val(data.Notes);
			def.resolve();
		})
		return def.promise();	
	}
	
	$scope.ItemNote = function(){
		$("#ItemNotefunction").attr("disabled", true);
		var type = 9;
		var RDUnique = GlobalItemUnique.Unique;
		if(RDUnique){
			var postdata="ReceiptDetailsUnique="+RDUnique;
			posData.GetInfoByReceiptDetails(postdata)
			.success(function(data){
				NumpadKeyboard('item_note_form')
				.then(function(){
					CheckNotes(RDUnique, type)
					.then(function(){
						WindowPopupKeyboard('Item Note | ID '+data.ItemUnique+' | '+data.Description)
						.then(function(){
							setTimeout(function(){
								var searchInput = $('#search_field');
								var strLength = searchInput.val().length * 2;
								searchInput.focus();
								searchInput[0].setSelectionRange(strLength, strLength);
							},100);
						})
					})
				})
				$scope.CustomReceiptDetailsUnique = RDUnique;
			})
		}else{
			var msg = "Please select Item first.";
			NumpadAlertOk('item_note_alert', msg)
			.then(function(){
				WindowPopupAlert('Item Note Alert')
			});
		}
		setTimeout(function(){
			$("#ItemNotefunction").attr("disabled", false);
		},1000);
	};
	
	$(document).on("submit", "#item_note_form", function(e){
		e.preventDefault();
		var postdata="ItemRDetailsUnique="+$scope.CustomReceiptDetailsUnique;
			postdata+="&ItemNote="+encodeURIComponent($.trim($('#search_field').val()).toString());
			postdata+="&type="+9;
		posData.ItemNoteSave(postdata)
		.success(function(data){
			if(data.success){
				load_data(data);
				$("#custom_item_keyboard").html('');
				$("#dialog-numpad-keyboard").jqxWindow('close');
			}
		})
	})
	
	//--> Edit Item note
	$scope.EditItemNote = function(){
		var SelectedItem = GlobalItemUnique.Unique;
		var postDataitemNote="Unique="+SelectedItem;
		postDataitemNote+="&ItemNotes="+this.itemnotemsg;
		posData.EditItemNotes(postDataitemNote)
		.success(function(data){
			if(data.success == true){
				dialogitemnote.close();
			}
		})
	};

	//-->Delete Item Note
	$scope.DeleteItemNote = function(){
		var SelectedItem = GlobalItemUnique.Unique;
		var postDataitemNote="Unique="+SelectedItem;
		posData.DeleteItemNotes(postDataitemNote)
		.success(function(data){
			if(data.success == true){
				$scope.itemnotemsg = '';
				dialogitemnote.close();
			}
		})
	};

	$scope.CancelItemNote = function(){
		dialogitemnote.close();
		$scope.itemnotemsg = '';
		GlobalItemUnique.Unique = '';
	};

	var popuplateReasonMultipleItemList = function(form_name){
		var def = $.Deferred();
		posData.ReasonRemoveMultipleItemList()
		.success(function(data){
			$("#dialog-reason-list").append('<div id="reason-list-container" style="background: #144766; color:#EEE;"></div>');
				$("#reason-list-container").html('');
				$("#reason-list-container").append(data.html);
				$("#reason-list-container").append(
					'<form id="'+form_name+'">'+
						'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
						'<div id="keyboard"></div>'+
					'</form>'
				);
			def.resolve();
		})
		return def.promise();
	}
	var ViewReasonMultipleItemList = function(form_name){
		var def = $.Deferred();
		popuplateReasonMultipleItemList(form_name)
		.then(function(){
			$('#keyboard').hdkeyboard({
				layout: "item_reason",
				input: $('#quantity_field')
			});
			def.resolve();
		});
		return def.promise();
	}


	var populateReasonList = function(form_name, item){
		var def = $.Deferred();
		if(item == 1){
			var postdata ="ReceiptDetailsUnique="+GlobalItemUnique.Unique;
			posData.LoadReasonList(postdata)
			.success(function(data){
				$("#dialog-reason-list").append('<div id="reason-list-container" style="background: #144766; color:#EEE;"></div>');
				$("#reason-list-container").html('');
				$("#reason-list-container").append(data.html);
				$("#reason-list-container").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
					'<div id="keyboard"></div>'+
				'</form>'+
				'');
				ReasonID = data.checkedItem;
				def.resolve();
			})
		}else{
			posData.LoadReasonListCancelSale()
			.success(function(data){
				$("#dialog-reason-list").append('<div id="reason-list-container" style="background: #144766; color:#EEE;"></div>');
				$("#reason-list-container").html('');
				$("#reason-list-container").append(data.html);
				$("#reason-list-container").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
					'<div id="keyboard"></div>'+
				'</form>'+
				'');
				def.resolve();
			})
		}
		return def.promise();
	}

	var WindowPopupReason = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#dialog-reason-list").jqxWindow({
				height: 390,
				minWidth: 300,
				title: "Reason",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#dialog-reason-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	var ViewReasonList = function(form_name, item){
		var def = $.Deferred();
		populateReasonList(form_name, item)
		.then(function(){
			$('#keyboard').hdkeyboard({
				layout: "item_reason",
				input: $('#quantity_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	var ReasonID = '';
	$(document).on('click', '.radio1', function(){
		var id = $('input[type=radio][name=group1]:checked').attr('id');
		ReasonID = id;
	});

	$(document).on('click', '#reason_accept .button_q_cancel', function(e){
		e.preventDefault();
		$('#dialog-reason-list').jqxWindow('close');
	});

	$(document).on('click', '#reason_accept .button_proceed', function(e){
		e.preventDefault();
		if(ReasonID !== ''){
			var SelectedItem = GlobalItemUnique.Unique;
			var postdata ="ReturnUnique="+ReasonID;
				postdata+="&ReceiptDetailsUnique="+SelectedItem; 
			posData.ReasonUpdate(postdata)
			.success(function(data){
				ReturnProcess(SelectedItem);
			})
		}else{
			var msg = "Please select the reason first";
			NumpadAlertOk('gift_card_cannot_return', msg)
			.then(function(){
				WindowPopupAlert('Return Item');
			})
		}
		$('#dialog-reason-list').jqxWindow('close');
	});

	var CheckReason = function(){
		var def = $.Deferred();
		posData.CheckReturnReason()
		.success(function(data){
			def.resolve(data.setting);
		})
		return def.promise();
	}

	var ReturnProcess = function(SelectedItem){
		var postData = "Unique="+SelectedItem;
			postData+= "&ReasonID="+ReasonID;
		posData.ReturnItem(postData)
		.success(function(data){
			if(data.success == true){
				if(data.RewardDiscount){
					var msg = "Discount Item is not refundable <br/>";
						msg+= "Please Remove Item instead.";
					NumpadAlertOk('reward_discount_cannot_return', msg)
					.then(function(){
						WindowPopupAlert('Return Item');
					})
				}
				load_data(data);
				PoleDisplay(SelectedItem); 
				//LoadOrderedItemList();
				//LoadTotals()
				//.then(function(){
				//	POSTotal()
				//	.then(function(){
						CheckBalance();
				//	})
				//})
				//LoadTax();
				//ReceiptTaxChecker();
				//LoadEBT();
				//LoadDiscount();
				//LoadPayments();
				//LoadChange();
				//ShowPoints();
				GlobalItemUnique = {};
			}else{
				if(data.Type == 'Datacap'){
					var postdata ="ReceiptDetailsUnique="+SelectedItem;
					posData.CheckCompleted(postdata)
					.success(function(data2){
						if(data2.completed == 1){
							var SelectedItem = GlobalItemUnique.Unique;
							var postDataRemoveItem="Unique="+SelectedItem;
							posData.RemoveItem(postDataRemoveItem)
							.success(function(data3){
								if(data3.giftcard){
									GiftCardRemoveQ.push(data3.remove, data3.RemoveItemCheck);
									if(data3.TranCode == 'Issue'){ //When Issue then Void Issue
										var msg = 'Void Issue Gift Card '+data.GiftCardNumber+'<br/>'; 
											msg+= 'Amount '+data3.GiftCardAmount+'<br/>';
											msg+= '</br>Are you sure?';
										NumpadAlertYesNo('void_issue_gift_card', msg, SelectedItem)
										.then(function(){
											WindowPopupAlertYesNo('Void Issue Gift Card')
											.then(function(){
												$("#use_value").val(SelectedItem);
											});
										})
									}else if(data3.TranCode == 'Reload'){ //When Reload then Void Reload
										var msg = 'Void Reload Gift Card '+data3.GiftCardNumber+'<br/>'; 
											msg+= 'Amount '+data3.GiftCardAmount+'<br/>';
											msg+= '</br>Are you sure?';
										NumpadAlertYesNo('void_reload_gift_card', msg, SelectedItem)
										.then(function(){
											WindowPopupAlertYesNo('Void Reload Gift Card')
											.then(function(){
												$("#use_value").val(SelectedItem);
											});
										})
									}else if(data3.TranCode == 'Return'){ //When Return then Void Return
										var msg = 'Void Return Gift Card '+data3.GiftCardNumber+'<br/>'; 
											msg+= 'Amount '+data3.GiftCardAmount+'<br/>';
											msg+= '</br>Are you sure?';
										NumpadAlertYesNo('void_return_gift_card', msg, SelectedItem)
										.then(function(){
											WindowPopupAlertYesNo('Void Return Gift Card')
											.then(function(){
												$("#use_value").val(SelectedItem);
											});
										})
									}
								}
							})
						}else{
							var msg = 'Refund Gift Card '+data.GiftCardNumber+'<br/>'; 
								msg+= 'Amount '+data.GiftCardAmount+'<br/>';
								msg+= '</br>Are you sure?';
							NumpadAlertYesNo('refund_item_gift_card_option', msg, SelectedItem)
							.then(function(){
								WindowPopupAlertYesNo('Refund Gift Card')
								.then(function(){
									$("#use_value").val(SelectedItem);
								});
							})
						}
					})
					
				}else{
					var msg = "To return gift card, please use gift card function and put negative amount.";
					NumpadAlertOk('gift_card_cannot_return', msg)
					.then(function(){
						WindowPopupAlert('Return Item');
					})
				}
			}
			$("#dialog-numpad-passcode").jqxWindow('close');
		}).then(function(){
			$("#barcode_search").focus();
		})
	}

	$(document).on("submit", "#refund_item_gift_card_option", function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow("close");
		GiftCardBalOption("giftcard_return_option_select")
		.then(function(){
			WindowPopupGiftCardBalOption('Gift Card Option')
		})
	})

	$(document).on("submit","#giftcard_return_option_select", function(e){
		e.preventDefault();
		$("#gc_balance_option").jqxWindow("close");
		if(GCBalOptionID == 'Swipe'){
			NumpadGiftCard("gc_return_item_manual")
			.then(function(){
				WindowPopupGiftCard("Gift Card Balance")
				.then(function(){
					$("#card_field").focus();
				})
			})
		}else{
			//$("body").block({message: 'Refund Gift Card please wait...'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Refund Gift Card please wait...' });

			var SelectedItem = $("#use_value").val();
			var postdata = "Unique="+$("#use_value").val();
				postdata+= "&AcctNo="+GCBalOptionID;
				postdata+= "&ReturnUnique="+ReasonID;
			posData.GiftCardReturn(postdata)
			.success(function(data){
				setTimeout($.unblockUI, 100); 
				//$("body").unblock();
				if(data.CmdStatus == 'Approved'){
					var msg = data.Status+"<br/>";
						msg+= data.msg + "<br/>";
						msg+= data.Balance;
					NumpadAlertOk('gift_card_return', msg)
					.then(function(){
						WindowPopupAlert('Return Gift Card');
					})
					posData.ReturnGiftCardApproved(postdata)
					.success(function(gcdata){
						if(gcdata.success == true){
							PoleDisplay(SelectedItem);
							LoadOrderedItemList();
							LoadTotals()
							.then(function(){
								POSTotal()
								.then(function(){
									CheckBalance();
								})
							})
							LoadTax();
							ReceiptTaxChecker();
							LoadEBT();
							LoadDiscount();
							LoadPayments();
							LoadChange();
							GlobalItemUnique = {};
						}
					})
				}else if(data.CmdStatus == 'Declined'){
					var msg = data.Status+"<br/>";
						msg+= data.msg;
					NumpadAlertOk('gift_card_return', msg)
					.then(function(){
						WindowPopupAlert('Return Gift Card');
					})
				}else if(data.CmdStatus == 'Error'){
					var msg = data.Status+"<br/>";
						msg+= data.msg;
					NumpadAlertOk('gift_card_return', msg)
					.then(function(){
						WindowPopupAlert('Return Gift Card');
					})
				}
			})
		}	
	})

	$(document).on("submit", "#gc_return_item_manual", function(e){
		e.preventDefault();
		//$("body").block({message: 'Refund Gift Card please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Refund Gift Card please wait...' });
		var SelectedItem = GlobalItemUnique.Unique;
		var postdata ="ReceiptDetailsUnique="+SelectedItem;
			postdata+="&AcctNo="+$("#card_field").val();
			postdata+="&ReturnUnique="+ReasonID;
		posData.GiftCardReturn(postdata)
		.success(function(data){
			//$("body").unblock();
			setTimeout($.unblockUI, 100); 
			if(data.CmdStatus == 'Approved'){
				var msg = data.Status+"<br/>";
					msg+= data.msg + "<br/>";
					msg+= data.Balance;
				NumpadAlertOk('gift_card_return', msg)
				.then(function(){
					WindowPopupAlert('Return Gift Card');
				})
				posData.ReturnGiftCardApproved(postdata)
				.success(function(gcdata){
					if(gcdata.success == true){
						PoleDisplay(SelectedItem);
						LoadOrderedItemList();
						LoadTotals()
						.then(function(){
							POSTotal()
							.then(function(){
								CheckBalance();
							})
						})
						LoadTax();
						ReceiptTaxChecker();
						LoadEBT();
						LoadDiscount();
						LoadPayments();
						LoadChange();
						GlobalItemUnique = {};
					}
				})
			}else if(data.CmdStatus == 'Declined'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertOk('gift_card_return', msg)
				.then(function(){
					WindowPopupAlert('Return Gift Card');
				})
			}else if(data.CmdStatus == 'Error'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertOk('gift_card_return', msg)
				.then(function(){
					WindowPopupAlert('Return Gift Card');
				})
			}
		})
		$("#dialog-numpad-gift-card").jqxWindow("close");
	})

	$(document).on("submit", "#refund_item_gift_card", function(e){
		e.preventDefault();
		//$("body").block({message: 'Refund Gift Card please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Refund Gift Card please wait...' });
		var SelectedItem = $("#use_value").val();
		var postdata = "Unique="+$("#use_value").val();
		posData.GiftCardReturn(postdata)
		.success(function(data){
			setTimeout($.unblockUI, 100); 
			//$("body").unblock();
			if(data.CmdStatus == 'Approved'){
				var msg = data.Status+"<br/>";
					msg+= data.msg + "<br/>";
					msg+= data.Balance;
				NumpadAlertOk('gift_card_return', msg)
				.then(function(){
					WindowPopupAlert('Return Gift Card');
				})
				posData.ReturnGiftCardApproved(postdata)
				.success(function(gcdata){
					if(gcdata.success == true){
						PoleDisplay(SelectedItem);
						LoadOrderedItemList();
						LoadTotals()
						.then(function(){
							POSTotal()
							.then(function(){
								CheckBalance();
							})
						})
						LoadTax();
						ReceiptTaxChecker();
						LoadEBT();
						LoadDiscount();
						LoadPayments();
						LoadChange();
						GlobalItemUnique = {};
					}
				})
			}else if(data.CmdStatus == 'Declined'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertOk('gift_card_return', msg)
				.then(function(){
					WindowPopupAlert('Return Gift Card');
				})
			}else if(data.CmdStatus == 'Error'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertOk('gift_card_return', msg)
				.then(function(){
					WindowPopupAlert('Return Gift Card');
				})
			}
		})
		$("#dialog-numpad-alert").jqxWindow("close");
	})

	$scope.Return = function(){
		$("#Returnfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		if(SelectedItem){
			var postdata ="FunctionButton=Refund";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'Refund';
					NumpadPasscode('refund_item_passcode')
					.then(function(){
						WindowPopupPasscode('Return Item Passcode')
						.then(function(){
							$("#number_field").focus();
						})
					})
				}else{
					var ReturnItemQty = $(".alignQuantity > strong").text();
					if(ReturnItemQty > 0){
						CheckReason()
						.then(function(result){
							if(result == true){
								ViewReasonList('reason_accept', 1)
								.then(function(){
									WindowPopupReason();
								})	
							}else{
								ReturnProcess(SelectedItem);
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						ReturnProcess(SelectedItem);
					}

				}
			})
		}else{
			var msg = "Please select item first";
			NumpadAlertOk('select_item_first', msg)
			.then(function(){
				WindowPopupAlert('Return Item');
			})
		}
		setTimeout(function(){
			$("#Returnfunction").attr("disabled", false);
		},1000);
	};

	$(document).on("submit", "#refund_item_passcode", function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var CardRead = $("#number_field").val();
        var CRP = new CardReaderParser(CardRead);
        if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var ReturnItemQty = $(".alignQuantity > strong").text();
						if(ReturnItemQty > 0){
							CheckReason().then(function(result){
								if(result == true){
									ViewReasonList('reason_accept', 1)
									.then(function(){
										WindowPopupReason();
									})	
								}else{
									ReturnProcess(SelectedItem);
								}
								$("#dialog-numpad-passcode").jqxWindow('close');
							})
						}else{
							ReturnProcess(SelectedItem);
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}					
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})	
	
	//-->Inventory List
	$("#inventory-search").jqxGrid({
		width: "100%",
		columnsresize: true,
		theme: GridTheme,
		sortable: true,
		pageable: true,
		pageSize: 12,
		scrollbarsize: GridScrollBarSize,
		pagerMode: 'advance',
		altRows: true,
		showfilterrow: ShowFilterRow,
		filterable: true,
		rowsheight: GridRowHeight,
		source:  {
			dataType: "json",
			dataFields: InventorySearchTypes,
			localdata: {}
		},
		columns: [
			{ text: 'Unique', datafield: 'Unique', hidden: true }
		]
	})
		
	var PlaySound = function(){
		var sound = document.getElementById("audio");
		sound.play();
		setTimeout(function(){
			sound.pause();
			sound.currentTime = 0;
		},400);
	}

	$scope.EnterItemSearch_on_dev = function(){
		if($scope.ItemSearch == null){
			PlaySound();
		}else{
			var result;			
			var ItemSearch = $scope.ItemSearch;
			var postData ="SearchItem="+ItemSearch;
				postData+="&SearchOption="+ $("#ItemSearchOption").val();
				postData+="&BarcodeScan="+InventoryScan;
			var InventoryData = $("#POSItemInventoryData").val();
			posData.SearchInventoryItemArray(postData)
			.success(function(data){
				InventoryScan = false;
			})
			$("#barcode_search").val('');
		}
	}

	$('body').append(
		'<script type="text/javascript" id="barcode_keypress">'+
			'InventoryScan = false;'+
			'function KeyPress(e) {'+
				'var evtobj = window.event? event : e;'+
				'if (evtobj.keyCode == 66 && evtobj.ctrlKey) {'+
					'$("#barcode_search").focus();'+
					'InventoryScan = true'+
				'}'+
			'}'+
			'document.onkeydown = KeyPress;'+
		'</script>'
	);

	$scope.EnterItemSearch = function(){
		if($("#barcode_search").val() == null){
			PlaySound();
		}else{

			if( $("#ItemSearchOption").val() == 'Scan Promo'){
				var postdata ="SearchItem="+ $("#barcode_search").val();
					postdata+="&BarcodeScan="+InventoryScan;
				posData.ScanPromoBarcode(postdata)
				.success(function(data){
					if(data.success == true){
						ScanPromoDiscount(data);
						InventoryScan = false;
					}else{
						PlaySound();
						var msg = 'Item cannot be found';
						NumpadAlertClose('set_discount_from_list', msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
							.then(function(){
								$(".alert_close").focus();
							})
						})
					}
				})
				$("#barcode_search").val('');
				return false;
			}


			var ItemSearch = $("#barcode_search").val();
			var postData ="SearchItem="+ItemSearch;
				postData+="&SearchOption="+ $("#ItemSearchOption").val();
				postData+="&BarcodeScan="+InventoryScan;
				$("#barcode_search").val('');
			posData.SearchInventoryItem(postData)
			.success(function(data){
				if(data.Count > 1){
					WindowPopupItemInventory().then(function(){
						$('#inventory-search').jqxGrid('showloadelement');
						$("#search_inventory_keypress").append(
							'<div id="inventory_keypress_script" onkeydown="KeyPress(event)"></div>'+
							'<script type="text/javascript" id="inventory_keypress_script">'+
								'function KeyPress(e) {'+
									'var evtobj = window.event? event : e;'+
									'if (evtobj.keyCode == 66 && evtobj.ctrlKey) {'+
										'$("#pos_inventory_search_text").focus();'+
										'InventorySearch = true'+
									'}'+
								'}'+
								'document.onkeydown = KeyPress;'+
							'</script>'
						);
						setTimeout(function(){
							$(".focusme").focus();
							$(".focusme").val($("#barcode_search").val());
							var ResoWidth 	= $("#search-inventory-item-dialog").width();
							var ResoHeight 	= $("#search-inventory-item-dialog").height();
							var SearchBtn 	= $("#inventory-search-button-container").height();
							var ComputeHeight		= ResoHeight - 70;
							var UseHeight			= ComputeHeight - SearchBtn;
							var ComputeDisplayRow 	= Math.ceil(ComputeHeight / 30);
							var source = {
								dataType: "json",
								dataFields: InventorySearchTypes[0],
								localdata: data.InventoryData
							}
							var dataAdapter = new $.jqx.dataAdapter(source);

							$("#inventory-search").jqxGrid({
								height: UseHeight,
								pageSize: ComputeDisplayRow,
								source: dataAdapter,
							})
							var POSInventoryItemSearch = $("#barcode_search").val();
							$("#pos_inventory_search_text").val(POSInventoryItemSearch);
							$("#pos_inventory_search_text").focus();
							$("#pos_inventory_search_text").select();
						}, 500);
					})
				}else if(data.Count == 1){
					var rows = data.InventoryData;
					var Description = '';
					var POSItemCustom1 = $("#POSItemCustom1").val();
					if(rows.Custom1){
						if(POSItemCustom1 == 1){
							Description = rows.Description+' '+rows.Custom1;
						}else{
							Description = rows.Description;
						}
					}else{
						Description = rows.Description;
					}
					var postDataAddItem="ItemId="+rows.Unique;
					if($scope.WarningStock == 1){
						var POSLocation = $("#POSLocation").val();
						var ItemQtyStock = 0;
						if(POSLocation == 1){
							ItemQtyStock == rows.Quantity1;
						}else if(POSLocation == 2){
							ItemQtyStock == rows.Quantity2;
						}else if(POSLocation == 3){
							ItemQtyStock == rows.Quantity3;
						}else if(POSLocation == 4){
							ItemQtyStock == rows.Quantity4;
						}else if(POSLocation == 5){
							ItemQtyStock == rows.Quantity5;
						}
						//Check Quantity if Item has stock
						ModifierArray = [];
						ModifierArray.push({"Unique" : rows.Unique, "Description" : rows.Description, "Price" : rows.SellPrice, "Quantity" : 1, "Points" : rows.Points, "Cost" : rows.Cost,  "Cost_Extra" : rows.Cost_Extra, "Cost_Freight" : rows.Cost_Freight, "Cost_Duty" : rows.Cost_Duty, "Custom1" : rows.Custom1, "Item" : rows.Item, "EBT" : rows.EBT, "Price1" : rows.price1, "ListPrice" : rows.ListPrice, "DescriptionKitchen" : rows.DescriptionKitchen});
						WarningStockArray.push(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard, rows.DescriptionKitchen);
						posData.CheckQuantity(postDataAddItem)
						.success(function(CheckQty){
							if(CheckQty.Qty > 0){
								if(rows.MinimumAge > 0){
									NumpadAgeVerify(rows.MinimumAge)
									.then(function(){
										AgeVerifyTempArr.push(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard, rows.DescriptionKitchen);
										WindowPopupAgeNotification()
										.then(function(){
											$("#age_field").focus();
										})
									})
									$scope.ItemSearch = '';
								}else{
									if(rows.GiftCard == 1){
										//-->Populate Window Popup (Internal)
										GiftCardPoints = rows.Points;
										GiftCardForm('sell_gift_card', rows.Unique, rows.SellPrice)
										.then(function(){
											WindowPopupGiftCardForm('Gift Card')
											.then(function(){
												$("#gift_card_number").focus();
											})
										})
										//$("#barcode_search").val('');
									}else if(rows.GiftCard == 2){
										//-->Populate Window Popup (External)
										GiftCardPoints = rows.Points;
										GiftCardForm2('sell_gift_card_datacap', rows.Unique, rows.SellPrice)
										.then(function(){
											WindowPopupGiftCardForm2('Gift Card')
											.then(function(){
												$("#gift_card_number2").focus();
											})
										})
										//$("#barcode_search").val('');
									}else{

										Qquestion = rows.Question;
										PriceQty.push(rows.PriceQtyArr);
										PriceQtyItemArray.push(rows.PriceQtyArr);
										ProcessAddItemMenu(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard, rows.DescriptionKitchen);
										ModifierArray.push({
											"Unique" : rows.Unique, 
											"Description" : Description, 
											"Price" : rows.SellPrice, 
											"Quantity" : 1, 
											"Points" : rows.Points, 
											"Cost" : rows.Cost,  
											"Cost_Extra" : rows.Cost_Extra, 
											"Cost_Freight" : rows.Cost_Freight, 
											"Cost_Duty" : rows.Cost_Duty, 
											"Custom1" : rows.Custom1, 
											"Item" : rows.Item, 
											"EBT" : rows.EBT, 
											"Price1" : rows.price1, 
											"ListPrice" : rows.ListPrice,
											"DescriptionKitchen" : rows.DescriptionKitchen
										});
										OpenItemArray.push({
											"Unique" : rows.Unique, 
											"Description" : Description, 
											"Price" : rows.SellPrice, 
											"Quantity" : 1, 
											"Points" : rows.Points, 
											"Cost" : rows.Cost,  
											"Cost_Extra" : rows.Cost_Extra, 
											"Cost_Freight" : rows.Cost_Freight, 
											"Cost_Duty" : rows.Cost_Duty, 
											"Custom1" : rows.Custom1, 
											"Item" : rows.Item, 
											"EBT" : rows.EBT, 
											"Price1" : rows.price1, 
											"ListPrice" : rows.ListPrice,
											"DescriptionKitchen" : rows.DescriptionKitchen
										});
									}
								}
							}else{
								PlaySound();
								$("#barcode_search").attr("disabled", true);
								var msg = (rows.Description != '' ? rows.Description : rows.Item)+"<br/>";
									msg+= "Quantity "+parseFloat(ItemQtyStock)+"<br/>";
									msg+= "Do you still want to Sell?";
								NumpadAlertYesNo('add_item_without_stock_menu', msg)
								.then(function(){
									$("#use_value").val(rows.Unique);
									$("#use_value2").val(rows.Question);
									WindowPopupAlertYesNo('Add New Item')
								})
							}
						});
					}else{
						if(rows.MinimumAge > 0){
							NumpadAgeVerify(rows.MinimumAge)
							.then(function(){
								AgeVerifyTempArr.push(rows.Unique, rows.PromptDescription, rows.PromptPrice,  rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard, rows.DescriptionKitchen);
								WindowPopupAgeNotification()
								.then(function(){
									$("#age_field").focus();
								})
							})
						}else{
							if(rows.GiftCard == 1){
								//-->Populate Window Popup (Internal)
								GiftCardPoints = rows.Points;
								GiftCardForm('sell_gift_card', rows.Unique, rows.SellPrice)
								.then(function(){
									WindowPopupGiftCardForm('Gift Card')
									.then(function(){
										$("#gift_card_number").focus();
									})
								})
							}else if(rows.GiftCard == 2){
								//-->Populate Window Popup (External)
								GiftCardPoints = rows.Points;
								GiftCardForm2('sell_gift_card_datacap', rows.Unique, rows.SellPrice)
								.then(function(){
									WindowPopupGiftCardForm2('Gift Card')
									.then(function(){
										$("#gift_card_number2").focus();
									})
								})
							}else{
								Qquestion = rows.Question;
								PriceQty.push(rows.PriceQtyArr);
								PriceQtyItemArray.push(rows.PriceQtyArr);
								ProcessAddItemMenu(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard, rows.DescriptionKitchen);
								ModifierArray.push({
									"Unique" : rows.Unique, 
									"Description" : Description, 
									"Price" : rows.SellPrice, 
									"Quantity" : 1, 
									"Points" : rows.Points, 
									"Cost" : rows.Cost,  
									"Cost_Extra" : rows.Cost_Extra, 
									"Cost_Freight" : rows.Cost_Freight, 
									"Cost_Duty" : rows.Cost_Duty, 
									"Custom1" : rows.Custom1, 
									"Item" : rows.Item, 
									"EBT" : rows.EBT, 
									"Price1" : rows.price1, 
									"ListPrice" : rows.ListPrice,
									"DescriptionKitchen" : rows.DescriptionKitchen
								});
								OpenItemArray.push({
									"Unique" : rows.Unique, 
									"Description" : Description, 
									"Price" : rows.SellPrice, 
									"Quantity" : 1, 
									"Points" : rows.Points, 
									"Cost" : rows.Cost,  
									"Cost_Extra" : rows.Cost_Extra, 
									"Cost_Freight" : rows.Cost_Freight, 
									"Cost_Duty" : rows.Cost_Duty, 
									"Custom1" : rows.Custom1, 
									"Item" : rows.Item, 
									"EBT" : rows.EBT, 
									"Price1" : rows.price1, 
									"ListPrice" : rows.ListPrice,
									"DescriptionKitchen" : rows.DescriptionKitchen
								});
							}
						}
					}
				}else{
					var msg ='<h3 style="margin:0; padding:0;">Item not found</h3><br/>';
						msg+='<h3 style="color: #2ECC71;">'+$("#barcode_search").val()+'</h3><br/>';
						//msg+='<h4>Would you like to add it now?</h4>';
					NumpadPOSAlertNotication('item_search_add_yes', msg)
					.then(function(){
						WindowPopupPOSAlertNotifcation('Search Item Result')	
						.then(function(){
							var ResoWidth 	        = $("#right_panel_width").width();
							var ResoHeight 	        = $("#right_panel_width").height();
							var UseWidth 			= ResoWidth - 260;
							var UseHeight 			= ResoHeight + 260;
							var OrderListWidth 		= ($(".orderedlist").width() + 3);
							$("#pos_alert_notification").jqxWindow({
								height: UseHeight,
								width: UseWidth,
								position: { x: OrderListWidth, y: 50 }
							})
							$('#pos_alert_notification').jqxWindow('focus');
						})
					})
					PlaySound();
				}//-->End if
				InventoryScan = false;
			})
		}//-->End if Item Search is empty.
	};
		
		var WindowPopupItemInventory = function(){
			var def = $.Deferred();
				setTimeout(function(){
					$("#search-inventory-item-dialog").jqxWindow({
							height: '100%',
							width: '100%',
							title: '<button id="pos_inventory_close" class="glyphicon glyphicon-remove" style="float:left; background-color: #449bca; width: auto;" title="Close"></button>&nbsp;Inventory',
							isModal: true,
							theme: 'darkblue',
							showCloseButton: false,
							resizable: false,
							draggable: false,
							showAnimationDuration: 0,
							closeAnimationDuration: 0
					});
					$('#search-inventory-item-dialog').jqxWindow('open');
					def.resolve();	
				},100);
			return def.promise();
		}

		/* All Inventory */
		$scope.SearchItemButton = function(){
			$("#SearchItemButton").attr("disabled", true);
			//if($scope.ItemSearch == '' || $scope.ItemSearch == null){
			if( $("#barcode_search").val() == ''){
				WindowPopupItemInventory().then(function(){
					InventoryWindowStatus = 1;
					InventoryScan = false;
					// $('#search_inventory_keypress').html(
					// 	'<div id="inventory_keypress_script" onkeydown="KeyPress(event)"></div>'+
					// 	'<script type="text/javascript" id="inventory_keypress_script">'+
					// 		'InventoryScan = false'+
					// 		'function KeyPress(e) {'+
					// 			'var evtobj = window.event? event : e;'+
					// 			'if (evtobj.keyCode == 66 && evtobj.ctrlKey) {'+
					// 				'$("#pos_inventory_search_text").focus();'+
					// 				'InventoryScan = true'+
					// 				'console.log("Aloha Test")'+
					// 			'}'+
					// 		'}'+
					// 		'document.onkeydown = KeyPress;'+
					// 	'</script>'
					// );
					setTimeout(function(){
						$("#pos_inventory_search_text").focus();
						$scope.ItemSearch = '';

						var ResoWidth 	= $("#search-inventory-item-dialog").width();
						var ResoHeight 	= $("#search-inventory-item-dialog").height();
						var SearchBtn 	= $("#inventory-search-button-container").height();
						var ComputeHeight		= ResoHeight - 70;
						var UseHeight			= ComputeHeight - SearchBtn;
						var ComputeDisplayRow 	= Math.ceil(ComputeHeight / 30);
		
						var source = {
							dataType: "json",
							localdata: []
						}
						var dataAdapter = new $.jqx.dataAdapter(source);
						$("#inventory-search").jqxGrid({
							height: UseHeight,
							pageSize: ComputeDisplayRow,
						})
					}, 100);
					$scope.ItemSearch = '';
				})
			}else{
				var ItemSearch = $scope.ItemSearch;
				var postData ="SearchItem="+ItemSearch;
					postData+="&SearchOption="+ $("#ItemSearchOption").val();
					postData+="&BarcodeScan="+InventoryScan;
				posData.SearchInventoryItem(postData)
				.success(function(data){
					if(data.Count > 1){
						WindowPopupItemInventory().then(function(){
							$('#inventory-search').jqxGrid('showloadelement');
							$("#search_inventory_keypress").append(
								'<div id="inventory_keypress_script" onkeydown="KeyPress(event)"></div>'+
								'<script type="text/javascript" id="inventory_keypress_script">'+
									'function KeyPress(e) {'+
										'var evtobj = window.event? event : e;'+
										'if (evtobj.keyCode == 66 && evtobj.ctrlKey) {'+
											'$("#pos_inventory_search_text").focus();'+
											'InventorySearch = true'+
										'}'+
									'}'+
									'document.onkeydown = KeyPress;'+
								'</script>'
							);
							setTimeout(function(){
								$(".focusme").focus();
								$(".focusme").val($scope.ItemSearch);
								$scope.ItemSearch = '';

								var ResoWidth 	= $("#search-inventory-item-dialog").width();
								var ResoHeight 	= $("#search-inventory-item-dialog").height();
								var SearchBtn 	= $("#inventory-search-button-container").height();
								var ComputeHeight		= ResoHeight - 70;
								var UseHeight			= ComputeHeight - SearchBtn;
								var ComputeDisplayRow 	= Math.ceil(ComputeHeight / 30);
								var source = {
									dataType: "json",
									dataFields: InventorySearchTypes[0],
									localdata: data.InventoryData
								}
								var dataAdapter = new $.jqx.dataAdapter(source);

								$("#inventory-search").jqxGrid({
									height: UseHeight,
									pageSize: ComputeDisplayRow,
									source: dataAdapter,
								})
								var POSInventoryItemSearch = $("#barcode_search").val();
								$("#pos_inventory_search_text").val(POSInventoryItemSearch);
								$("#pos_inventory_search_text").focus();
								$("#pos_inventory_search_text").select();
							}, 500);
						})
					}else if(data.Count == 1){
						var rows = data.InventoryData;
						var Description = '';
						var POSItemCustom1 = $("#POSItemCustom1").val();
						if(rows.Custom1){
							if(POSItemCustom1 == 1){
								Description = rows.Description+' '+rows.Custom1;
							}else{
								Description = rows.Description;
							}
						}else{
							Description = rows.Description;
						}
						var postDataAddItem="ItemId="+rows.Unique;
						if($scope.WarningStock == 1){
							//Check Quantity if Item has stock
							var POSLocation = $("#POSLocation").val();
							var ItemQtyStock = 0;
							if(POSLocation == 1){
								ItemQtyStock == rows.Quantity1;
							}else if(POSLocation == 2){
								ItemQtyStock == rows.Quantity2;
							}else if(POSLocation == 3){
								ItemQtyStock == rows.Quantity3;
							}else if(POSLocation == 4){
								ItemQtyStock == rows.Quantity4;
							}else if(POSLocation == 5){
								ItemQtyStock == rows.Quantity5;
							}
							WarningStockArray.push(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
							if(rows.MinimumAge > 0){
								NumpadAgeVerify(rows.MinimumAge)
								.then(function(){
									AgeVerifyTempArr.push(rows.Unique, rows.PromptDescription, rows.PromptPrice,  rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
									WindowPopupAgeNotification()
									.then(function(){
										$("#age_field").focus();
									})
								})
							}else{

								posData.CheckQuantity(postDataAddItem)
								.success(function(CheckQty){
									if(CheckQty.Qty > 0){
										Qquestion = rows.Question;
										PriceQty.push(rows.PriceQtyArr);
										PriceQtyItemArray.push(rows.PriceQtyArr);
										ProcessAddItemMenu(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
										ModifierArray.push({
											"Unique" : rows.Unique, 
											"Description" : Description, 
											"Price" : rows.SellPrice, 
											"Quantity" : 1, 
											"Points" : rows.Points, 
											"Cost" : rows.Cost,  
											"Cost_Extra" : rows.Cost_Extra, 
											"Cost_Freight" : rows.Cost_Freight, 
											"Cost_Duty" : rows.Cost_Duty, 
											"Custom1" : rows.Custom1, 
											"Item" : rows.Item, 
											"EBT" : rows.EBT, 
											"Price1" : rows.price1, 
											"ListPrice" : rows.ListPrice
										});
										OpenItemArray.push({
											"Unique" : rows.Unique, 
											"Description" : Description, 
											"Price" : rows.SellPrice, 
											"Quantity" : 1, 
											"Points" : rows.Points, 
											"Cost" : rows.Cost,  
											"Cost_Extra" : rows.Cost_Extra, 
											"Cost_Freight" : rows.Cost_Freight, 
											"Cost_Duty" : rows.Cost_Duty, 
											"Custom1" : rows.Custom1, 
											"Item" : rows.Item, 
											"EBT" : rows.EBT, 
											"Price1" : rows.price1, 
											"ListPrice" : rows.ListPrice
										});
									}else{
										PlaySound();
										$scope.ItemSearch = '';
										$("#barcode_search").attr("disabled", true);
										var msg = (rows.Description != '' ? rows.Description : rows.Item)+"<br/>";
											msg+= "Quantity "+parseFloat(ItemQtyStock)+"<br/>";
											msg+= "Do you still want to Sell?";
										NumpadAlertYesNo('add_item_without_stock_menu', msg)
										.then(function(){
											$("#use_value").val(rows.Unique);
											$("#use_value2").val(rows.Question);
											WindowPopupAlertYesNo('Add New Item')
										})
									}
								});
							}
						}else{
							if(rows.MinimumAge > 0){
								NumpadAgeVerify(rows.MinimumAge)
								.then(function(){
									AgeVerifyTempArr.push(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
									WindowPopupAgeNotification()
									.then(function(){
										$("#age_field").focus();
									})
								})
							}else{
								if(rows.GiftCard == 1){
									//-->Populate Window Popup (Internal)
									GiftCardPoints = rows.Points;
									GiftCardForm('sell_gift_card', rows.Unique, rows.SellPrice)
									.then(function(){
										WindowPopupGiftCardForm('Gift Card')
										.then(function(){
											$("#gift_card_number").focus();
										})
									})
								}else if(rows.GiftCard == 2){
									//-->Populate Window Popup (External)
									GiftCardPoints = rows.Points;
									GiftCardForm2('sell_gift_card_datacap', rows.Unique, rows.SellPrice)
									.then(function(){
										WindowPopupGiftCardForm2('Gift Card')
										.then(function(){
											$("#gift_card_number2").focus();
										})
									})
								}else{
									Qquestion = rows.Question;
									PriceQty.push(rows.PriceQtyArr);
									PriceQtyItemArray.push(rows.PriceQtyArr);
									ProcessAddItemMenu(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
									ModifierArray.push({
										"Unique" : rows.Unique, 
										"Description" : Description, 
										"Price" : rows.SellPrice, 
										"Quantity" : 1, 
										"Points" : rows.Points, 
										"Cost" : rows.Cost,  
										"Cost_Extra" : rows.Cost_Extra, 
										"Cost_Freight" : rows.Cost_Freight, 
										"Cost_Duty" : rows.Cost_Duty, 
										"Custom1" : rows.Custom1, 
										"Item" : rows.Item, 
										"EBT" : rows.EBT, 
										"Price1" : rows.price1, 
										"ListPrice" : rows.ListPrice
									});
									OpenItemArray.push({
										"Unique" : rows.Unique, 
										"Description" : Description, 
										"Price" : rows.SellPrice, 
										"Quantity" : 1, 
										"Points" : rows.Points, 
										"Cost" : rows.Cost,  
										"Cost_Extra" : rows.Cost_Extra, 
										"Cost_Freight" : rows.Cost_Freight, 
										"Cost_Duty" : rows.Cost_Duty, 
										"Custom1" : rows.Custom1, 
										"Item" : rows.Item, 
										"EBT" : rows.EBT, 
										"Price1" : rows.price1, 
										"ListPrice" : rows.ListPrice
									});
								}
							}
						}
						$scope.ItemSearch = '';
					}else{
						var msg ='<h3 style="margin:0; padding:0;">Item not found</h3><br/>';
							msg+='<h3 style="color: #2ECC71;">'+$("#barcode_search").val()+'</h3><br/>';
							//msg+='<h4>Would you like to add it now?</h4>';
						NumpadPOSAlertNotication('item_search_add_yes', msg)
						.then(function(){
							WindowPopupPOSAlertNotifcation('Search Item Result')	
							.then(function(){
								var ResoWidth 	        = $("#right_panel_width").width();
								var ResoHeight 	        = $("#right_panel_width").height();
								var UseWidth 			= ResoWidth - 260;
								var UseHeight 			= ResoHeight + 260;
								var OrderListWidth 		= ($(".orderedlist").width() + 3);
								$("#pos_alert_notification").jqxWindow({
									height: UseHeight,
									width: UseWidth,
									position: { x: OrderListWidth, y: 50 }
								})
								$('#pos_alert_notification').jqxWindow('focus');
							})
						})
						PlaySound();
						$scope.ItemSearch = '';
						$("#barcode_search").val('');
					}//-->End if
					InventoryScan = false;
				})
			}//-->End if Item Search is empty.
			setTimeout(function(){
				$("#SearchItemButton").attr("disabled", false);
			},1000);
		};
		/* End All Inventory*/

		/*
		|------------------------------------------------------------------------------
		| POS Search Inventory Item function
		|------------------------------------------------------------------------------
		*/
		var pos_inventory_search_item_function = function(ItemSearch){
			$('#inventory-search').jqxGrid('showloadelement');
			var postData ="SearchItem="+ItemSearch;
				postData+="&SearchOption="+ $("#ItemSearchOptionOnForm").val();
				postData+="&BarcodeScan="+InventoryScan;
			posData.SearchInventoryItem(postData)
			.success(function(data){
				if(data.Count > 0){
					$("#pos_inventory_search_text").focus();
					$('#inventory-search').jqxGrid('clearselection');
					$("#pos_inventory_search_text").select();
					var source = {
						dataType: "json",
						dataFields: InventorySearchTypes[0],
						localdata: data.InventoryData
					}
					var dataAdapter = new $.jqx.dataAdapter(source);
					$("#inventory-search").jqxGrid({
						source: dataAdapter
					})

					window.localStorage.setItem('inventory', source);
				}else{
					PlaySound();
					var source = {
						dataType: "json",
						localdata: []
					}
					var dataAdapter = new $.jqx.dataAdapter(source);
					$("#inventory-search").jqxGrid({
						source: dataAdapter
					})
					$("#pos_inventory_search_text").focus;
					$("#pos_inventory_search_text").select();

					var msg ='<h3 style="margin:0; padding:0;">Item not found</h3><br/>';
						msg+='<h3 style="color: #2ECC71;">'+$("#pos_inventory_search_text").val()+'</h3><br/>';
						//msg+='<h4>Would you like to add it now?</h4>';
					NumpadPOSAlertNotication('item_search_add_yes', msg)
					.then(function(){
						WindowPopupPOSAlertNotifcation ('Search Item Result')	
						.then(function(){
							var ResoWidth 	        = $("#right_panel_width").width();
							var ResoHeight 	        = $("#right_panel_width").height();
							var UseWidth 			= ResoWidth - 260;
							var UseHeight 			= ResoHeight + 260;
							var POSBodyWidth 		= ($("search-inventory-item-dialog").width() / 3);
							var POSBodyHeight 		= ($("search-inventory-item-dialog").height() / 2);
							var CenterPositionX = (POSBodyWidth + 80);
							var CenterPositionY= (POSBodyHeight + 80);
							$("#pos_alert_notification").jqxWindow({
								height: UseHeight,
								width: UseWidth,
								position: { x: 4, y: CenterPositionY }
							})
						})
						setTimeout(function(){
							$('#pos_alert_notification').jqxWindow('focus');
						},100)
						
					})
				}//-->End if
				InventoryScan = false;
			})
		}

		$(document).on('submit', '#item_search_add_yes', function(e){
			e.preventDefault();
			$("#barcode_search").focus();
			$("#pos_alert_notification").jqxWindow("close");
		})

		$(document).on('click', '#item_search_add_yes .alert_no', function(e){
			e.preventDefault();
			$("#pos_alert_notification").jqxWindow("close");
			$("#pos_inventory_search_text").focus;
			$("#pos_inventory_search_text").select();
		})

		/*
		|------------------------------------------------------------------------------
		| POS Search Inventory Item on grid by click
		|------------------------------------------------------------------------------
		*/
		$("#pos_inventory_search_button").click(function(){
			if($("#pos_inventory_search_text").val() != ''){
				var ItemSearch = $("#pos_inventory_search_text").val();
				pos_inventory_search_item_function(ItemSearch);
			}else{
				$("#pos_inventory_search_text").focus();	
			}
		})
		/*
		|------------------------------------------------------------------------------
		| POS Search Inventory Item on grid by enter
		|------------------------------------------------------------------------------
		*/
		$("#pos_inventory_search_text").keypress(function( event ) {
			if (event.which == 13) {
				event.preventDefault();
				var ItemSearch = $("#pos_inventory_search_text").val();
				pos_inventory_search_item_function(ItemSearch);
			}
		})
		/*
		|------------------------------------------------------------------------------
		| POS Search Inventory Item input
		|------------------------------------------------------------------------------
		*/
		$("#pos_inventory_search_text").click(function(e){
			e.preventDefault();
			$(this).select();
		})
		/*
		|------------------------------------------------------------------------------
		| Inventory Grid row click function
		|------------------------------------------------------------------------------
		*/
		/*
		$("#inventory-search").on('rowclick', function(event){
			var rowindex = event.args.rowindex;
			var datafield = event.args.datafield;
			var row = $(this).jqxGrid('getrowdata', rowindex);
			
			$scope.search_item = {
				id: row.Unique
			}
			$scope.barcode_item = {
				id: row.BarcodeUnique
			}
		})
		*/
		/*
		|------------------------------------------------------------------------------
		| Inventory Grid row double click function
		|------------------------------------------------------------------------------
		*/
		var PriceQty = [];
		$(document).on('rowdoubleclick', '#inventory-search', function(event){
		//$("#inventory-search").on('rowdoubleclick', function(event){
			PriceQty = [];
			var index = event.args.rowindex;
			var datafield = event.args.datafield;
			var row = $(this).jqxGrid('getrowdata', index);
			editRow = index;
			var postdata="ItemUnique="+row.Unique;
			var process = false;
			var POSItemCustom1 = $("#POSItemCustom1").val();
			var Description = '';
			
			if(row.Custom1){
				//if(POSItemCustom1 == 1){
				//	Description = row.Description+' '+row.Custom1;
				//}else{
					Description = row.Description;
				//}
			}else{
				Description = row.Description;
			}

			(Description != '' ? Description : Description = row.Item)

			var POSLocation = $("#POSLocation").val();
			var UseStockQuantityLocation = 0;
			if(POSLocation == 1){
				UseStockQuantityLocation = row.Quantity1;
			}else if(POSLocation == 2){
				UseStockQuantityLocation = row.Quantity2;
			}else if(POSLocation == 3){
				UseStockQuantityLocation = row.Quantity3;
			}else if(POSLocation == 4){
				UseStockQuantityLocation = row.Quantity4;
			}else if(POSLocation == 5){
				UseStockQuantityLocation = row.Quantity5;
			}


			if($scope.WarningStock == 1){
				ModifierArray.push({"Unique" : row.Unique, "Description" : row.Description, "Price" : row.SellPrice, "Quantity" : 1, "Points" : row.Points, "Cost" : row.Cost,  "Cost_Extra" : row.Cost_Extra, "Cost_Freight" : row.Cost_Freight, "Cost_Duty" : row.Cost_Duty, "Custom1" : row.Custom1, "Item" : row.Item, "EBT" : row.EBT, "Price1" : row.price1, "ListPrice" : row.ListPrice, "DescriptionKitchen" : row.DescriptionKitchen});
				WarningStockArray.push(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
				if(row.Quantity > 0){
					if(row.MinimumAge > 0){
						NumpadAgeVerify(row.MinimumAge)
						.then(function(){
							AgeVerifyTempArr.push(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
							WindowPopupAgeNotification()
							.then(function(){
								$("#age_field").focus();
							})
						})
					}else{
						if(row.GiftCard == 1){
							//-->Populate Window Popup (Internal)
							GiftCardPoints = row.Points;
							GiftCardForm('sell_gift_card', row.Unique, row.SellPrice)
							.then(function(){
								WindowPopupGiftCardForm('Gift Card')
								.then(function(){
									$("#gift_card_number").focus();
								})
							})
						}else if(row.GiftCard == 2){
							//-->Populate Window Popup (External)
							GiftCardPoints = row.Points;
							GiftCardForm2('sell_gift_card_datacap', row.Unique, row.SellPrice)
							.then(function(){
								WindowPopupGiftCardForm2('Gift Card')
								.then(function(){
									$("#gift_card_number2").focus();
								})
							})
						}else{
							Qquestion = row.Question;
							PriceQty.push(row.PriceQtyArr);
							PriceQtyItemArray.push(row.PriceQtyArr);
							ProcessAddItemMenu(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
							ModifierArray.push({
								"Unique" : row.Unique, 
								"Description" : Description, 
								"Price" : row.SellPrice, 
								"Quantity" : 1, 
								"Points" : row.Points, 
								"Cost" : row.Cost,  
								"Cost_Extra" : row.Cost_Extra, 
								"Cost_Freight" : row.Cost_Freight, 
								"Cost_Duty" : row.Cost_Duty, 
								"Custom1" : row.Custom1, 
								"Item" : row.Item, 
								"EBT" : row.EBT, 
								"Price1" : row.price1, 
								"ListPrice" : row.ListPrice,
								"DescriptionKitchen" : row.DescriptionKitchen
							});
							OpenItemArray.push({
								"Unique" : row.Unique, 
								"Description" : Description, 
								"Price" : row.SellPrice, 
								"Quantity" : 1, 
								"Points" : row.Points, 
								"Cost" : row.Cost,  
								"Cost_Extra" : row.Cost_Extra, 
								"Cost_Freight" : row.Cost_Freight, 
								"Cost_Duty" : row.Cost_Duty, 
								"Custom1" : row.Custom1, 
								"Item" : row.Item, 
								"EBT" : row.EBT, 
								"Price1" : row.price1, 
								"ListPrice" : row.ListPrice,
								"DescriptionKitchen" : row.DescriptionKitchen
							});
						}
					}
				}else{
					PlaySound(row.Unique);
					Qquestion = row.Question;
					$("#barcode_search").attr("disabled", true);
					var msg = Description+"<br/>";
						msg+= "Quantity "+parseFloat(UseStockQuantityLocation)+"<br/>";
						msg+= "Do you still want to Sell?";
					NumpadAlertYesNo('add_item_without_stock', msg)
					.then(function(){
						$("#use_value").val(row.Unique);
						$("#use_value2").val(row.Question);
						WindowPopupAlertYesNo ('Add New Item');
					})
				}
			}else{
				if(row.MinimumAge > 0){
					NumpadAgeVerify(row.MinimumAge)
					.then(function(){
						AgeVerifyTempArr.push(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
						WindowPopupAgeNotification()
						.then(function(){
							$("#age_field").focus();
						})
					})
				}else{
					if(row.GiftCard == 1){
						//-->Populate Window Popup (Internal)
						GiftCardPoints = row.Points;
						GiftCardForm('sell_gift_card', row.Unique, row.SellPrice)
						.then(function(){
							WindowPopupGiftCardForm('Gift Card')
							.then(function(){
								$("#gift_card_number").focus();
							})
						})
					}else if(row.GiftCard == 2){
						//-->Populate Window Popup (External)
						GiftCardPoints = row.Points;
						GiftCardForm2('sell_gift_card_datacap', row.Unique, row.SellPrice)
						.then(function(){
							WindowPopupGiftCardForm2('Gift Card')
							.then(function(){
								$("#gift_card_number2").focus();
							})
						})
					}else{

						Qquestion = row.Question;
						PriceQty.push(row.PriceQtyArr);
						PriceQtyItemArray.push(row.PriceQtyArr);
						ProcessAddItemMenu(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
						ModifierArray.push({
							"Unique" : row.Unique, 
							"Description" : Description, 
							"Price" : row.SellPrice, 
							"Quantity" : 1, 
							"Points" : row.Points, 
							"Cost" : row.Cost,  
							"Cost_Extra" : row.Cost_Extra, 
							"Cost_Freight" : row.Cost_Freight, 
							"Cost_Duty" : row.Cost_Duty, 
							"Custom1" : row.Custom1, 
							"Item" : row.Item, 
							"EBT" : row.EBT, 
							"Price1" : row.price1, 
							"ListPrice" : row.ListPrice,
							"DescriptionKitchen" : row.DescriptionKitchen
						});
						OpenItemArray.push({
							"Unique" : row.Unique, 
							"Description" : Description, 
							"Price" : row.SellPrice, 
							"Quantity" : 1, 
							"Points" : row.Points, 
							"Cost" : row.Cost,  
							"Cost_Extra" : row.Cost_Extra, 
							"Cost_Freight" : row.Cost_Freight, 
							"Cost_Duty" : row.Cost_Duty, 
							"Custom1" : row.Custom1, 
							"Item" : row.Item, 
							"EBT" : row.EBT, 
							"Price1" : row.price1, 
							"ListPrice" : row.ListPrice,
							"DescriptionKitchen" : row.DescriptionKitchen
						});
					}
				}
			}
			$("#search-inventory-item-dialog").jqxWindow('close');
		})
		
		
		var populateKeyboard = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#custom_item_keyboard").html('');
				$("#custom_item_keyboard").append(''+
				'<form id="'+form_name+'">'+
				'<input type="text" id="search_field" maxlength="'+KeyboardInputLimit+'">'+
				'<div id="keyboard"></div>'+
				'</form');
				def.resolve();
			},100);
			return def.promise();
		}
		
		var populateNumpadPrice = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-price").append('<div id="price_numpad" style="background: #144766; color:#EEE;"></div>');
				$("#price_numpad").html('');
				$("#price_numpad").append(''+
					'<div style="margin-bottom: 5px;">'+
						'<div class="" style="font-weight:bold;">Item: '+$scope.price_itemno+'</div>'+
						'<div class="" style="font-weight:bold;">Description: '+$scope.price_desc+'</div>'+
					'</div>'+
				'');	
				$("#price_numpad").append(''+
					'<h4 style="text-align:center;">Enter Item Price</h4>'+
				'');
				$("#price_numpad").append(
					'<form id="'+form_name+'">'+
						//'<input type="text" id="number_field" class="hdfield" maxlength="'+NumpadPriceInputLimit+'" style="color:#000">'+
						'<div id="open_numpad_price" class="hdfield"></div>'+
						'<div id="numpad_open_price_keyboard"></div>'+
					'</form>'
				);
				
				$("#open_numpad_price").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val() });
				$('#open_numpad_price').on('change', function (event) 
				{
					var value = event.args.value;
					var type = event.args.type;
					myNumber = myNumber + ' ' +value;
				}); 

				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupPrice = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				var OrderListWidth 	= ($(".orderedlist").width() + 3);
				$("#dialog-numpad-price").jqxWindow({
					/*
					height: 440,
					minWidth: 300,
					*/
					title: header_title,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: false,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					position: { x: OrderListWidth, y: 50 }
				});
				$('#dialog-numpad-price').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadPrice = function(form_name){
			var def = $.Deferred();
			populateNumpadPrice(form_name)
			.then(function(){
				$('#numpad_open_price_keyboard').numeric_numpad({
				  	layout: "numeric",
				  	input: $('#open_numpad_price')
				});
				def.resolve();
			});
			return def.promise();
		}

		var populateNumpadTip = function(form_name, title){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-tip").append('<div id="numpad_tip" style="background: #144766; color:#EEE;"></div>');
				$("#numpad_tip").html('');	
				$("#numpad_tip").append(''+
					'<h4 style="text-align:center;">'+title+'</h4>'+
				'');
				$("#numpad_tip").append(''+
				'<form id="'+form_name+'">'+
					'<div id="tip_number_field"></div>'+
					'<div id="keyboard_tip"></div>'+
				'</form>');
				$("#tip_number_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val() })
				$('#open_numpad_price').on('change', function (event) 
				{
					var value = event.args.value;
					var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
					myNumber = value;
				}); 
				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupTip = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				var ParentWidth = $("#wrapper").width();
				var ComputeWidth = (ParentWidth / 2);
				var UseWidth = (ComputeWidth);
				var OrderListWidth = ($(".orderedlist").width() + 3);
				$("#dialog-numpad-tip").jqxWindow({
					/*
					height: 750,
					minWidth: 300,
					width: UseWidth,
					*/
					title: header_title,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					position: { x: OrderListWidth, y: 50 }
				});
				$('#dialog-numpad-tip').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadTip = function(form_name, title){
			var def = $.Deferred();
			populateNumpadTip(form_name, title)
			.then(function(){
				$('#keyboard_tip').numeric_numpad({
				  layout: "numeric",
				  input: $('#tip_number_field')
				});
				def.resolve();
			});
			return def.promise();
		}
	
		$("#numpad_weigh").on('close', function(e){
			e.preventDefault();
			$("#numpad_weigh_container").remove();
		})
		
		var populateWeigh = function(form, title){
			var def = $.Deferred();
			$("#numpad_weigh").append('<div id="numpad_weigh_container" style="background: #144766; color:#EEE;"></div>');
			$("#numpad_weigh_container").html('');
			$("#numpad_weigh_container").append(''+
				'<h4 style="text-align:center;">'+title+'</h4>'+
			'');
			$("#numpad_weigh_container").append(''+
			'<form id="'+form+'">'+
				'<input type="text" id="number_field" class="hdfield" style="color:#000;">'+
				'<div id="weigh_numpad"></div>'+
				'<input type="hidden" id="weight_result" />'+
				'<input type="hidden" id="weight_price" />'+
				'<input type="hidden" id="weight_description" />'+
				'<input type="hidden" id="weight_itemunique"/>'+
				'<input type="hidden" id="weight_points" />'+
			'</form>');
			setTimeout(function(){
				def.resolve();
			},100);
			return def.promise();
		}

		var WindowPopupWeigh = function(windowtitle){
			var def = $.Deferred();
			var OrderListWidth 		= ($(".orderedlist").width() + 3);
			setTimeout(function(){
				$("#numpad_weigh").jqxWindow({
					height: 440,
					minWidth: 300,
					title: windowtitle,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					modalZIndex: 100,
					position: { x: OrderListWidth, y: 65 }
				});
				$("#numpad_weigh").jqxWindow("open");
				def.resolve();	
			},100);
			return def.promise();
		}

		var NumpadWeigh = function(form, title){
			var def = $.Deferred();
			populateWeigh(form, title)
			.then(function(){
				$('#weigh_numpad').hdkeyboard({
				  layout: "weigh",
				  input: $('#number_field')
				});
				def.resolve();
			});
			return def.promise();
		}

		$(document).on('click', '#weigh_convert_price .weight_button', function(){
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px',
				theme: true,
    			baseZ: 99999
			}, message: 'Processing...' });
			
			posData.GetWeigh()
			.success(function(data){
				// Weigh check ip address message
				// if(data.Result){
					$("#weight_result").val(data.Result);
					$("#number_field").val(data.Result);
				// }else{
				// 	var msg = data.msg;
				// 	NumpadAlertClose('weigh_failed', msg)
				// 	.then(function(){
				// 		WindowPopupAlert('Info');
				// 	})
				// }
			})
			.then(function(){
				setTimeout($.unblockUI, 100); 
			})
		})

		$(document).on('click', ".clear_weigh", function(){
			$("#number_field").val('');
			$("#number_field").focus();
		})

		var StatPromptDesc = 0;
		var StatPromptPrice = 0;
		var StatItem = '';
		var StatPart = '';
		var StatDescription = '';
		var ItemType = '';
		var ItemPriceModify = 0;
		var OpenItemType = '';
		var OpenItemPriceModify = 0;
		var CheckPrompt = function(post, item_unique, process, promptdesc, promptprice, ItemNo, Part, Description, Price, weigh, Points, cost, costextra, costfreight, costduy, custom1, itemno, ebt, price1, listprice, MinimumAge, Type, PriceModify, DescriptionKitchen){
			$(".btnitems").attr('disabled', false);
			var def = $.Deferred();
			ItemType = Type;
			ItemPriceModify = PriceModify;
			var KitchenPrintStatus = $scope.KitchenPrinter;
			$scope.price_itemno = ItemNo;
			if($("#search_field").val()){
				$scope.price_desc = $("#search_field").val();
			}else{
				$scope.price_desc = Description;
			}
			console.log("Weigh",weigh);
			if(weigh == 1){
				posData.GetWeigh()
				.success(function(data){
					NumpadWeigh('weigh_convert_price', 'Scale')
					.then(function(){
						WindowPopupWeigh('Scale ID '+item_unique+" | "+ Description)
						.then(function(){
							$("#number_field").val(data.Result);
							$("#weight_price").val(Price);
							$("#weight_result").val(data.Result);
							$("#weight_description").val(Description);
							$("#weight_itemunique").val(item_unique);
							$("#weight_points").val(Points);
							$("#number_field").focus();
						})
					})
				})
			}else if(weigh == 2){
				NumpadWeigh('weigh_convert_price', 'Scale')
				.then(function(){
					WindowPopupWeigh('Scale ID '+item_unique+" | "+ Description)
					.then(function(){
						$("#number_field").val('');
						$("#weight_price").val(Price);
						$("#weight_result").val('');
						$("#weight_description").val(Description);
						$("#weight_itemunique").val(item_unique);
						$("#weight_points").val(Points);
						$("#number_field").focus();
					})
				})
			}else{	
				if(process == 1){ //Process 1 Enter new Description
					if(promptdesc == 1){
						$scope.CustomItemUnique = item_unique;
						NumpadKeyboard('custom_item_form')		
						.then(function(){
							StatPromptDesc = promptdesc;
							StatPromptPrice = promptprice;
							StatItem = ItemNo;
							StatPart = Part;
							StatDescription = Description;
							WindowPopupKeyboard('ID '+item_unique+" | "+ Description)
							.then(function(){
								$("#search_field").focus();
								setTimeout(function(){
									$("#search_field").select();
								},100);
							})
						})				
					}else{
						if(promptprice == 1){
							$scope.CustomItemUnique = item_unique;
							NumpadPrice('OpenItemPrice')
							.then(function(){
								WindowPopupPrice('Item Price')
								.then(function(){
									$("#open_numpad_price").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#open_numpad_price input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#open_numpad_price input").select();
									},100)
								})
							})
						}else{
							def.resolve();
						}
					}
				}else if(process == 2){ //Process 2 Enter new Price
					if(promptprice == 1){
						$scope.CustomItemUnique = item_unique;
						def.resolve(true);
					}else{
						def.resolve(false);
					}
				}
			}
			return def.promise();
		}

		var weightclick = false;
		$(document).on('submit', '#weigh_convert_price', function(e){
			e.preventDefault();
			
			if(weightclick){
				return;
			}

			weightclick = true;

			if($("#number_field").val() != ''){
				var WeightResult = $("#number_field").val();//$("#weight_result").val();
				var WeightPrice = $("#weight_price").val();
				var Description = $("#weight_description").val();
				var ItemUnique = $("#weight_itemunique").val();
				var Points = $("#weight_points").val();
				// var ComputeWeighPrice = WeightResult * WeightPrice;
				if( $("#WeightScaleRounding").val() == 1){
					WeightResult = Math.ceil((Math.floor(WeightResult*WeightPrice*20)/20)/WeightPrice *1000)/1000;
				}

				var postDataAddItem ="ItemId="+ItemUnique;
					postDataAddItem+="&QuantityBefore="+ WeightResult;
					postDataAddItem+="&Amount="+WeightPrice;
					postDataAddItem+="&Description="+encodeURIComponent(Description);
					postDataAddItem+="&Points="+Points;
					postDataAddItem+="&Weigh=1";
				posData.AddItem(postDataAddItem)
				.success(function(data){
					$scope.desc = data;
					$("#receiptn").text(data.ReceiptNumber);
					load_data(data);
					$scope.BtnPaymentWhen = false;
					PoleDisplay(data.ReceiptDetailsUnique);
					$("#barcode_search").attr("disabled", false);
					$("#barcode_search").focus();
					GlobalItemUnique.Unique = 0;
					BEFOREQUANTITY = 0;
					$("#numpad_weigh").jqxWindow("close");
					weightclick = false;
				});
			}else{
				var msg = 'Weight cannot be empty';
				NumpadAlertClose('weigh_failed', msg)
				.then(function(){
					WindowPopupAlert('Info');
				})
			}
		})
			
		$scope.SelectItemSearch = function(){
			var rowindex = $("#inventory-search").jqxGrid('getselectedrowindex');
			var row = $("#inventory-search").jqxGrid('getrowdata', rowindex);
			var ItemUnique = row.Unique;//$scope.search_item.id;
			var postdata="ItemUnique="+ItemUnique;
			var process = false;
			var postDataAddItem="ItemId="+ItemUnique;
			var Description = '';
			var POSItemCustom1 = $("#POSItemCustom1").val();
			if(row.Custom1){
				//if(POSItemCustom1 == 1){
				//	Description = row.Description+' '+row.Custom1;
				//}else{
					Description = row.Description;
				//}
			}else{
				Description = row.Description;
			}
			if($scope.WarningStock == 1){
				ModifierArray = [];
				ModifierArray.push({"Unique" : row.Unique, "Description" : row.Description, "Price" : row.SellPrice, "Quantity" : 1, "Points" : row.Points, "Cost" : row.Cost,  "Cost_Extra" : row.Cost_Extra, "Cost_Freight" : row.Cost_Freight, "Cost_Duty" : row.Cost_Duty, "Custom1" : row.Custom1, "Item" : row.Item, "EBT" : row.EBT, "Price1" : row.price1, "ListPrice" : row.ListPrice, "DescriptionKitchen" : row.DescriptionKitchen});
				WarningStockArray.push(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
				posData.CheckQuantity(postDataAddItem)
				.success(function(CheckQty){
					if(CheckQty.Qty > 0){
						if(row.MinimumAge > 0){
							NumpadAgeVerify(row.MinimumAge)
							.then(function(){
								AgeVerifyTempArr.push(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
								WindowPopupAgeNotification()
								.then(function(){
									$("#age_field").focus();
								})
							})
						}else{
							if(row.GiftCard == 1){
								//-->Populate Window Popup (Internal)
								GiftCardPoints = row.Points;
								GiftCardForm('sell_gift_card', row.Unique, row.SellPrice)
								.then(function(){
									WindowPopupGiftCardForm('Gift Card')
									.then(function(){
										$("#gift_card_number").focus();
									})
								})
							}else if(row.GiftCard == 2){
								//-->Populate Window Popup (External)
								GiftCardPoints = row.Points;
								GiftCardForm2('sell_gift_card_datacap', row.Unique, row.SellPrice)
								.then(function(){
									WindowPopupGiftCardForm2('Gift Card')
									.then(function(){
										$("#gift_card_number2").focus();
									})
								})
							}else{
								Qquestion = row.Question;
								PriceQty.push(row.PriceQtyArr);
								PriceQtyItemArray.push(row.PriceQtyArr);
								ProcessAddItemMenu(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
								ModifierArray.push({
									"Unique" : row.Unique, 
									"Description" : Description, 
									"Price" : row.SellPrice, 
									"Quantity" : 1, 
									"Points" : row.Points, 
									"Cost" : row.Cost,  
									"Cost_Extra" : row.Cost_Extra, 
									"Cost_Freight" : row.Cost_Freight, 
									"Cost_Duty" : row.Cost_Duty, 
									"Custom1" : row.Custom1, 
									"Item" : row.Item, 
									"EBT" : row.EBT, 
									"Price1" : row.price1, 
									"ListPrice" : row.ListPrice,
									"DescriptionKitchen" : row.DescriptionKitchen
								});
								OpenItemArray.push({
									"Unique" : row.Unique, 
									"Description" : Description, 
									"Price" : row.SellPrice, 
									"Quantity" : 1, 
									"Points" : row.Points, 
									"Cost" : row.Cost,  
									"Cost_Extra" : row.Cost_Extra, 
									"Cost_Freight" : row.Cost_Freight, 
									"Cost_Duty" : row.Cost_Duty, 
									"Custom1" : row.Custom1, 
									"Item" : row.Item, 
									"EBT" : row.EBT, 
									"Price1" : row.price1, 
									"ListPrice" : row.ListPrice,
									"DescriptionKitchen" : row.DescriptionKitchen
								});
							}
						}
					}else{
						PlaySound();
						$scope.ItemSearch = null;
						$("#barcode_search").attr("disabled", true);
						var msg = CheckQty.Description+"<br/>";
							msg+= "Quantity "+parseFloat(CheckQty.Qty)+"<br/>";
							msg+= "Do you still want to Sell?";
						NumpadAlertYesNo('add_item_without_stock', msg)
						.then(function(){
							 $("#use_value").val(ItemUnique);
							 $("#use_value2").val(CheckQty.Question);
							 WindowPopupAlertYesNo('Add New Item')
						})
					}
				});
			}else{
				if(row.MinimumAge > 0){
					NumpadAgeVerify(row.MinimumAge)
					.then(function(){
						AgeVerifyTempArr.push(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
						WindowPopupAgeNotification()
						.then(function(){
							$("#age_field").focus();
						})
					})
				}else{
					if(row.GiftCard == 1){
						//-->Populate Window Popup (Internal)
						GiftCardPoints = row.Points;
						GiftCardForm('sell_gift_card', row.Unique, row.SellPrice)
						.then(function(){
							WindowPopupGiftCardForm('Gift Card')
							.then(function(){
								$("#gift_card_number").focus();
							})
						})
					}else if(row.GiftCard == 2){
						//-->Populate Window Popup (External)
						GiftCardPoints = row.Points;
						GiftCardForm2('sell_gift_card_datacap', row.Unique, row.SellPrice)
						.then(function(){
							WindowPopupGiftCardForm2('Gift Card')
							.then(function(){
								$("#gift_card_number2").focus();
							})
						})
					}else{
						Qquestion = row.Question;
						PriceQty.push(row.PriceQtyArr);
						PriceQtyItemArray.push(row.PriceQtyArr);
						ProcessAddItemMenu(row.Unique, row.PromptDescription, row.PromptPrice, row.Item, row.Part, Description, row.SellPrice, row.Weigh, row.Points, row.Cost, row.Cost_Extra, row.Cost_Freight, row.Cost_Duty, row.Custom1, row.Item, row.EBT, row.price1, row.ListPrice, row.MinimumAge, row.GiftCard, row.DescriptionKitchen);
						ModifierArray.push({
							"Unique" : row.Unique, 
							"Description" : Description, 
							"Price" : row.SellPrice, 
							"Quantity" : 1, 
							"Points" : row.Points, 
							"Cost" : row.Cost,  
							"Cost_Extra" : row.Cost_Extra, 
							"Cost_Freight" : row.Cost_Freight, 
							"Cost_Duty" : row.Cost_Duty, 
							"Custom1" : row.Custom1, 
							"Item" : row.Item, 
							"EBT" : row.EBT, 
							"Price1" : row.price1, 
							"ListPrice" : row.ListPrice
						});
						OpenItemArray.push({
							"Unique" : row.Unique, 
							"Description" : Description, 
							"Price" : row.SellPrice, 
							"Quantity" : 1, 
							"Points" : row.Points, 
							"Cost" : row.Cost,  
							"Cost_Extra" : row.Cost_Extra, 
							"Cost_Freight" : row.Cost_Freight, 
							"Cost_Duty" : row.Cost_Duty, 
							"Custom1" : row.Custom1, 
							"Item" : row.Item, 
							"EBT" : row.EBT, 
							"Price1" : row.price1, 
							"ListPrice" : row.ListPrice
						});
					}
				}
			}
			$("#search-inventory-item-dialog").jqxWindow("close");
		}
		
		/*
		var AfterSaveKitchenNote = function(){
			var def = $.Deferred();
			var ItemUnique = $scope.search_item.id;
			var postdata="ItemUnique="+ItemUnique;
			posData.CheckItemQuestion(postdata)
			.success(function(item_question_data){
				if(item_question_data.success == true){
					$("#Question").text(item_question_data.Question);
					Question('', true, '', item_question_data);	
					def.resolve();
				}else{
					var postDataAddItem="ItemId="+ItemUnique;
					postDataAddItem+="&BarcodeUnique="+$scope.barcode_item.id;
					posData.AddItem(postDataAddItem)
					.success(function(data){
						$scope.desc = data;
						$("#receiptn").text(data.ReceiptNumber);
					}).then(function(){
						GetCustomerSave();
						LoadOrderedItemList();
						LoadTotals()
						.then(function(){
							POSTotal();
						})
						LoadTax();
						LoadEBT();
						LoadDiscount();
						LoadPayments();
						LoadChange();
						ReceiptTaxChecker();
						CheckReceiptStatus();
						setTimeout(function(){
							GetSelectedCustomer();
						},500);
						$scope.BtnPaymentWhen = false;
						def.resolve();
					});
				}
			});
			return def.promise();
		}
		*/
		
		var temp_open_item = [];
		$(document).on("submit",'#custom_item_form',function(e){
			e.preventDefault();
			if($("#search_field").val() != ''){
				var ItemUnique = $scope.CustomItemUnique;
				var postdata ="ItemUnique="+ItemUnique;
				CheckPrompt(postdata, ItemUnique, 2, StatPromptDesc, StatPromptPrice, StatItem, StatPart, StatDescription)
				.then(function(ans){
					temp_open_item.push(ItemUnique, encodeURIComponent( $("#search_field").val()) );
					if(ans == true){
						$("#dialog-numpad-keyboard").jqxWindow('close');
						$("#price_numpad").html('');
						$("#custom_item_keyboard").html('');
						NumpadPrice('OpenItemPrice')
						.then(function(){
							WindowPopupPrice('Item Price')
							.then(function(){
								$("#open_numpad_price").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#open_numpad_price input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#open_numpad_price input").select();
								},100)
							})
						})
					}else{
						var postdata="OpenItemInfo="+JSON.stringify(temp_open_item);
							postdata+="&OpenItemData="+JSON.stringify(OpenItemArray);
							postdata+="&BeforeQuantity="+BEFOREQUANTITY;
							postdata+="&PriceQuantity="+JSON.stringify(PriceQty);
							postdata+="&Type="+PromptItemType;
							postdata+="&PriceModify="+OpenItemPriceModify;
							postdata+="&ParentItem="+GlobalItemUnique.Unique;
						posData.AddOpenItem(postdata)
						.success(function(data){
							temp_open_item = [];
							load_data(data); 
							// GetCustomerSave();
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$scope.BtnPaymentWhen = false;
							$("#inventory-search").jqxDataTable('clearFilters');
							$("#price_numpad").html('');
							$("#custom_item_keyboard").html('');
							$("#dialog-numpad-keyboard").jqxWindow('close');
							PoleDisplay(data.ReceiptDetailsUnique);
							BEFOREQUANTITY = 0;
						})
					}
					StatPromptDesc = 0;
					StatPromptPrice = 0;
					StatItem = '';
					StatPart = '';
					StatDescription = '';
				})
			}
		});
		
		$(document).on('submit','#OpenItemPrice',function(e){
			e.preventDefault();
			var inputPrice = $("#open_numpad_price").val();
			if(inputPrice == ''){
				$("#open_numpad_price").val('0.00');
			}
			if(temp_open_item.length == 2){
				temp_open_item.push($("#open_numpad_price").val());
			}else{
				temp_open_item.push($scope.CustomItemUnique, '', $("#open_numpad_price").val());
			}
			var postdata ="OpenItemInfo="+JSON.stringify(temp_open_item);
				postdata+="&OpenItemData="+JSON.stringify(OpenItemArray);
				postdata+="&BeforeQuantity="+BEFOREQUANTITY;
				postdata+="&Type="+PromptItemType;
				postdata+="&PriceModify="+ItemPriceModify;
				postdata+="&ParentItem="+GlobalItemUnique.Unique;
			posData.AddOpenItem(postdata)
			.success(function(data){
				temp_open_item = [];
				OpenItemArray = [];
				ModifierArray = [];
				load_data(data);
				// GetCustomerSave();
				// setTimeout(function(){
				// 	GetSelectedCustomer();
				// },500);
				$scope.BtnPaymentWhen = false;
				$("#inventory-search").jqxDataTable('clearFilters');
				$("#price_numpad").html('');
				$("#dialog-numpad-price").jqxWindow('close');
				$("#barcode_search").attr("disabled", false);
				$("#barcode_search").focus();
				PoleDisplay(data.ReceiptDetailsUnique);
				BEFOREQUANTITY = 0;
			})
		})
	
		var checkKitchenNote = function(detailsUnique){
			var def = $.Deferred();
			var postdata="receipt_details_unique="+detailsUnique;
			posData.checkKitchenNote(postdata)
			.success(function(data){
				$("#search_field").val(data.Notes);
				def.resolve();
			})
			return def.promise();	
		}

		var holdDesc = $(".selected").find('strong:eq(1)').text();
		/*Kitchen Note*/
		$scope.KitchenNote = function(){
			$("#KitchenNotefunction").attr("disabled", true);
			var type = 19;
			var RDUnique = GlobalItemUnique.Unique;
			if(RDUnique){
				var ItemSelInfo = $(".selected").attr('id');
				var ItemPrinted = ItemSelInfo.split('=')[9];
				if(ItemPrinted == 1){
					var msg="Product is already printed. <br/>";
						msg+="Please add new product instead.";
					NumpadAlertClose('add_item_failed', msg)
					.then(function(){
						WindowPopupAlert("Alert Message")
					})
					$("#KitchenNotefunction").attr("disabled", false);
					return false;
				}


				var postdata="ReceiptDetailsUnique="+RDUnique;
				posData.GetInfoByReceiptDetails(postdata)
				.success(function(data){
					NumpadKeyboard('kitchen_note_form')
						.then(function(){
							CheckNotes(RDUnique, type)
							.then(function(){
								WindowPopupKeyboard('Kitchen Note | ID '+data.ItemUnique+' | '+data.Description)
								.then(function(){
									setTimeout(function(){
										var searchInput = $('#search_field');
										var strLength = searchInput.val().length * 2;
										searchInput.focus();
										searchInput[0].setSelectionRange(strLength, strLength);
									},100);
								})
						})
					})
					$scope.CustomReceiptDetailsUnique = RDUnique;
				})
			}else{
				var msg = "Please select Item first.";
				NumpadAlertClose('kitchen_note_form', msg)
				.then(function(){
					WindowPopupAlert('Kitchen Note Alert');
				})
			}

			setTimeout(function(){
				$("#KitchenNotefunction").attr("disabled", false);
			},1000);
		}

		$(document).on("submit",'#kitchen_note_form',function(e){
			e.preventDefault();
			var postdata="ItemRDetailsUnique="+$scope.CustomReceiptDetailsUnique;
				postdata+="&ItemNote="+encodeURIComponent($.trim($('#search_field').val()).toString());
				postdata+="&type="+19;
			posData.KitchenNote(postdata)
			.success(function(data){
				if(data.success == true){
					$("#custom_item_keyboard").html('');
					$("#dialog-numpad-keyboard").jqxWindow('close');
					load_data(data);
				}
			})
		})
		
		$scope.CloseInventorySearch = function(){
			$("#pos_inventory_search_text").val('');
			$("#barcode_search").val('');
			$("#search-inventory-item-dialog").jqxWindow('close');
			$("#barcode_search").focus();
			InventoryWindowStatus = 0;
		};

		//Passcode
		var populateNumpadPasscode = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-passcode").append('<div id="passcode_numpad" style="background: #144766; color:#EEE;"></div>');
				$("#passcode_numpad").html('');
				$("#passcode_numpad").append('<h4 style="text-align:center;">Enter Passcode</h4>');
				$("#passcode_numpad").append(''+
				'<form id="'+form_name+'">'+
					'<input type="password" class="hdfield" id="number_field" autocomplete="off" style="color:#000">'+
					'<div id="keyboard_passcode"></div>'+
				'</form>');
				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupPasscode = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				var ParentWidth = $("#wrapper").width();
				var ComputeWidth = (ParentWidth / 2);
				var UseWidth = (ComputeWidth);
				var OrderListWidth = ($(".orderedlist").width() + 3);
				$("#dialog-numpad-passcode").jqxWindow({
					/*height: 750,
					minWidth: 300,
					width: UseWidth,
					*/
					isModal: true,
					theme: 'darkblue',
					showCloseButton: false,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0,
					position: { x: OrderListWidth, y: 50 }
				});
				$('#dialog-numpad-passcode').jqxWindow('setTitle', header_title);
				$('#dialog-numpad-passcode').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadPasscode = function(form_name){
			var def = $.Deferred();
			populateNumpadPasscode(form_name)
			.then(function(){
				$('#keyboard_passcode').numeric_numpad({
				  layout: "numbers_only",
				  input: $('#number_field')
				});
				setTimeout(function(){
					$("#number_field").focus();
					def.resolve();
				},100);
			});
			return def.promise();
		}

		/*Popup Keyboard*/
		var populateNumpadKeyboardReason = function(form_name){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-keyboard").append('<div id="custom_item_keyboard" style="background: #144766; color:#EEE;"></div>');
				$("#custom_item_keyboard").html('');
				$("#custom_item_keyboard").append('<h4 style="text-align:center;">Reason</h4>');
				$("#custom_item_keyboard").append(''+
				'<form id="'+form_name+'">'+
					'<input type="text" id="search_field" style="color:#000;">'+
					'<div id="keyboard_reason"></div>'+
				'</form>');
				myNumber = '';
				def.resolve();
			},100);
			return def.promise();
		}
		
		var WindowPopupKeyboardReason = function(header_title){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-numpad-keyboard").jqxWindow({
					height: 430,
					minWidth: '80%',
					isModal: true,
					theme: 'darkblue',
					showCloseButton: true,
					resizable: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				$('#dialog-numpad-keyboard').jqxWindow('setTitle', header_title);
				$('#dialog-numpad-keyboard').jqxWindow('open');
				setTimeout(function(){	
					$("#search_field").focus();
				},300);
				def.resolve();	
			},100);
			return def.promise();
		}
		
		var NumpadKeyboardReason = function(form_name){
			var def = $.Deferred();
			populateNumpadKeyboardReason(form_name)
			.then(function(){
				$('#keyboard_reason').jkeyboard({
				  layout: "english",
				  input: $('#search_field')
				});
				def.resolve();
			});
			return def.promise();
		}
		/*End Keyboard*/

		
		$scope.OpenDrawer = function(){
			$("#OpenDrawerfunction").attr("disabled", true);
			var postdata ="FunctionButton=OpenDrawer";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'OpenDrawer';
					NumpadPasscode('open_cash_drawer')
					.then(function(){
						WindowPopupPasscode('Open Cash Drawer')
						.then(function(){
							$("#number_field").focus();
						})
					})
				}else{
					posData.OpenDrawerReason()
					.success(function(opendrawerdata){
						if(opendrawerdata.reason == true){
							NumpadKeyboardReason('opendrawer_reason')
							.then(function(){
								WindowPopupKeyboardReason('Reason');
							})
						}else{
							$.blockUI({ css: { 
								border: '2px solid #fff',
								padding: '15px', 
								backgroundColor: '#210e66', 
								'-webkit-border-radius': '10px', 
								'-moz-border-radius': '10px', 
								opacity: 1, 
								color: '#fff',
								fontSize: '20px' 
							}, message: 'Checking Printer connection...' });
							posData.CashDrawerPrinterCheck()
							.success(function(data){
								if(data.success == true){
									if(data.print != true){
										PrinterProblemDefaultMessage('open_cash_drawer');
									}
									setTimeout($.unblockUI, 100); 
								}else{
									$("#dialog-numpad-passcode").jqxWindow('close');
								}
							})
						}
					})
				}
			})	
			setTimeout(function(){
				$("#OpenDrawerfunction").attr("disabled", false);
			},1000);
		};
		
		var cashier_unique_open_drawer = 0;
		$(document).on('submit', '#open_cash_drawer', function(e){
			e.preventDefault();
			var CardRead = $("#number_field").val();
			var CRP = new CardReaderParser(CardRead);
			if(CRP.converted){
				var passcode = CRP.converted;//$("#number_field").val();
				var hashpasscode = CryptoJS.MD5(passcode);
				var postdata ="passcode="+hashpasscode;
					postdata+="&FunctionButton="+$scope.FunctionButton;
				posData.EnterPassCode(postdata)
				.success(function(data){
					if(data.success == true){
						if(data.login == true){
							cashier_unique_open_drawer = data.userid;
							posData.OpenDrawerReason()
							.success(function(opendrawerdata){
								if(opendrawerdata.reason == true){
									NumpadKeyboardReason('opendrawer_reason')
									.then(function(){
										WindowPopupKeyboardReason('Reason');
									})
									$("#dialog-numpad-passcode").jqxWindow('close');
								}else{
									//$('body').block({ message: 'Checking Printer connection...' });
									$.blockUI({ css: { 
										border: '2px solid #fff',
										padding: '15px', 
										backgroundColor: '#210e66', 
										'-webkit-border-radius': '10px', 
										'-moz-border-radius': '10px', 
										opacity: 1, 
										color: '#fff',
										fontSize: '20px' 
									}, message: 'Checking Printer connection...' });
									$("#dialog-numpad-passcode").jqxWindow('close');
									posData.CashDrawerPrinterCheck()
									.success(function(data){
										if(data.success == true){
											if(data.print != true){
												PrinterProblemDefaultMessage('open_cash_drawer');
											}
											//$('body').unblock();
											setTimeout($.unblockUI, 100);
										}else{
											$("#dialog-numpad-passcode").jqxWindow('close');
										}
									})
								}
							})
						}else{
							$("#dialog-numpad-passcode").jqxWindow('close');
							NumpadAlertOk('open_cash_drawer', data.msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('open_cash_drawer', data.msg)
						.then(function(){
							WindowPopupAlert('Passcode Error');
						})
					}
					$("#passcode_numpad").html('');
				})
			}else{
				$("#dialog-numpad-passcode").jqxWindow('close');
				var msg = "Passcode cannot be empty";
				NumpadAlertOk('open_cash_drawer', msg)
				.then(function(){
					WindowPopupAlert('Passcode Error');
				})
			}
		})

		$(document).on('submit', '#opendrawer_reason', function(event){
			event.preventDefault();
			var postdata ="Reason="+$("#search_field").val();
				postdata+="&UserId="+cashier_unique_open_drawer;
			posData.CashDrawerReasonSave(postdata)
			.success(function(data){
				//$('body').block({ message: 'Checking Printer connection...' });
				$.blockUI({ css: { 
					border: '2px solid #fff',
					padding: '15px', 
					backgroundColor: '#210e66', 
					'-webkit-border-radius': '10px', 
					'-moz-border-radius': '10px', 
					opacity: 1, 
					color: '#fff',
					fontSize: '20px' 
				}, message: 'Checking Printer connection...' });
				$("#dialog-numpad-passcode").jqxWindow('close');
				var postdata ="UserId="+cashier_unique_open_drawer;
				posData.CashDrawerPrinterCheck(postdata)
				.success(function(data){
					if(data.success == true){
						if(data.print != true){
							PrinterProblemDefaultMessage('open_cash_drawer');
						}
						//$('body').unblock();
						setTimeout($.unblockUI, 100); 
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
					}
				})
				$("#dialog-numpad-keyboard").jqxWindow('close');
				cashier_unique_open_drawer = 0;
			})
		})


		var populateAlertProcess = function(form_name, msg){
			var def = new $.Deferred();
			setTimeout(function(){
				$("#dialog-process").append('<div id="process_container" style="background: #144766; color:#EEE;"></div>')
				$("#process_container").html('');
				$("#process_container").append(''+
					'<form id="'+form_name+'">'+
						'<h4 id="alert-msg">'+msg+'</h4>'+
					'</form>'+
				'');
				def.resolve();
			},100);
			return def.promise();
		}

        var NumpadPromptAlertProcess = function(form, msg){ 
			var def = $.Deferred();
			populateAlertProcess(form, msg)
			.then(function(){
				def.resolve();
			});
			return def.resolve();
		}

		var WindowPopupAlertProcess = function(title){
			var def = $.Deferred();
			setTimeout(function(){
				$("#dialog-process").jqxWindow({
					height: 245,
					width: 350,
					title: title,
					isModal: true,
					theme: 'darkblue',
					showCloseButton: false,
					showAnimationDuration: 0,
					closeAnimationDuration: 0
				});
				$('#dialog-process').jqxWindow('open');
				def.resolve();	
			},100);
			return def.promise();
		}
		
		$scope.CheckPrint = function(){
			$("#CheckPrintfunction").attr("disabled", true);
			var printmsg = "Printing receipt"+"<br/>";
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: printmsg }); 

			posData.GetCurrentReceiptHeader()
			.success(function(data){
				GetPrinterDefault()
				.then(function(result){
					if(result[0]){
						if(result[1] > 0){
							CheckPrinterStatus(result[2], result[3], result[4])
							.then(function(result){
								if(result){
									ProcessPrintReceipt()
									.then(function(){
										setTimeout($.unblockUI, 100); 
										$('#dialog-process').jqxWindow('close');
									})
								}else{
									PrinterProblemDefaultMessage('printer_check');
									setTimeout($.unblockUI, 100); 
									$('#dialog-process').jqxWindow('close');
								}
							})
						}else{
							ProcessPrintReceipt()
							.then(function(){
								setTimeout($.unblockUI, 100); 
								$('#dialog-process').jqxWindow('close');
							})
						}
					}else{
						var msg = "No Default printer set.";
						NumpadAlertOk('print_check_notify', msg)
						.then(function(){
							WindowPopupAlert('Print Check');
						})
						setTimeout($.unblockUI, 100); 
						$('#dialog-process').jqxWindow('close');
					}
				})
			}).then(function(){
				setTimeout(function(){
					$("#CheckPrintfunction").attr("disabled", false);
					$("#barcode_search").focus();
				},1000);
			})
		}
		
		$(document).on('submit', '#CheckPrintKitchen', function(e){
			e.preventDefault();
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Find working printer Please wait...' });
			posData.GetCurrentReceiptHeader()
			.success(function(jsondata){
				var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
				posData.KitchenPrintReceipt(postdata)
				.success(function(data){
					setTimeout($.unblockUI, 100);
				})
			})
			$("#dialog-numpad-alert").jqxWindow("close");
		})
		
		var AllPriceWindow = function(ItemUnique, Description){
			var def = $.Deferred();
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#dialog-numpad-all-price").jqxWindow({
				height: 330,
				minWidth: 510,
				title: 'PRICE LEVEL | ' +ItemUnique +" "+Description,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			setTimeout(function(){
				$('#dialog-numpad-all-price').jqxWindow('open');	
				def.resolve();
			},100);
			return def.promise();
		}
		
		var ItemInformation = [];
		var ItemPriceQtyArray = [];
		$scope.orderedItem = function(Unique, ItemUnique, Description, ListPrice, Discount){
			ItemInformation = [];
			ItemInformation.push(Unique, ItemUnique, Description, ListPrice, Discount);
			var postdata = "ItemUnique="+ItemUnique;
			posData.ItemPriceLevelChange(postdata)	
			.success(function(data){
				$scope.item_price_level = data[0];
				$scope.ordered_item_rdunique = Unique;
				$scope.ordered_item_unique = ItemUnique;
				if(data[0].QuestionUnique > 0){
					$scope.BtnEditGroupWhen = false;
				}else if(data[0].QuestionUnique != null){
					$scope.BtnEditGroupWhen = true;
				}else{
					$scope.BtnEditGroupWhen = false;
				}
				AllPriceWindow(ItemUnique, Description);
			})
		}

		var ite_price_field = '';
		$scope.item_price = function(field){
			ite_price_field = field;
			$("#item_price").attr("disabled", true);
			var postdata ="FunctionButton=DiscountItem";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'DiscountItem';
					NumpadPasscode('item_discount_passcode')
					.then(function(){
						WindowPopupPasscode('Discount '+field)
						.then(function(){
							$("#number_field").focus();
						})
					})
					$("#dialog-numpad-all-price").jqxWindow('close');
					$("#item_price").attr("disabled", false);
				}else{
					var ItemSelInfo 	= $(".selected").attr('id');
					var ItemCanDiscount = ItemSelInfo.split("=")[12];
					var ItemDescription = ItemSelInfo.split("=")[13];
					if(ItemCanDiscount == 0){
						var msg = ItemDescription+ " cannot be discounted";
						NumpadAlertOk('price_change_failed', msg)
						.then(function(){
							WindowPopupAlert('Info');
							$("#item_price").attr("disabled", false);
						})

						return;
					}

					var NewPrice = +$scope.item_price_level[field];
					var RDUnique = $scope.ordered_item_rdunique;
					var ItemUnique = $scope.ordered_item_unique;
					var postdata ="ReceiptDetailsUnique="+RDUnique;
						postdata+="&NewPrice="+NewPrice;
					posData.SellBelowCostPage(postdata)
					.success(function(data){
						if(data.NewPrice < data.OldPrice){
							populateSellBelowCostWindow(data.html)
							.then(function(){
								WindowBelowCost(data.Description);
								$("#dialog-numpad-all-price").jqxWindow('close');
							})
						}else{
							var postDataPriceChange="Unique="+RDUnique;
								postDataPriceChange+="&NewPrice="+NewPrice;
							posData.PriceChange(postDataPriceChange)
							.success(function(data){
								ReloadInformation();
								setTimeout(function(){
									$("#item_price").attr("disabled", false);
								},1000);
								$('#dialog-numpad-all-price').jqxWindow('close');
							})
						}
					})
				}
			})
		}

		$(document).on('submit','#item_discount_passcode', function(e){
			e.preventDefault();
			var CardRead = $("#number_field").val();
			var CRP = new CardReaderParser(CardRead);
			if(CRP.converted){
				var passcode = CRP.converted;
				var hashpasscode = CryptoJS.MD5(passcode);
				var postdata ="passcode="+hashpasscode;
					postdata+="&FunctionButton="+$scope.FunctionButton;
				posData.EnterPassCode(postdata)
				.success(function(data){
					if(data.success == true){
						if(data.login == true){
							var ItemSelInfo 	= $(".selected").attr('id');
							var ItemCanDiscount = ItemSelInfo.split("=")[12];
							var ItemDescription = ItemSelInfo.split("=")[13];
							if(ItemCanDiscount == 0){
								var msg = ItemDescription+ " cannot be discounted";
								NumpadAlertOk('price_change_failed', msg)
								.then(function(){
									WindowPopupAlert('Info');
									$("#ItemInlineDiscountListfunction").attr("disabled", false);
								})
								$("#dialog-numpad-passcode").jqxWindow('close')
								return;
							}

							var NewPrice = +$scope.item_price_level[ite_price_field];
							var RDUnique = $scope.ordered_item_rdunique;
							var ItemUnique = $scope.ordered_item_unique;
							var postdata ="ReceiptDetailsUnique="+RDUnique;
								postdata+="&NewPrice="+NewPrice;
							posData.SellBelowCostPage(postdata)
							.success(function(data){
								if(data.NewPrice < data.OldPrice){
									populateSellBelowCostWindow(data.html)
									.then(function(){
										WindowBelowCost(data.Description);
										$("#dialog-numpad-all-price").jqxWindow('close');
									})
								}else{
									var postDataPriceChange="Unique="+RDUnique;
										postDataPriceChange+="&NewPrice="+NewPrice;
									posData.PriceChange(postDataPriceChange)
									.success(function(data){
										ReloadInformation();
										setTimeout(function(){
											$("#item_price").attr("disabled", false);
										},1000);
										$('#dialog-numpad-all-price').jqxWindow('close');
									})
								}
							})

						}else{
							$("#dialog-numpad-passcode").jqxWindow('close');
							NumpadAlertOk('item_discount_info', data.msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('item_discount_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}

					$("#dialog-numpad-passcode").jqxWindow('close');
				})
			}else{
				$("#dialog-numpad-passcode").jqxWindow('close');
				var msg = "Passcode cannot be empty";
				NumpadAlertOk('item_discount_info', msg)
				.then(function(){
					WindowPopupAlert('Info');
				})
			}
		})

		/*
		$scope.item_price1 = function(){
			$("#item_price1").attr("disabled", true);
			var RDUnique = $scope.ordered_item_rdunique;
			var ItemUnique = $scope.ordered_item_unique;
			var postDataPriceChange="Unique="+RDUnique;
			postDataPriceChange+="&NewPrice="+$scope.item_price_level.price1;
			posData.PriceChange(postDataPriceChange)
			.success(function(data){
				ReloadInformation();
				setTimeout(function(){
					$("#item_price1").attr("disabled", false);
				},1000);
				$('#dialog-numpad-all-price').jqxWindow('close');
			})
		}

		$scope.item_price2 = function(){
			$("#item_price2").attr("disabled", true);
			var RDUnique = $scope.ordered_item_rdunique;
			var ItemUnique = $scope.ordered_item_unique;
			var postDataPriceChange="Unique="+RDUnique;
			postDataPriceChange+="&NewPrice="+$scope.item_price_level.price2;
			posData.PriceChange(postDataPriceChange)
			.success(function(data) {
				ReloadInformation();
				setTimeout(function(){
					$("#item_price2").attr("disabled", false);
				},1000);
				$('#dialog-numpad-all-price').jqxWindow('close');
			})
		}

		$scope.item_price3 = function(){
			$("#item_price3").attr("disabled", true);
			var RDUnique = $scope.ordered_item_rdunique;
			var ItemUnique = $scope.ordered_item_unique;
			var postDataPriceChange="Unique="+RDUnique;
			postDataPriceChange+="&NewPrice="+$scope.item_price_level.price3;
			posData.PriceChange(postDataPriceChange)
			.success(function(data) {
				ReloadInformation();
				setTimeout(function(){
					$("#item_price3").attr("disabled", false);
				},1000);
				$('#dialog-numpad-all-price').jqxWindow('close');
			})
		}

		$scope.item_price4 = function(){
			$("#item_price4").attr("disabled", true);
			var RDUnique = $scope.ordered_item_rdunique;
			var ItemUnique = $scope.ordered_item_unique;
			var postDataPriceChange="Unique="+RDUnique;
			postDataPriceChange+="&NewPrice="+$scope.item_price_level.price4;
			posData.PriceChange(postDataPriceChange)
			.success(function(data) {
				ReloadInformation();
				setTimeout(function(){
					$("#item_price4").attr("disabled", false);
				},1000);
				$('#dialog-numpad-all-price').jqxWindow('close');
			})
		}

		$scope.item_price5 = function(){
			$("#item_price5").attr("disabled", true);
			var RDUnique = $scope.ordered_item_rdunique;
			var ItemUnique = $scope.ordered_item_unique;
			var postDataPriceChange="Unique="+RDUnique;
			postDataPriceChange+="&NewPrice="+$scope.item_price_level.price5;
			posData.PriceChange(postDataPriceChange)
			.success(function(data) {
				ReloadInformation();
				setTimeout(function(){
					$("#item_price5").attr("disabled", false);
				},1000);
				$('#dialog-numpad-all-price').jqxWindow('close');
			})
		}
		*/

		$scope.PriceLevel = function(){
			$("#PriceLevelfunction").attr("disabled", true);
			//NumpadAllItemPriceLevel()
			//.then(function(){
				WindowPopupAllItemPriceLevel();
			//})
			setTimeout(function(){
				$("#PriceLevelfunction").attr("disabled", false);
			},1000);
		}

		$scope.all_item = function(field){
			var postdata="newprice="+field;
			posData.PriceChangeAll(postdata)
			.success(function(){
				ReloadInformation();
				$("#all_item_price_level").jqxWindow("close");
				GlobalItemUnique.Unique = 0;
			})
		}


		$scope.all_item_price1 = function(price){
			var postdata="newprice="+price;
			posData.PriceChangeAll(postdata)
			.success(function(){
				ReloadInformation();
				/*
				LoadOrderedItemList();
				LoadTax();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				LoadTotals()
				.then(function(){
					POSTotal()
					.then(function(){
						PoleDisplayTotal();
					});
				});
				*/
				$("#all_item_price_level").jqxWindow("close");
				GlobalItemUnique.Unique = 0;
			})
		}

		$scope.all_item_price2 = function(price){
			var postdata="newprice="+price;
			posData.PriceChangeAll(postdata)
			.success(function(){
				ReloadInformation();
				/*
				LoadOrderedItemList();
				LoadTax();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				
				LoadTotals()
				.then(function(){
					POSTotal()
					.then(function(){
						PoleDisplayTotal();
					});
				});
				*/
				$("#all_item_price_level").jqxWindow("close");
			})
		}

		$scope.all_item_price3 = function(price){
			var postdata="newprice="+price;
			posData.PriceChangeAll(postdata)
			.success(function(){
				ReloadInformation();
				/*
				LoadOrderedItemList();
				LoadTax();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				LoadTotals()
				.then(function(){
					POSTotal()
					.then(function(){
						PoleDisplayTotal();
					});
				});
				*/
				$("#all_item_price_level").jqxWindow("close");
			})
		}

		$scope.all_item_price4 = function(price){
			var postdata="newprice="+price;
			posData.PriceChangeAll(postdata)
			.success(function(){
				ReloadInformation();
				/*
				LoadOrderedItemList();
				LoadTax();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				
				LoadTotals()
				.then(function(){
					POSTotal()
					.then(function(){
						PoleDisplayTotal();
					});
				});
				*/
				$("#all_item_price_level").jqxWindow("close");
			})
		}

		$scope.all_item_price5 = function(price){
			var postdata="newprice="+price;
			posData.PriceChangeAll(postdata)
			.success(function(){
				ReloadInformation();
				/*
				LoadOrderedItemList();
				LoadTax();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				
				LoadTotals()
				.then(function(){
					POSTotal()
					.then(function(){
						PoleDisplayTotal();
					});
				});
				*/
				$("#all_item_price_level").jqxWindow("close");
			})
		}

		$scope.AkamaiPOSRefresh = function(){
			$window.location.href = '';
		}

		/*
		$scope.EnabledEditButton = function(){
			$scope.EditCustomerSaveDisabled = false;
			$scope.EditCustomerWhenClose = 1;
		}

		$scope.EditConfirmSaveCancel = function(){
			$scope.EditCustomerSaveDisabled = false;
			$scope.EditCustomerDefaultButtons = true;
			$scope.EditCustomerWhenCloseSaveChanges = false;
			$scope.EditCustomerWhenDelete = false;
			$('#editTabs').jqxTabs({ selectedItem: 0 });
			$('#tab1').unblock();
			$('#tab2').unblock();
			$('#tab3').unblock();
		}

		$scope.EnableAddCustomerSaveButton = function(){
			$scope.AddCustomerSaveDisabled = false;
			$scope.AddCustomerWhenClose = 1;
		}
		*/

		/*
		$scope.CustomerForm = function(){
			$http({
				method:'get',
				url: api_url+'customer/list'
			}).success(function(data){
				$scope.searchCustomergridSettings = {
					source: {
						localdata: data.rows
					}
				}
			}).then(function(){
				//dialogCustomerForm.setTitle("Customer");
				//dialogCustomerForm.open();
				$("#CustomerList-Modal").modal('show');
				setTimeout(function(){
					$("#customer-search input.jqx-input").focus();
				}, 100);
			})
			$window.location = base_url + "pos/pointofsale/customer";
		}
		*/
		
		/*
		$scope.searchCustomerRowClick = function(event){
			var args = event.args;
			var index = args.index;
			var row = args.row;
			GlobalCustomer = row.Unique;
			GlobalCustomerName = row.FirstName + " " + row.LastName;
			$scope.CustomerOkWhen = false;
			$scope.CustomerEditWhen = false;
		}
		
		
		$scope.SelectCustomer = function(){
			posData.InstantNewSale()
			.success(function(data){
				if(data.success == true){
					$scope.newsaleid = data.NewSaleId;	
				}
			 }).then(function(){

				var postData="selcustomervalue="+GlobalCustomer;
				postData+="&selcustomerlabel="+GlobalCustomerName;
				posData.TransCustomer(postData)
				.success(function(data){
					GetSelectedCustomer();
					$scope.CustomerOkWhen = true;
					$scope.CustomerEditWhen = true;
					$("#customer-search").jqxDataTable('clearFilters');
					dialogCustomerForm.close();
				})	

			 })
		}
		*/

		/*
		$scope.CustomerFormClose = function(){
			$scope.CustomerOkWhen = true;
			$scope.CustomerEditWhen = true;
			//GlobalCustomer = null;
			$("#customer-search").jqxDataTable('clearFilters');
			dialogCustomerForm.close();
		}
		*/
		
		$scope.RemoveCustomer = function(){
			$http({
				method: 'post',
				url: base_url+"pos/pointofsale/remove-customer"
			}).success(function(data){
				if(data.success){
					load_data(data);
					$scope.customer = {
						selected: 'Guest',
						id: ''
					}
					GlobalCustomer = null;
					GlobalCustomerName = '';
					$scope.RemoveCustomerWhen = false;
					$("#CustomerSelectedUnique").val(null);
					LoadEverything();
				}else{
					if(data.alert){
						var msg = data.msg;
						NumpadAlertClose('remove_customer_fail', msg)
						.then(function(){
							WindowPopupAlert('Alert message')
						});
					}
				}
			})
		}

		/*
		var CustomerPurchases = function(id){
			var def = $.Deferred();
			var postdata="customerid="+id;
			posData.CustomerPurchases(postdata)
			.success(function(data){
				
				var source = {
					dataType: "json",
					localdata: data
				};
				var dataAdapter = new $.jqx.dataAdapter(source);
				$("#purchase_history").jqxDataTable({
					source: dataAdapter
				})
				
				$scope.purchase_history = {
					source: {
						localdata: data
					}
				}
				def.resolve();
			})
			return def.resolve();
		}
		*/
		/*
		$scope.CustomerLink = function(){
			var result = $scope.customer.id;
			$window.location = base_url + 'pos/pointofsale/customer';
		}
		*/

		var CatArray = [];
		var ItemHoldArray = [];
		var TempAddItemList = [];
		var SubMenuItemSource = {
			datatype: "json",
			datafields: [
				{ name: 'Unique', type: 'int' },
				{ name: 'Description', type: 'string' },
				{ name: 'Quantity', type: 'int'},
				{ name: 'QuestionUnique', type: 'int'},
			], 
			localdata: TempAddItemList
		};
		var dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);

	/*
	*@param string title
	*@param boolean method
	*@param string info
	*@param array data
	*/
	var QuantityNumpadUse = 1; //By Default is Popup
	var GridShowHide = 1;
	var Question = function(title, method, info, ItemUnique){
		var Title = '';
		var Display = 'block';
		var GridDisplay = 'block';
		var NumpadDisplay = 'none';
		TempItem.push(ItemUnique);
		TempAddItem.push(ItemUnique);
		TempAddItemCompare.push(ItemUnique);
		NumpadItemSubMenu()
		.then(function(){
			
			Title = "ID:"+ItemUnique+" | "+ItemDescription;
			var postdata="ItemUnique="+ItemUnique;
			posData.LoadQuestions(postdata)
			.success(function(load_question){
				Title = "ID:"+ItemUnique+" | "+load_question.ItemTitle;
			
				QuantityNumpadUse = load_question.Setting;
				GridShowHide = load_question.GridShowHide;
				
				for(var i = 0; i < load_question.arrcat.length; i++){
					CatArray.push({"QuestionUnique":load_question.arrcat[i].QuestionUnique, "Min":load_question.arrcat[i].Min, "Max": load_question.arrcat[i].Max, "Count": 0, "QuestionName": load_question.arrcat[i].QuestionName, "Current": load_question.arrcat[i].Max});
				}
				if(QuantityNumpadUse == 0){
					Display = 'none';
					NumpadDisplay = 'block';
				}

				if(GridShowHide == 0){
					GridDisplay = 'none';
				}
				$("#QuestionView").append(load_question.html);
				$("#QuestionView").append("<div style='margin-top: 10px; overflow:auto; width: 100%; float:left; display:"+GridDisplay+"'>"+
												"<div style='float:left; width:350px; height:300px;'>"+
													"<div id='jqxlistbox'></div>"+
												"</div>"+
												"<div style='float:left; width:150px; height:300px; border'>"+
													"<input type='button' id='ClearAllItem' class='btn-sub-menu-clear-all' value='Clear All' style='height:80px; width:80px; color:#000; /*margin: 10px 0 10px 60px;*/' />"+
													"<input type='button' id='SubMenuQuantity' class='btn-sub-menu-clear-all' value='Quantity' style='height:80px; width:80px; display:"+Display+"; color:#000; /*margin: 10px 0 10px 60px;*/' />"+
													"<textarea id='AddingItems' rows='10' cols='40' style='color:#000; display:none;'></textarea>"+
												"</div>"+
												"<div class='modifier_numpad_qty' style='float:left; width:205px; height:auto; border: 6px solid #00304d; display:"+NumpadDisplay+";'>"+
													load_question.Numpad+
												"</div>"+
											"</div>");
				
				$("#QuestionView").append(''+
				'<form id="item_sub_menu_form">'+
					'<input type="text" id="test_input" class="hdfield" style="display:none;">'+
					'<div id="keyboard_submenu"></div>'+
				'</form>');
				$('#keyboard_submenu').hdkeyboard({
					layout: "item_sub_menu",
					input: $("#test_input")
				});

				TempItemListRef.push({"Unique":ItemUnique, "Description":load_question.ItemTitle, "Price": load_question.ItemPrice, "Quantity": 1, "QuestionUnique": 0});
				ItemHoldArray = [];//Clear array first
				ItemHoldArray.push({"Unique":ItemUnique, "Description":load_question.ItemTitle, "Price": load_question.ItemPrice, "Quantity": 1});
				$("#AddingItems").val(JSON.stringify(CatArray));
				$(".modifier_numpad_qty.hdnumpad .hdline ul li").attr('style', 'height: 49px; !important');
			}).then(function(){
				//$("#numpadQtyInput").jqxNumberInput({ width: '206px', height: '40px', inputMode: 'simple', decimalDigits:0, spinButtons: false });
				$('#popupQtySubMenu').hdkeyboard({
					layout: "custom1",
					input: $('#Qty_field')
				})

				$("#jqxlistbox").jqxGrid({
					width: 330,
					height: 290,
					source: dataAdapterSubMenu,
					showstatusbar: true,
					statusbarheight: 30,
					showAggregates: true,
					columnsresize: true,
					columns: [
						{ text: 'Unique', datafield: 'Unique', hidden: true },
						{ text: 'Qty', datafield: 'Quantity', width: 50, cellsalign: 'right',
							aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(0);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							}
						},
						{ text: 'Description', datafield: 'Description', width: 280},
						{ text: 'QuestionUnique', datafield: 'QuestionUnique', hidden: true },
					]
				});
						
				$("#jqxlistbox").on('rowclick', function (event) {
					var args = event.args;
					// row's bound index.
					var boundIndex = args.rowindex;
					// row's visible index.
					var visibleIndex = args.visibleindex;
					// right click.
					var rightclick = args.rightclick; 
					// original event.
					var ev = args.originalEvent;   
					
					var row = $(this).jqxGrid('getrowdata', boundIndex);
					var QUnique = row.QuestionUnique;
					var Unique = row.Unique;

					var qty = 0;
					var newqty = 0;
					qty = TempAddItemList[boundIndex]['Quantity'];
					newqty = (qty-1);
					if(newqty >= 1){
						TempItemListRef[(boundIndex+1)]['Quantity'] = (qty-1);
						TempAddItemList[boundIndex]['Quantity'] = (qty-1);
						$("span#"+Unique + ".QUnique"+QUnique).text(qty-1);
					}else if(newqty == 0){
						TempItemListRef.splice((boundIndex+1), 1);
						TempAddItemList.splice(boundIndex, 1);
						$("span#"+Unique + ".QUnique"+QUnique).text('');
					}
					
					var newcount = 0;
					for(var i = 0; i < CatArray.length; i++){
						if(CatArray[i].QuestionUnique == QUnique){//Compare Question Unique from Array to Listbox
							var ActQty = CatArray[i].Count; //Get Actual Count from Array
							if(ActQty >= 1){ //If Actual Qty is greater than or equal to 1
								CatArray[i].Count = (ActQty - 1); //Subtract Count to Actual Qty
								CatArray[i].Current = parseInt(CatArray[i].Current) + 1;
								if(CatArray[i].Max != 0){
									var calculation = (CatArray[i].Min - CatArray[i].Count);
									if(calculation > 0){
										$("."+CatArray[i].QuestionUnique).text("Remain "+ (CatArray[i].Min - CatArray[i].Count));
									}else{
										$("."+CatArray[i].QuestionUnique).text("Remain "+ 0);
									}

									var calculation2 = 	(CatArray[i].Max - CatArray[i].Count);
									if(calculation2 > 0){
										$(".Cur"+CatArray[i].QuestionUnique).text("Current "+ (CatArray[i].Max - CatArray[i].Count));
									}else{
										$(".Cur"+CatArray[i].QuestionUnique).text("Current "+ 0);
									}
								}

							}else{
								CatArray[i].Count = 0; //Else set Count to 0
								$("."+CatArray[i].QuestionUnique).text("Remain "+ CatArray[i].Min);
							}	
						}
					}
					
					$("#AddingItems").val(JSON.stringify(TempItemListRef));	
					SubMenuItemSource = {
						localdata: TempAddItemList
					}
					dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);	
					$("#jqxlistbox").jqxGrid({
						source: dataAdapterSubMenu
					});
				});
			})
			
			WindowPopupSubMenu(Title, 'item_sub_menu_form')
			.then(function(){
				setTimeout(function(){
					$("#Qty_field").focus();
					$("#Qty_field").select();
				},100);
			})
			
		})
	}

	var QuestionEdit = function(title, method, info, ItemUnique, html, GridShowHide){
		var Title = '';
		var Display = 'block';
		var NumpadDisplay = 'none';
		TempItem.push(ItemUnique);
		TempAddItem.push(ItemUnique);
		TempAddItemCompare.push(ItemUnique);
		NumpadItemSubMenu()
		.then(function(){
			var postdata="ItemUnique="+ItemUnique;
			posData.LoadQuestions(postdata)
			.success(function(load_question){
				Title = "ID:"+ItemUnique+" | "+load_question.ItemTitle;
				QuantityNumpadUse = load_question.Setting;
				//GridShowHide = load_question.GridShowHide;
				if(QuantityNumpadUse == 0){
					Display = 'none';
					NumpadDisplay = 'block';
				}

				if(GridShowHide == 0){
					GridDisplay = 'none;';
				}else{
					GridDisplay = 'block;';
				}



				$("#QuestionView").append(html);
				$("#QuestionView").append("<div style='margin-top: 10px; overflow:auto; width: 100%; float:left; display:"+GridDisplay+"'>"+
												"<div style='float:left; width:250px; height:300px;'>"+
													"<div id='jqxlistbox'></div>"+
												"</div>"+
												"<div style='float:left; width:170px; height:300px; border'>"+
													"<input type='button' id='ClearAllItem' class='btn-sub-menu-clear-all' value='Clear All' style='height:80px; width:80px; color:#000; margin: 10px 0 10px 60px;' />"+
													"<input type='button' id='SubMenuQuantity' class='btn-sub-menu-clear-all' value='Quantity' style='height:80px; width:80px; display:"+Display+"; color:#000; margin: 10px 0 10px 60px;' />"+
													"<textarea id='AddingItems' rows='10' cols='40' style='color:#000; display:none;'></textarea>"+
												"</div>"+
												"<div style='float:left; width:205px; height:330px; border: 6px solid #00304d; display:"+NumpadDisplay+"'>"+
													load_question.Numpad+
												"</div>"+
											"</div>");
				$("#QuestionView").append(''+
				'<form id="edit_item_sub_menu_form">'+
					'<input type="text" id="test_input" class="hdfield" style="display:none;">'+
					'<div id="keyboard_submenu"></div>'+
				'</form>');
				$('#keyboard_submenu').hdkeyboard({
					layout: "item_sub_menu",
					input: $("#test_input")
				});

				//TempItemListRef.push({"Unique":ItemUnique, "Description":load_question.ItemTitle, "Price": load_question.ItemPrice, "Quantity": 1, "QuestionUnique": 0});
				ItemHoldArray = [];//Clear array first
				ItemHoldArray.push({"Unique":ItemUnique, "Description":load_question.ItemTitle, "Price": load_question.ItemPrice, "Quantity": 1});
				//$("#AddingItems").val(JSON.stringify(TempItemListRef));	
				$("#AddingItems").val(JSON.stringify(CatArray));	
			}).then(function(){
				$('#popupQtySubMenu').hdkeyboard({
					layout: "custom1",
					input: $('#Qty_field')
				})

				$("#jqxlistbox").jqxGrid({
					width: 260,
					height: 290,
					source: dataAdapterSubMenu,
					showstatusbar: true,
					statusbarheight: 30,
					showAggregates: true,
					columnsresize: true,
					columns: [
						{ text: 'Unique', datafield: 'Unique', hidden: true },
						{ text: 'Qty', datafield: 'Quantity', width: 40, cellsalign: 'right',
							aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(0);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							}
						},
						{ text: 'Description', datafield: 'Description', width: 220 },
						{ text: 'QuestionUnique', datafield: 'QuestionUnique', hidden: true },
					]
				});
				
				$("#jqxlistbox").on('rowclick', function (event) {
					var args = event.args;
					// row's bound index.
					var boundIndex = args.rowindex;
					// row's visible index.
					var visibleIndex = args.visibleindex;
					// right click.
					var rightclick = args.rightclick; 
					// original event.
					var ev = args.originalEvent;   
					
					var row = $(this).jqxGrid('getrowdata', boundIndex);
				
					var Unique = row.Unique;
					var QUnique = row.QuestionUnique;
					
					var qty = 0;
					var newqty = 0;
					qty = TempAddItemList[boundIndex]['Quantity'];
					newqty = (qty-1);
					if(newqty >= 1){
						TempItemListRef[(boundIndex+1)]['Quantity'] = (qty-1);
						TempAddItemList[boundIndex]['Quantity'] = (qty-1);
						$("span#"+Unique +".QUnique"+QUnique).text(qty-1);
					}else if(newqty == 0){
						TempItemListRef.splice((boundIndex+1), 1);
						TempAddItemList.splice(boundIndex, 1);
						$("span#"+Unique+".QUnique"+QUnique).text('');
					}
					
					var row = $(this).jqxGrid('getrowdata', boundIndex);
					var QUnique = row.QuestionUnique;
					var newcount = 0;
					for(var i = 0; i < CatArray.length; i++){
						if(CatArray[i].QuestionUnique == QUnique){//Compare Question Unique from Array to Listbox
							var ActQty = CatArray[i].Count; //Get Actual Count from Array
							if(ActQty >= 1){ //If Actual Qty is greater than or equal to 1
								CatArray[i].Count = (ActQty - 1); //Subtract Count to Actual Qty
								CatArray[i].Current = parseInt(CatArray[i].Current) + 1;
								if(CatArray[i].Max != 0){
									var calculation = (CatArray[i].Min - CatArray[i].Count);
									if(calculation > 0){
										$("."+CatArray[i].QuestionUnique).text("Remain "+ (CatArray[i].Min - CatArray[i].Count));
									}else{
										$("."+CatArray[i].QuestionUnique).text("Remain "+ 0);
									}

									var calculation2 = 	(CatArray[i].Max - CatArray[i].Count);
									if(calculation2 > 0){
										$(".Cur"+CatArray[i].QuestionUnique).text("Current "+ (CatArray[i].Max - CatArray[i].Count));
									}else{
										$(".Cur"+CatArray[i].QuestionUnique).text("Current "+ 0);
									}
								}
							}else{
								CatArray[i].Count = 0; //Else set Count to 0
								$("."+CatArray[i].QuestionUnique).text("Remain "+ CatArray[i].Min);
							}	
						}
					}
					
					$("#AddingItems").val(JSON.stringify(TempItemListRef));	
					SubMenuItemSource = {
						localdata: TempAddItemList
					}
					dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);	
					$("#jqxlistbox").jqxGrid({
						source: dataAdapterSubMenu
					});
				});
				WindowPopupSubMenu(Title, 'edit_item_sub_menu_form')
				.then(function(){
					setTimeout(function(){
						$("#Qty_field").focus();
						$("#Qty_field").select();
					},100);
				})
			})
		})
	}

	$(document).on("click", "#SubMenuQuantity", function(e){
		e.preventDefault();
		NumpadQuantity('submenu_quantity')
		.then(function(){
			WindowPopupQuantity()
			.then(function(){
				setTimeout(function(){
					$("#quantity_field").jqxNumberInput('focus');
					var input = $('#quantity_field input')[0];
					if('selectionStart' in input) {
						input.setSelectionRange(0, 0);
						$("#quantity_field").select();
					}else{
						var range = input.createTextRange();
						range.collapse(true);
						range.moveEnd('character', 0);
						range.moveStart('character', 0);
						range.select();
					}
					$("#quantity_field input").select();
				},100)
				//$("#quantity_field").val(0);
				//$("#quantity_field").focus();
				//setTimeout(function(){
				//	$("#quantity_field").select();
				//},100);
			})
		})
	})

	var QtyBuffer = Array({"Quantity": 0});
	$(document).on('submit', "#submenu_quantity", function(e){
		e.preventDefault();
		QtyBuffer = [];
		QtyBuffer.push({"Quantity": $("#quantity_field").val()});
		$("#quantity_numpad").html('');
		$("#dialog-numpad-quantity").jqxWindow('close');
	})

	var $this;
	var TempAddItemCompare = [];
	var CheckPrompt_submenu = function(post, item_unique, process){
		var def = $.Deferred();
		var MethodUnique 	= OpenItemArray[0];
		var Method 			= MethodUnique.split('=')[0];
		var Unique 			= MethodUnique.split('=')[1];
		var Desc   			= MethodUnique.split('=')[2];
		var Price  			= MethodUnique.split('=')[3];
		var PromptP			= MethodUnique.split('=')[4];
		var PromptD			= MethodUnique.split('=')[5];
		var Min	   			= MethodUnique.split('=')[6];
		var Max	   			= MethodUnique.split('=')[7];
		var CatUnique		= MethodUnique.split('=')[8];
		var ItemCounted		= MethodUnique.split('=')[9];
		var Cost 			= MethodUnique.split('=')[10];
		var CostExtra 	 	= MethodUnique.split('=')[11];
		var CostFreight  	= MethodUnique.split('=')[12];
		var CostDuty 		= MethodUnique.split('=')[13];
		var Custom1 		= MethodUnique.split('=')[14];
		var Item 			= MethodUnique.split('=')[15];
		var EBT 		  	= (MethodUnique.split('=')[16] ? MethodUnique.split('=')[16] : null);
		var Points 			= (MethodUnique.split('=')[17] ? MethodUnique.split('=')[17] : null);
		var Price1 			= MethodUnique.split('=')[18];
		var ListPrice 		= MethodUnique.split('=')[19];
		var Exist 			= false;
		var ExistDesc		= '';
		var ExistPrice 		= 0.00;
		var inputQty = QtyBuffer[0].Quantity;
		if(process == 1){ //Process 1 Enter new Description
			if(PromptD == 1){
				for(var i = 0; i < TempItemListRef.length; i++){
					if(TempItemListRef[i]['Unique'] == Unique){
						ExistDesc = TempItemListRef[i]['Description'];
						Exist = true;
					}
				}

				if($("#"+Unique).text() == 1){
					if(Exist){
						$scope.CustomItemUnique = item_unique;
						NumpadKeyboard('custom_item_submenu_form')
						.then(function(){
							WindowPopupKeyboard("ID "+item_unique+" | "+Desc)
							.then(function(){
								setTimeout(function(){
									$("#search_field").val(ExistDesc);
									$("#search_field").focus();
								},100);
							})
						})	
					}else{
						$scope.CustomItemUnique = item_unique;
						NumpadKeyboard('custom_item_submenu_form')
						.then(function(){
							WindowPopupKeyboard("ID "+item_unique+" | "+Desc)
							.then(function(){
								$("#search_field").focus();
							})
						})	
					}
				}else{
					for(var i = 0; i < CatArray.length; i++){
						if(CatArray[i].QuestionUnique == CatUnique){
							if(inputQty > 0){
								if(inputQty > CatArray[i].Current){
									var msg = "Quantity not added since maximum exceeded.";
									NumpadAlertClose ('qty_exceed_max', msg)
									.then(function(){
										WindowPopupAlert("Info");
									})
								}else{
									if(Exist){
										$scope.CustomItemUnique = item_unique;
										NumpadKeyboard('custom_item_submenu_form')
										.then(function(){
											WindowPopupKeyboard("ID "+item_unique+" | "+Desc)
											.then(function(){
												setTimeout(function(){
													$("#search_field").val(ExistDesc);
													$("#search_field").focus();
												},100);
											})
										})	
									}else{
										$scope.CustomItemUnique = item_unique;
										NumpadKeyboard('custom_item_submenu_form')
										.then(function(){
											WindowPopupKeyboard("ID "+item_unique+" | "+Desc)
											.then(function(){
												$("#search_field").focus();
											})
										})	
									}
								}
							}else{
								if(CatArray[i].Current == 0 && Min != 0){
									var msg = "Quantity not added since maximum exceeded.";
									NumpadAlertClose ('qty_exceed_max', msg)
									.then(function(){
										WindowPopupAlert("Info");
									})
								}else{
									if(Exist){
										$scope.CustomItemUnique = item_unique;
										NumpadKeyboard('custom_item_submenu_form')
										.then(function(){
											WindowPopupKeyboard("ID "+item_unique+" | "+Desc)
											.then(function(){
												setTimeout(function(){
													$("#search_field").val(ExistDesc);
													$("#search_field").focus();
												},100);
											})
										})	
									}else{
										$scope.CustomItemUnique = item_unique;
										NumpadKeyboard('custom_item_submenu_form')
										.then(function(){
											WindowPopupKeyboard("ID "+item_unique+" | "+Desc)
											.then(function(){
												$("#search_field").focus();
											})
										})	
									}
								}
							}
						}
					}
				}
			}else{
				if(PromptP == 1){
					for(var i = 0; i < TempItemListRef.length; i++){
						if(TempItemListRef[i]['Unique'] == Unique){
							ExistPrice = TempItemListRef[i]['Price'];
						}
					}
					
					if($("#"+Unique).text() == 1){
						$scope.CustomItemUnique = item_unique;
						$scope.price_itemno = Item;
						$scope.price_desc = Desc;
						NumpadPrice('SubMenuItemPrice')
						.then(function(){
							WindowPopupPrice('Item Price')
							.then(function(){
								$("#open_numpad_price").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#open_numpad_price input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#open_numpad_price input").select();
								},100)
								//$("#number_field").val(ExistPrice);
								//$("#number_field").focus();
								//setTimeout(function(){
								//	$("#number_field").select();
								//},100);
							})
						})
					}else{
						for(var i = 0; i < CatArray.length; i++){
							if(CatArray[i].QuestionUnique == CatUnique){
								if(inputQty > 0){
									if(inputQty > CatArray[i].Current){
										var msg = "Quantity not added since maximum exceeded.";
										NumpadAlertClose ('qty_exceed_max', msg)
										.then(function(){
											WindowPopupAlert("Info");
										})
									}else{
										$scope.CustomItemUnique = item_unique;
										$scope.price_itemno = Item;
										$scope.price_desc = Desc;
										NumpadPrice('SubMenuItemPrice')
										.then(function(){
											WindowPopupPrice('Item Price')
											.then(function(){
												$("#open_numpad_price").jqxNumberInput('focus');
												setTimeout(function(){
													var input = $('#open_numpad_price input')[0];
													if('selectionStart' in input) {
														input.setSelectionRange(0, 0);
													}else{
														var range = input.createTextRange();
														range.collapse(true);
														range.moveEnd('character', 0);
														range.moveStart('character', 0);
														range.select();
													}
													$("#open_numpad_price input").select();
												},100)
												//$("#number_field").val(ExistPrice);
												//$("#number_field").focus();
												//setTimeout(function(){
												//	$("#number_field").select();
												//},100);
											})
										})
									}
								}else{
									if(CatArray[i].Current == 0 && Min != 0){
										var msg = "Quantity not added since maximum exceeded.";
										NumpadAlertClose ('qty_exceed_max', msg)
										.then(function(){
											WindowPopupAlert("Info");
										})
									}else{
										$scope.CustomItemUnique = item_unique;
										$scope.price_itemno = Item;
										$scope.price_desc = Desc;
										NumpadPrice('SubMenuItemPrice')
										.then(function(){
											WindowPopupPrice('Item Price')
											.then(function(){
												$("#open_numpad_price").jqxNumberInput('focus');
												setTimeout(function(){
													var input = $('#open_numpad_price input')[0];
													if('selectionStart' in input) {
														input.setSelectionRange(0, 0);
													}else{
														var range = input.createTextRange();
														range.collapse(true);
														range.moveEnd('character', 0);
														range.moveStart('character', 0);
														range.select();
													}
													$("#open_numpad_price input").select();
												},100)
												//$("#number_field").val(ExistPrice);
												//$("#number_field").focus();
												//setTimeout(function(){
												//	$("#number_field").select();
												//},100);
											})
										})
									}
								}
							}
						}
					}
					
				}else{
					def.resolve(false);
				}
			}
		}else if(process == 2){ //Process 2 Enter new Price
			if(PromptP == 1){
				for(var i = 0; i < TempItemListRef.length; i++){
					if(TempItemListRef[i]['Unique'] == Unique){
						ExistPrice = TempItemListRef[i]['Price'];
					}
				}

				$scope.CustomItemUnique = item_unique;
				$scope.price_itemno = Item;
				$scope.price_desc = Desc;
				NumpadPrice('SubMenuKeyboardItemPrice')
				.then(function(){
					WindowPopupPrice('Item Price')
					.then(function(){
						$("#open_numpad_price").jqxNumberInput('focus');
						setTimeout(function(){
							var input = $('#open_numpad_price input')[0];
							if('selectionStart' in input) {
								input.setSelectionRange(0, 0);
							}else{
								var range = input.createTextRange();
								range.collapse(true);
								range.moveEnd('character', 0);
								range.moveStart('character', 0);
								range.select();
							}
							$("#open_numpad_price input").select();
						},100)
						//$("#number_field").val(ExistPrice);
						//$("#number_field").focus();
						//setTimeout(function(){
						//	$("#number_field").select();
						//},100);
					})
				})
			
				def.resolve(true);
			}else{
				def.resolve(false);
			}
		}
		return def.promise();
	}



	var CheckPrompt_submenu_old_1 = function(post, item_unique, process){
		var def = $.Deferred();
		var MethodUnique 	= OpenItemArray[0];
		var Method 			= MethodUnique.split('=')[0];
		var Unique 			= MethodUnique.split('=')[1];
		var Desc   			= MethodUnique.split('=')[2];
		var Price  			= MethodUnique.split('=')[3];
		var PromptP			= MethodUnique.split('=')[4];
		var PromptD			= MethodUnique.split('=')[5];
		var Min	   			= MethodUnique.split('=')[6];
		var Max	   			= MethodUnique.split('=')[7];
		var CatUnique		= MethodUnique.split('=')[8];
		var ItemCounted		= MethodUnique.split('=')[9];
		var Cost 			= MethodUnique.split('=')[10];
		var CostExtra 	 	= MethodUnique.split('=')[11];
		var CostFreight  	= MethodUnique.split('=')[12];
		var CostDuty 		= MethodUnique.split('=')[13];
		var Custom1 		= MethodUnique.split('=')[14];
		var Item 			= MethodUnique.split('=')[15];
		var EBT 		  	= (MethodUnique.split('=')[16] ? MethodUnique.split('=')[16] : null);
		var Points 			= (MethodUnique.split('=')[17] ? MethodUnique.split('=')[17] : null);
		var Price1 			= MethodUnique.split('=')[18];
		var ListPrice 		= MethodUnique.split('=')[19];
		var Exist 			= false;
		var ExistDesc		= '';
		var ExistPrice 		= 0.00;
		var inputQty = QtyBuffer[0].Quantity;
		posData.Prompt(post)
		.success(function(data){
			if(data.success == true){
				if(process == 1){ //Process 1 Enter new Description
					if(data.PromptDesc == 1){
						for(var i = 0; i < TempItemListRef.length; i++){
							if(TempItemListRef[i]['Unique'] == Unique){
								ExistDesc = TempItemListRef[i]['Description'];
								Exist = true;
							}
						}

						if($("#"+Unique).text() == 1){
							if(Exist){
								$scope.CustomItemUnique = item_unique;
								NumpadKeyboard('custom_item_submenu_form')
								.then(function(){
									WindowPopupKeyboard("ID "+item_unique+" | "+data.Description)
									.then(function(){
										setTimeout(function(){
											$("#search_field").val(ExistDesc);
											$("#search_field").focus();
										},100);
									})
								})	
							}else{
								$scope.CustomItemUnique = item_unique;
								NumpadKeyboard('custom_item_submenu_form')
								.then(function(){
									WindowPopupKeyboard("ID "+item_unique+" | "+data.Description)
									.then(function(){
										$("#search_field").focus();
									})
								})	
							}
						}else{
							for(var i = 0; i < CatArray.length; i++){
								if(CatArray[i].QuestionUnique == CatUnique){
									if(inputQty > 0){
										if(inputQty > CatArray[i].Current){
											var msg = "Quantity not added since maximum exceeded.";
											NumpadAlertClose ('qty_exceed_max', msg)
											.then(function(){
												WindowPopupAlert("Info");
											})
										}else{
											if(Exist){
												$scope.CustomItemUnique = item_unique;
												NumpadKeyboard('custom_item_submenu_form')
												.then(function(){
													WindowPopupKeyboard("ID "+item_unique+" | "+data.Description)
													.then(function(){
														setTimeout(function(){
															$("#search_field").val(ExistDesc);
															$("#search_field").focus();
														},100);
													})
												})	
											}else{
												$scope.CustomItemUnique = item_unique;
												NumpadKeyboard('custom_item_submenu_form')
												.then(function(){
													WindowPopupKeyboard("ID "+item_unique+" | "+data.Description)
													.then(function(){
														$("#search_field").focus();
													})
												})	
											}
										}
									}else{
										if(CatArray[i].Current == 0 && Min != 0){
											var msg = "Quantity not added since maximum exceeded.";
											NumpadAlertClose ('qty_exceed_max', msg)
											.then(function(){
												WindowPopupAlert("Info");
											})
										}else{
											if(Exist){
												$scope.CustomItemUnique = item_unique;
												NumpadKeyboard('custom_item_submenu_form')
												.then(function(){
													WindowPopupKeyboard("ID "+item_unique+" | "+data.Description)
													.then(function(){
														setTimeout(function(){
															$("#search_field").val(ExistDesc);
															$("#search_field").focus();
														},100);
													})
												})	
											}else{
												$scope.CustomItemUnique = item_unique;
												NumpadKeyboard('custom_item_submenu_form')
												.then(function(){
													WindowPopupKeyboard("ID "+item_unique+" | "+data.Description)
													.then(function(){
														$("#search_field").focus();
													})
												})	
											}
										}
									}
								}
							}
						}
					}else{
						if(data.PromptPrice == 1){
							for(var i = 0; i < TempItemListRef.length; i++){
								if(TempItemListRef[i]['Unique'] == Unique){
									ExistPrice = TempItemListRef[i]['Price'];
								}
							}
							
							if($("#"+Unique).text() == 1){
								$scope.CustomItemUnique = item_unique;
								$scope.price_itemno = data.ItemNo;
								$scope.price_desc = data.Description;
								NumpadPrice('SubMenuItemPrice')
								.then(function(){
									WindowPopupPrice('Item Price')
									.then(function(){
										$("#open_numpad_price").jqxNumberInput('focus');
										setTimeout(function(){
											var input = $('#open_numpad_price input')[0];
											if('selectionStart' in input) {
												input.setSelectionRange(0, 0);
											}else{
												var range = input.createTextRange();
												range.collapse(true);
												range.moveEnd('character', 0);
												range.moveStart('character', 0);
												range.select();
											}
											$("#open_numpad_price input").select();
										},100)
										//$("#number_field").val(ExistPrice);
										//$("#number_field").focus();
										//setTimeout(function(){
										//	$("#number_field").select();
										//},100);
									})
								})
							}else{
								for(var i = 0; i < CatArray.length; i++){
									if(CatArray[i].QuestionUnique == CatUnique){
										if(inputQty > 0){
											if(inputQty > CatArray[i].Current){
												var msg = "Quantity not added since maximum exceeded.";
												NumpadAlertClose ('qty_exceed_max', msg)
												.then(function(){
													WindowPopupAlert("Info");
												})
											}else{
												$scope.CustomItemUnique = item_unique;
												$scope.price_itemno = data.ItemNo;
												$scope.price_desc = data.Description;
												NumpadPrice('SubMenuItemPrice')
												.then(function(){
													WindowPopupPrice('Item Price')
													.then(function(){
														$("#open_numpad_price").jqxNumberInput('focus');
														setTimeout(function(){
															var input = $('#open_numpad_price input')[0];
															if('selectionStart' in input) {
																input.setSelectionRange(0, 0);
															}else{
																var range = input.createTextRange();
																range.collapse(true);
																range.moveEnd('character', 0);
																range.moveStart('character', 0);
																range.select();
															}
															$("#open_numpad_price input").select();
														},100)
														//$("#number_field").val(ExistPrice);
														//$("#number_field").focus();
														//setTimeout(function(){
														//	$("#number_field").select();
														//},100);
													})
												})
											}
										}else{
											if(CatArray[i].Current == 0 && Min != 0){
												var msg = "Quantity not added since maximum exceeded.";
												NumpadAlertClose ('qty_exceed_max', msg)
												.then(function(){
													WindowPopupAlert("Info");
												})
											}else{
												$scope.CustomItemUnique = item_unique;
												$scope.price_itemno = data.ItemNo;
												$scope.price_desc = data.Description;
												NumpadPrice('SubMenuItemPrice')
												.then(function(){
													WindowPopupPrice('Item Price')
													.then(function(){
														$("#open_numpad_price").jqxNumberInput('focus');
														setTimeout(function(){
															var input = $('#open_numpad_price input')[0];
															if('selectionStart' in input) {
																input.setSelectionRange(0, 0);
															}else{
																var range = input.createTextRange();
																range.collapse(true);
																range.moveEnd('character', 0);
																range.moveStart('character', 0);
																range.select();
															}
															$("#open_numpad_price input").select();
														},100)
														//$("#number_field").val(ExistPrice);
														//$("#number_field").focus();
														//setTimeout(function(){
														//	$("#number_field").select();
														//},100);
													})
												})
											}
										}
									}
								}
							}
							
						}else{
							def.resolve();
						}
					}
				}else if(process == 2){ //Process 2 Enter new Price
					if(data.PromptPrice == 1){
						for(var i = 0; i < TempItemListRef.length; i++){
							if(TempItemListRef[i]['Unique'] == Unique){
								ExistPrice = TempItemListRef[i]['Price'];
							}
						}
						$scope.CustomItemUnique = item_unique;
						$scope.price_itemno = data.ItemNo;
						$scope.price_desc = data.Description;
						NumpadPrice('SubMenuKeyboardItemPrice')
						.then(function(){
							WindowPopupPrice('Item Price')
							.then(function(){
								$("#open_numpad_price").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#open_numpad_price input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#open_numpad_price input").select();
								},100)
								//$("#number_field").val(ExistPrice);
								//$("#number_field").focus();
								//setTimeout(function(){
								//	$("#number_field").select();
								//},100);
							})
						})
					
						def.resolve(true);
					}else{
						def.resolve(false);
					}
				}
			}else if(data.success == false){
				def.resolve(false);
			}
		})
		return def.promise();
	}

	$(document).on("click", "#setQtySubMenu", function(e){
		e.preventDefault();
		QtyBuffer = Array({"Quantity": $("#Qty_field").val()});
	})

	var findWithAttr = function(array, attr, value) {
		for(var i = 0; i < array.length; i += 1) {
			if(array[i][attr] === value) {
				return i;
			}
		}
		return -1;
	}

	var MasterReferenceArray = [];
	var TempItemListRef = [];
	var OpenItemArray = []; //added 12-29-16 - For Open Item button
	var PriceQtyItemArray = []; //added 10-09-17 For new query with Item Price by Qty
	$(document).on('click', '#QuestionView button', function(){
		$(".btnitems_question").attr('disabled', true);
		//PriceQtyItemArray = [];
		OpenItemArray = [];
		var ModifierArray 	= [];
		var MethodUnique 	= $(this).attr('id');
		var MethodQuestion 	= MethodUnique.split('.')[0];
		var MethodQval 		= MethodUnique.split('.')[1];
		var Method 			= MethodUnique.split('=')[0];
		var Unique 			= MethodUnique.split('=')[1];
		var Desc   			= MethodUnique.split('=')[2];
		var Price  			= MethodUnique.split('=')[3];
		var PromptP			= MethodUnique.split('=')[4];
		var PromptD			= MethodUnique.split('=')[5];
		var Min	   			= MethodUnique.split('=')[6];
		var Max	   			= MethodUnique.split('=')[7];
		var CatUnique		= MethodUnique.split('=')[8];
		var ItemCounted		= MethodUnique.split('=')[9];
		var Cost 			= MethodUnique.split('=')[10];
		var CostExtra 	 	= MethodUnique.split('=')[11];
		var CostFreight  	= MethodUnique.split('=')[12];
		var CostDuty 		= MethodUnique.split('=')[13];
		var Custom1 		= MethodUnique.split('=')[14];
		var Item 			= MethodUnique.split('=')[15];
		var EBT 		  	= (MethodUnique.split('=')[16] ? MethodUnique.split('=')[16] : null);
		var Points 			= (MethodUnique.split('=')[17] ? MethodUnique.split('=')[17] : null);
		var Price1 			= MethodUnique.split('=')[18];
		var ListPrice 		= MethodUnique.split('=')[19];
		//--Added 10/09/2017
		//--Parent Item
		var PriceQty1 		= MethodUnique.split('=')[20];
		var Price1 			= MethodUnique.split('=')[21];
		var PriceQty2 	 	= MethodUnique.split('=')[22];
		var Price2 			= MethodUnique.split('=')[23];
		var PriceQty3 		= MethodUnique.split('=')[24];
		var Price3 			= MethodUnique.split('=')[25];
		var PriceQty4 		= MethodUnique.split('=')[26];
		var Price4 			= MethodUnique.split('=')[27];
		var PriceQty5 		= MethodUnique.split('=')[28];
		var Price5 			= MethodUnique.split('=')[29];
		var DescriptionKitchen = MethodUnique.split('=')[30];

		console.log("DescriptionKitchen",DescriptionKitchen);

		if(MethodQuestion == 'QuestionCat'){
			ModifierArray = TempAddItemList.slice(); //-->Fixed Array count
			for(var i = 0; i < ModifierArray.length; i++){
				if(ModifierArray[i]["QuestionUnique"] == MethodQval){

					TempAddItemList.splice(0, 1);

					TempItemListRef.splice(1, 1);

					SubMenuItemSource = {
						localdata: TempAddItemList
					}
					dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);	
					$("#jqxlistbox").jqxGrid({
						source: dataAdapterSubMenu
					});

					$("span.QUnique"+MethodQval).text('');
				}
			}
		}

		if(Method == 'QuestionCat'){
			$(this).toggleClass('btnitems_question');
		}else if(Method == 'SubQuestionCat'){
			OpenItemArray.push(MethodUnique);
			var count = $("#"+Unique+ ".QUnique"+CatUnique).text();
			if(count == ''){
				count = 0;
			}
			
			for(var i = 0; i < CatArray.length; i++){
				if(CatArray[i].QuestionUnique == CatUnique){
					var SelCount = CatArray[i].Count;
					var inputQty = QtyBuffer[0].Quantity;
					var setQty = 0;
					var countdown = Min;
					var countdownMax = Max;
					var continues = false;
					var countMax = 0;
					var NewCount = 0;
					var putQty = 0;
					var curCount = 0;
					var curQty = 0;
					var currentCount = 0;
					var TotalQtyByQuestion = 0;
					if(inputQty > 0){
						if(Max != 0){//Max not equal to 0
							if(PromptP == 0 && PromptD == 0){
								if(inputQty > CatArray[i].Current){
									//Do nothing
									var msg = "Quantity not added since maximum exceeded.";
									NumpadAlertClose ('qty_exceed_max', msg)
									.then(function(){
										WindowPopupAlert("Info");
									})
								}else{
									if(PromptP == 0 && PromptD == 0){
										if(CatArray[i].Current > 0){
											//CatArray total Count by Question
											TotalQtyByQuestion = CatArray[i].Count;
											//Update Count inside the array.
											CatArray[i].Count = parseInt(SelCount) + parseInt(inputQty);
											//Get current count use for the label
											currentCount = (countdownMax - CatArray[i].Count);
											//Update Current inside the arrray.
											CatArray[i].Current = parseInt(currentCount);
											//Set Current Count Label
											$(".Cur"+CatUnique).text("Current "+ currentCount);
											//Condition to compute Remaining Label value.										
											if(CatArray[i].Count > Max){
												$("."+CatUnique).text("Remain "+ 0);
											}else{
												NewCount = (countdown - CatArray[i].Count);
												if(NewCount > 0){
													$("."+CatUnique).text("Remain "+ NewCount);
												}else if(NewCount <= 0){
													$("."+CatUnique).text("Remain "+ 0);
												}
												continues = true;
											}
										}
									}
								}
							}else{
								continues = true;
							}
						}else{ //Max is 0 (Unlimited)
							continues = true;
						}	
					}else{
						if(Max != 0){//Max not equal to 0
							if(PromptP == 0 && PromptD == 0){
								if(CatArray[i].Current == 0 && Min != 0){
									var msg = "Quantity not added since maximum exceeded.";
									NumpadAlertClose ('qty_exceed_max', msg)
									.then(function(){
										WindowPopupAlert("Info");
									})
								}else{
									if(PromptP == 0 && PromptD == 0){
										if(CatArray[i].Current > 0){
											CatArray[i].Count = parseInt(SelCount) + 1;
											currentCount = (countdownMax - CatArray[i].Count);
											CatArray[i].Current = parseInt(currentCount);
											$(".Cur"+CatUnique).text("Current "+ currentCount);
											if(CatArray[i].Count > Max){
												$("."+CatUnique).text("Remain "+ 0);
											}else{
												NewCount = (countdown - CatArray[i].Count);
												
												if(NewCount > 0){
													$("."+CatUnique).text("Remain "+ NewCount);
												}else if(NewCount <= 0){
													$("."+CatUnique).text("Remain "+ 0);
												}
												continues = true;
											}
										}else{
											if(CatArray[i].Current == 0 && CatArray[i].Max != 0 && CatArray[i].Count < Max){
												CatArray[i].Count = parseInt(SelCount) + 1;
												currentCount = (countdownMax - CatArray[i].Count);
												CatArray[i].Current = parseInt(currentCount);
												$(".Cur"+CatUnique).text("Current "+ currentCount);

												if(CatArray[i].Count > Max && CatArray[i].Current == 0){
													CatArray[i].Count = currentCount - 1;
													$("."+CatUnique).text("Remain "+ 0);
													$(".Cur"+CatUnique).text("Current "+ 0);
													var msg = "Quantity not added since maximum exceeded.";
													NumpadAlertClose ('qty_exceed_max', msg)
													.then(function(){
														WindowPopupAlert("Info");
													})
												}else{
													NewCount = (countdown - CatArray[i].Count);
													if(NewCount > 0){
														$("."+CatUnique).text("Remain "+ NewCount);
													}else if(NewCount <= 0){
														$("."+CatUnique).text("Remain "+ 0);
													}
													continues = true;
												}
											}else{
												$("."+CatUnique).text("Remain "+ 0);
												$(".Cur"+CatUnique).text("Current "+ 0);
												var msg = "Quantity not added since maximum exceeded.";
												NumpadAlertClose ('qty_exceed_max', msg)
												.then(function(){
													WindowPopupAlert("Info");
												})
											}
										}
									}else{
										continues = true;
									}
								}
							}else{
								continues = true;
							}	
						}else{//Max is 0 (Unlimited)
							continues = true;
						}
					}
				
					if(continues){
						var postdata="ItemUnique="+Unique;
						CheckPrompt_submenu(postdata, Unique, 1)
						.then(function(status){
							if(status == false){
								var Exist = false;
								var qty = 0;
								var AddQty = 0;
								
								for(var i = 0; i < TempItemListRef.length; i++){
									if(TempItemListRef[i]['Unique'] == Unique && TempItemListRef[i]["QuestionUnique"] == CatUnique){
										qty = TempItemListRef[i]['Quantity'];
										if(inputQty > 0){
											TempItemListRef[i]['Quantity'] = parseInt(inputQty) + parseInt(qty);
										}else{
											TempItemListRef[i]['Quantity'] = parseInt(qty) + 1;
										}

										Exist = true;
									}
								}

								qty = 0; //reset
								for(var i = 0; i < TempAddItemList.length; i++){
									if(TempAddItemList[i]['Unique'] == Unique && TempAddItemList[i]["QuestionUnique"] == CatUnique){
										$("#"+Unique + ".QUnique"+CatUnique).text(parseInt(count) + 1);
										qty = TempAddItemList[i]['Quantity'];
										if(inputQty > 0){
											TempAddItemList[i]['Quantity'] = parseInt(inputQty) + parseInt(qty);
										}else{
											TempAddItemList[i]['Quantity'] = parseInt(qty) + 1;
										}
									}
								}
								
								if(Exist == false){
									if(parseInt(inputQty) > 0){
										$("#"+Unique+ ".QUnique"+CatUnique).text(parseInt(count) + parseInt(inputQty)); 
										TempAddItemList.push({"Unique": Unique, "Description" : Desc, "Quantity": inputQty, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice, "DescriptionKitchen" : DescriptionKitchen});
										TempItemListRef.push({"Unique": Unique, "Description" : Desc, "Price": Price, "Quantity": inputQty, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice, "DescriptionKitchen" : DescriptionKitchen});
										ModifierArray.push({"Unique": Unique, "Description" : Desc, "Price": Price, "Quantity": inputQty, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice, "DescriptionKitchen" : DescriptionKitchen});
									}else{
										$("#"+Unique+ ".QUnique"+CatUnique).text(parseInt(count) + 1);
										TempAddItemList.push({"Unique": Unique, "Description" : Desc, "Quantity": 1, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice, "DescriptionKitchen" : DescriptionKitchen});
										TempItemListRef.push({"Unique": Unique, "Description" : Desc, "Price": Price, "Quantity": 1, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice, "DescriptionKitchen" : DescriptionKitchen});
										ModifierArray.push({"Unique": Unique, "Description" : Desc, "Price": Price, "Quantity": inputQty, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice, "DescriptionKitchen" : DescriptionKitchen})
									}

									PriceQtyItemArray.push({
										"Unique" : Unique,
										[parseFloat(PriceQty1).toFixed(2)] : parseFloat(Price1).toFixed(2), 
										[parseFloat(PriceQty2).toFixed(2)] : parseFloat(Price2).toFixed(2), 
										[parseFloat(PriceQty3).toFixed(2)] : parseFloat(Price3).toFixed(2), 
										[parseFloat(PriceQty4).toFixed(2)] : parseFloat(Price4).toFixed(2), 
										[parseFloat(PriceQty5).toFixed(2)] : parseFloat(Price5).toFixed(2)
									});

								}else{
									if(parseInt(inputQty) > 0){
										$("#"+Unique + ".QUnique"+CatUnique).text(parseInt(count) + parseInt(inputQty));
									}else{
										$("#"+Unique + ".QUnique"+CatUnique).text(parseInt(count) + 1); 
									} 
								}

								$("#AddingItems").val(JSON.stringify(CatArray));	
								
								SubMenuItemSource = {
									localdata: TempAddItemList
								}
								dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);

								$("#jqxlistbox").jqxGrid({
									source: dataAdapterSubMenu
								});
							}
						});
					}

					QtyBuffer = Array({"Quantity": 0});
					$("#Qty_field").val('');
					setTimeout(function(){
						$("#Qty_field").focus();
						$("#Qty_field").select();
					},100);
				}	
			}
		}
		setTimeout(function(){
			$(".btnitems_question").attr('disabled', false);
		},100);
	})
		
	$scope.EditGroup = function(){
		$("#EditGroup").attr("disabled", true);
		var ParentUniqueItem = GlobalItemUnique.Unique;
		var postdata = "ReceiptDetailsUnique="+GlobalItemUnique.Unique;
		var ItemUnique = 0;
		var CanEdit = 0;
		CatArray = [];
		TempItemListRef = [];
		TempAddItemList = [];
		ModifierArray = [];
		$http({
			method: 'POST',
			url: base_url + 'pos/pointofsale/edit-group-item',
			data: postdata,
			headers: {'Content-Type': 'application/x-www-form-urlencoded'}
		}).success(function(data){
			if(data.CanEditGroupItem == false){
				
				$.each(data.CatArray, function(index, value){
					CatArray.push({"QuestionUnique":value.QuestionUnique, "Min":value.Min,"Max": value.Max, "Count": value.Count, "QuestionName": value.QuestionName, "Current": value.Current})
				})

				$.each(data.TempItemListRef, function(index, value){
					TempItemListRef.push({"Unique": value.Unique, "Description" : value.Description, "Price":value.Price, "Quantity": value.Quantity, "QuestionUnique": value.QuestionUnique, "Cost" : value.Cost, "Cost_Extra" : value.Cost_Extra, "Cost_Freight" : value.Cost_Freight, "Cost_Duty" : value.Cost_Duty, "Custom1" : value.Custom1, "Item" : value.Item, "EBT" : value.EBT, "Points" : value.Points, "Price1" : value.Price1, "ListPrice" : value.Price1, "DescriptionKitchen" : value.DescriptionKitchen});
				})

				$.each(data.TempAddItemList, function(index, value){
					TempAddItemList.push({"Unique": value.Unique, "Description" : value.Description, "Quantity": value.Quantity, "QuestionUnique": value.QuestionUnique, "Cost" : value.Cost, "Cost_Extra" : value.Cost_Extra, "Cost_Freight" : value.Cost_Freight, "Cost_Duty" : value.Cost_Duty, "Custom1" : value.Custom1, "Item" : value.Item, "EBT" : value.EBT, "Points" : value.Points, "Price1" : value.Price1, "ListPrice" : value.Price1, "DescriptionKitchen" : value.DescriptionKitchen});
				})

				SubMenuItemSource = {
					localdata: data.TempAddItemList
				}
				dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
				ItemUnique = data.ItemUnique;

				console.log('showme',TempAddItemList);

				//CanEdit = data.CanEditGroupItem;

				QuestionEdit('', true, '', ItemUnique, data.html, data.GridShowHide);	
				setTimeout(function(){
					$("#EditGroup").attr("disabled", false);
				},100);
				$("#dialog-numpad-all-price").jqxWindow('close');
			}else{
				var msg = "Cannot edit Item since already printed.";
				NumpadAlertClose ('item_kitchen_printed', msg)
				.then(function(){
					WindowPopupAlert("Info");
				})
			}
		})
	}

	$(document).on("submit", "#custom_item_submenu_form", function(e){
		e.preventDefault();
		var MethodUnique 	= OpenItemArray[0];
		var Method 			= MethodUnique.split('=')[0];
		var Unique 			= MethodUnique.split('=')[1];
		var Desc   			= MethodUnique.split('=')[2];
		var Price  			= MethodUnique.split('=')[3];
		var PromptP			= MethodUnique.split('=')[4];
		var PromptD			= MethodUnique.split('=')[5];
		var Min	   			= MethodUnique.split('=')[6];
		var Max	   			= MethodUnique.split('=')[7];
		var CatUnique		= MethodUnique.split('=')[8];
		var ItemCounted		= MethodUnique.split('=')[9];
		var Cost 			= MethodUnique.split('=')[10];
		var CostExtra 	 	= MethodUnique.split('=')[11];
		var CostFreight  	= MethodUnique.split('=')[12];
		var CostDuty 		= MethodUnique.split('=')[13];
		var Custom1 		= MethodUnique.split('=')[14];
		var Item 			= MethodUnique.split('=')[15];
		var EBT 		  	= (MethodUnique.split('=')[16] ? MethodUnique.split('=')[16] : null);
		var Points 			= (MethodUnique.split('=')[17] ? MethodUnique.split('=')[17] : null);
		var Price1 			= MethodUnique.split('=')[18];
		var ListPrice 		= MethodUnique.split('=')[19];

		var Exist 			= false;
		var ItemUnique = $scope.CustomItemUnique;
		var ItemNote = $("#search_field").val();
		var postdata="ItemUnique="+ItemUnique;

		PriceQty.push({"Unique" : ItemUnique, "0.00":Price1});
		PriceQtyItemArray.push({"Unique" : ItemUnique, "0.00":Price1});

		if(ItemNote == ''){
			
		}else{
			for(var i = 0; i < TempItemListRef.length; i++){
				if(TempItemListRef[i]['Unique'] == Unique){
					TempItemListRef[i]['Description'] = ItemNote;
					Exist = true;
				}
			}

			for(var i = 0; i < TempAddItemList.length; i++){
				if(TempAddItemList[i]["Unique"] == Unique){
					TempAddItemList[i]['Description'] = ItemNote;
				}
			}

			if(Exist == false){
				TempAddItemList.push({"Unique": Unique, "Description" : ItemNote, "Quantity": 1, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice});
				TempItemListRef.push({"Unique": Unique, "Description" : ItemNote, "Price": Price, "Quantity": 1, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice});
			}
			
			CheckPrompt_submenu(postdata, ItemUnique, 2)
			.then(function(ans){
				if(ans == true){
					//Popup Numpad Price'
					//TempItemReference.push(ItemUnique+"="+ItemNote);
				}else{
					SubMenuItemSource = {
						localdata: TempAddItemList
					}
					dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
					$("#jqxlistbox").jqxGrid({
						source: dataAdapterSubMenu
					});
					//$this.toggleClass('btnitems_question_disabled');
					for(var i = 0; i < CatArray.length; i++){
						if(CatArray[i].QuestionUnique == CatUnique){
							var SelCount = CatArray[i].Count;
							var inputQty = QtyBuffer[0].Quantity;
							var setQty = 0;
							var countdown = Min;
							var countdownMax = Max;
							var continues = false;
							var countMax = 0;
							var NewCount = 0;
							var putQty = 0;
							var curCount = 0;
							var curQty = 0;
							var currentCount = 0;
							var TotalQtyByQuestion = 0;
							
							if(CatArray[i].Current > 0){
								CatArray[i].Count = parseInt(SelCount) + 1;
								currentCount = (countdownMax - CatArray[i].Count);
								CatArray[i].Current = parseInt(currentCount);
								$(".Cur"+CatUnique).text("Current "+ currentCount);
								if(CatArray[i].Count > Max){
									$("."+CatUnique).text("Remain "+ 0);
								}else{
									NewCount = (countdown - CatArray[i].Count);
									
									if(NewCount > 0){
										$("."+CatUnique).text("Remain "+ NewCount);
									}else if(NewCount <= 0){
										$("."+CatUnique).text("Remain "+ 0);
									}
									continues = true;
								}
							}else{
								CatArray[i].Count = parseInt(SelCount) + 1;
								currentCount = (countdownMax - CatArray[i].Count);
								CatArray[i].Current = parseInt(currentCount);
								$(".Cur"+CatUnique).text("Current "+ currentCount);

								NewCount = (countdown - CatArray[i].Count);
								if(NewCount > 0){
									$("."+CatUnique).text("Remain "+ NewCount);
								}else if(NewCount <= 0){
									$("."+CatUnique).text("Remain "+ 0);
								}
							}
						}
					}

					$("#"+Unique).text(1); 
				}
			})
			
			
			$("#price_numpad").html('');
			$("#custom_item_keyboard").html('');
			$("#dialog-numpad-keyboard").jqxWindow('close');
		}		
	})
	
	var RemoveTempAddItemProcess = function(ItemUnique){
		var def = $.Deferred();
		var index = TempAddItemCompare.indexOf(ItemUnique);
		if (index > -1) {
			var newTempAdd = TempAddItem[index];
			TempAddItem.splice(index, 1);
			TempAddItemCompare.splice(index, 1);
			def.resolve(newTempAdd);
		}else{
			var newTempAdd = '#'+ItemUnique;
			def.resolve(newTempAdd);
		}
		return def.promise();
	}
	
	$(document).on('submit', '#SubMenuItemPrice', function(e){
		e.preventDefault();
		var MethodUnique 	= OpenItemArray[0];
		var Method 			= MethodUnique.split('=')[0];
		var Unique 			= MethodUnique.split('=')[1];
		var Desc   			= MethodUnique.split('=')[2];
		var Price  			= MethodUnique.split('=')[3];
		var PromptP			= MethodUnique.split('=')[4];
		var PromptD			= MethodUnique.split('=')[5];
		var Min	   			= MethodUnique.split('=')[6];
		var Max	   			= MethodUnique.split('=')[7];
		var CatUnique		= MethodUnique.split('=')[8];
		var ItemCounted		= MethodUnique.split('=')[9];
		var Cost 			= MethodUnique.split('=')[10];
		var CostExtra 	 	= MethodUnique.split('=')[11];
		var CostFreight  	= MethodUnique.split('=')[12];
		var CostDuty 		= MethodUnique.split('=')[13];
		var Custom1 		= MethodUnique.split('=')[14];
		var Item 			= MethodUnique.split('=')[15];
		var EBT 		  	= (MethodUnique.split('=')[16] ? MethodUnique.split('=')[16] : null);
		var Points 			= (MethodUnique.split('=')[17] ? MethodUnique.split('=')[17] : null);
		var Price1 			= MethodUnique.split('=')[18];
		var ListPrice 		= MethodUnique.split('=')[19];
		var Exist 			= false;
		var ItemUnique = $scope.CustomItemUnique;
		var PriceVal = $("#number_field").val();
	
		for(var i = 0; i < TempItemListRef.length; i++){
			if(TempItemListRef[i]['Unique'] == Unique){
				TempItemListRef[i]['Price'] = PriceVal;
				Exist = true;
			}
		}

		if(Exist == false){
			TempAddItemList.push({"Unique": Unique, "Description" : Desc, "Quantity": 1, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice});
			TempItemListRef.push({"Unique": Unique, "Description" : Desc, "Price": PriceVal, "Quantity": 1, "QuestionUnique": CatUnique, "Cost" : Cost, "Cost_Extra" : CostExtra, "Cost_Freight" : CostFreight, "Cost_Duty" : CostDuty, "Custom1" : Custom1, "Item" : Item, "EBT" : EBT, "Points" : Points, "Price1" : Price1, "ListPrice" : ListPrice});
		}

		for(var i = 0; i < CatArray.length; i++){
			if(CatArray[i].QuestionUnique == CatUnique){
				var SelCount = CatArray[i].Count;
				var inputQty = QtyBuffer[0].Quantity;
				var setQty = 0;
				var countdown = Min;
				var countdownMax = Max;
				var continues = false;
				var countMax = 0;
				var NewCount = 0;
				var putQty = 0;
				var curCount = 0;
				var curQty = 0;
				var currentCount = 0;
				var TotalQtyByQuestion = 0;
				
				if(CatArray[i].Current > 0){
					CatArray[i].Count = parseInt(SelCount) + 1;
					currentCount = (countdownMax - CatArray[i].Count);
					CatArray[i].Current = parseInt(currentCount);
					$(".Cur"+CatUnique).text("Current "+ currentCount);
					if(CatArray[i].Count > Max){
						$("."+CatUnique).text("Remain "+ 0);
					}else{
						NewCount = (countdown - CatArray[i].Count);
						
						if(NewCount > 0){
							$("."+CatUnique).text("Remain "+ NewCount);
						}else if(NewCount <= 0){
							$("."+CatUnique).text("Remain "+ 0);
						}
						continues = true;
					}
				}else{
					CatArray[i].Count = parseInt(SelCount) + 1;
					currentCount = (countdownMax - CatArray[i].Count);
					CatArray[i].Current = parseInt(currentCount);
					$(".Cur"+CatUnique).text("Current "+ currentCount);

					NewCount = (countdown - CatArray[i].Count);
					if(NewCount > 0){
						$("."+CatUnique).text("Remain "+ NewCount);
					}else if(NewCount <= 0){
						$("."+CatUnique).text("Remain "+ 0);
					}
				}
			}
		}

		$("#"+Unique).text(1); 
		$("#".Unique).toggleClass('btnitems_question');
		$("#dialog-numpad-price").jqxWindow('close');
	})
	
	$(document).on('submit', '#SubMenuKeyboardItemPrice', function(e){
		e.preventDefault();
		var MethodUnique 	= OpenItemArray[0];
		var Method 			= MethodUnique.split('=')[0];
		var Unique 			= MethodUnique.split('=')[1];
		var Desc   			= MethodUnique.split('=')[2];
		var Price  			= MethodUnique.split('=')[3];
		var PromptP			= MethodUnique.split('=')[4];
		var PromptD			= MethodUnique.split('=')[5];
		var Min	   			= MethodUnique.split('=')[6];
		var Max	   			= MethodUnique.split('=')[7];
		var CatUnique		= MethodUnique.split('=')[8];
		var ItemCounted		= MethodUnique.split('=')[9];
		var Cost 			= MethodUnique.split('=')[10];
		var CostExtra 	 	= MethodUnique.split('=')[11];
		var CostFreight  	= MethodUnique.split('=')[12];
		var CostDuty 		= MethodUnique.split('=')[13];
		var Custom1 		= MethodUnique.split('=')[14];
		var Item 			= MethodUnique.split('=')[15];
		var EBT 		  	= (MethodUnique.split('=')[16] ? MethodUnique.split('=')[16] : null);
		var Points 			= (MethodUnique.split('=')[17] ? MethodUnique.split('=')[17] : null);
		var Price1 			= MethodUnique.split('=')[18];
		var ListPrice 		= MethodUnique.split('=')[19];
		var Exist 			= false;
		var ItemUnique 		= $scope.CustomItemUnique;
		var PriceVal 		= $("#open_numpad_price").val();

		if($("#"+Unique).text() == 1){

		}else{
			for(var i = 0; i < CatArray.length; i++){
				if(CatArray[i].QuestionUnique == CatUnique){
					var SelCount = CatArray[i].Count;
					var inputQty = QtyBuffer[0].Quantity;
					var setQty = 0;
					var countdown = Min;
					var countdownMax = Max;
					var continues = false;
					var countMax = 0;
					var NewCount = 0;
					var putQty = 0;
					var curCount = 0;
					var curQty = 0;
					var currentCount = 0;
					var TotalQtyByQuestion = 0;
					if(inputQty > 0){
						if(Max != 0){//Max not equal to 0
							if(inputQty > CatArray[i].Current){
								//Do nothing
								var msg = "Quantity not added since maximum exceeded.";
								NumpadAlertClose ('qty_exceed_max', msg)
								.then(function(){
									WindowPopupAlert("Info");
								})
							}else{
								if(CatArray[i].Current > 0){
									//CatArray total Count by Question
									TotalQtyByQuestion = CatArray[i].Count;
									//Update Count inside the array.
									CatArray[i].Count = parseInt(SelCount) + parseInt(inputQty);
									//Get current count use for the label
									currentCount = (countdownMax - CatArray[i].Count);
									//Update Current inside the array.
									CatArray[i].Current = parseInt(currentCount);
									//Set Current Count Label
									$(".Cur"+CatUnique).text("Current "+ currentCount);
									//Condition to compute Remaining Label value.										
									if(CatArray[i].Count > Max){
										$("."+CatUnique).text("Remain "+ 0);
									}else{
										NewCount = (countdown -  CatArray[i].Count);
										if(NewCount > 0){
											$("."+CatUnique).text("Remain "+ NewCount);
										}else if(NewCount <= 0){
											$("."+CatUnique).text("Remain "+ 0);
										}
										continues = true;
									}
								}
							}
						}else{ //Max is 0 (Unlimited)
							continues = true;
						}	
					}else{
						if(Max != 0){//Max not equal to 0
							if(CatArray[i].Current == 0 && Min != 0){
								var msg = "Quantity not added since maximum exceeded.";
								NumpadAlertClose ('qty_exceed_max', msg)
								.then(function(){
									WindowPopupAlert("Info");
								})
							}else{
								if(CatArray[i].Current > 0){
									CatArray[i].Count = parseInt(SelCount) + 1;
									currentCount = (countdownMax - CatArray[i].Count);
									CatArray[i].Current = parseInt(currentCount);
									$(".Cur"+CatUnique).text("Current "+ currentCount);
									if(CatArray[i].Count > Max){
										$("."+CatUnique).text("Remain "+ 0);
									}else{
										NewCount = (countdown - CatArray[i].Count);
										
										if(NewCount > 0){
											$("."+CatUnique).text("Remain "+ NewCount);
										}else if(NewCount <= 0){
											$("."+CatUnique).text("Remain "+ 0);
										}
										continues = true;
									}
								}else{
									if(CatArray[i].Current == 0 && CatArray[i].Max != 0 && CatArray[i].Count < Max){
										CatArray[i].Count = parseInt(SelCount) + 1;
										currentCount = (countdownMax - CatArray[i].Count);
										CatArray[i].Current = parseInt(currentCount);
										$(".Cur"+CatUnique).text("Current "+ currentCount);

										if(CatArray[i].Count > Max && CatArray[i].Current == 0){
											CatArray[i].Count = currentCount - 1;
											$("."+CatUnique).text("Remain "+ 0);
											$(".Cur"+CatUnique).text("Current "+ 0);
											var msg = "Quantity not added since maximum exceeded.";
											NumpadAlertClose ('qty_exceed_max', msg)
											.then(function(){
												WindowPopupAlert("Info");
											})
										}else{
											NewCount = (countdown - CatArray[i].Count);
											if(NewCount > 0){
												$("."+CatUnique).text("Remain "+ NewCount);
											}else if(NewCount <= 0){
												$("."+CatUnique).text("Remain "+ 0);
											}
											continues = true;
										}
									}else{
										$("."+CatUnique).text("Remain "+ 0);
										$(".Cur"+CatUnique).text("Current "+ 0);
										var msg = "Quantity not added since maximum exceeded.";
										NumpadAlertClose ('qty_exceed_max', msg)
										.then(function(){
											WindowPopupAlert("Info");
										})
									}
								}
							}	
						}else{//Max is 0 (Unlimited)
							continues = true;
						}
					}
				}
			}	
		}	
		for(var i = 0; i < TempItemListRef.length; i++){
			if(TempItemListRef[i]['Unique'] == Unique){
				TempItemListRef[i]['Price'] = PriceVal;
				Exist = true
			}
		}

		SubMenuItemSource = {
			localdata: TempAddItemList
		}
		dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
		$("#jqxlistbox").jqxGrid({
			source: dataAdapterSubMenu
		});

		$("#"+Unique).text(1); 
		$("#price_numpad").html('');
		$("#dialog-numpad-price").jqxWindow('close');
		$("#".Unique).toggleClass('btnitems_question');
	})

	//-->Modifier Add new items start
	$(document).on('click', '#item_sub_menu_form .button_proceed', function(e){
		e.preventDefault();
		var tempholdsave = [];
		var count = 1;
		var array_length = CatArray.length;
		var questions_required = [];
		QtyBuffer = Array({"Quantity": 0});
		for(var i = 0; i < CatArray.length; i++){
			if(CatArray[i].Count >= CatArray[i].Min){
				tempholdsave.push(CatArray[i].QuestionUnique);
			}else{
				questions_required.push(CatArray[i].QuestionName);
			}

			if(array_length == count){
				if(tempholdsave.length == CatArray.length){
					$('.button_proceed').click(function(){return false;});
					SaveSubMenuItems();
				}else{
					var counter = 1;
					var items_req = '';
					var msg = "";
					for(var y = 0; y < questions_required.length; y++){
						items_req += counter+". "+questions_required[y]+"<br/>";
						if(counter > 1){
							msg = "Please complete and select the Item(s) from Questions:"+"<br/><br/>";
						}else{
							msg = "Please complete and select the Item(s) from Question:"+"<br/><br/>";
						}
						counter++;
					}

					msg+= items_req;
					NumpadAlertClose ('menu_incomplete_items', msg)
					.then(function(){
						WindowPopupAlert("Info");
					})
				}
			}
			count++;
		}
	})

	var SaveSubMenuItems = function(){
		var postdata ="ParentItem="+encodeURIComponent(JSON.stringify(ModifierArray));
			postdata+="&SelectedItems="+encodeURIComponent(JSON.stringify(TempItemListRef));
			postdata+="&QuantityBefore="+ BEFOREQUANTITY;
			postdata+="&PriceQuantity="+JSON.stringify(PriceQtyItemArray);
		posData.SaveSelectedItemsList(postdata)
		.success(function(data){
			if(data.success == true){
				TempAddItem = [];
				TempAddItemCompare = [];
				TempItemReference = [];
				TempAddItemList = [];
				TempItemListRef = [];
				ModifierArray = [];
				OpenItemArray = [];
				CatArray = [];
				PriceQtyItemArray = [];
				PriceQty = [];
				BEFOREQUANTITY = 0;
				QtyBuffer = Array({"Quantity": 0});
				SubMenuItemSource = {
					localdata: []
				}
				dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
				$("#jqxlistbox").jqxGrid({
					source: dataAdapterSubMenu
				});
				$("#AddingItems").val(JSON.stringify(TempItemListRef));
				$("#QuestionView").html('');
				$("#price_numpad").html('');
				$("#barcode_search").attr("disabled", false);
				$("#barcode_search").focus();
				$("#dialog-numpad-sub-menu").jqxWindow('close');
			}
			load_data(data);
			PoleDisplay(data.ItemList[0].Unique);
		}).then(function(){
			// GetCustomerSave();
			setTimeout(function(){
				GetSelectedCustomer();
			},500);
			$scope.BtnPaymentWhen = false;
			// PoleDisplayTotal();
			Qquestion = 0;
			GlobalItemUnique.Unique = 0;
		})
	}//-->Modifier add menu item end 

	//-->Modifier edit menu item start	
	$(document).on('click', '#edit_item_sub_menu_form .button_proceed', function(e){
		e.preventDefault();
		var tempholdsave = [];
		var count = 1;
		var array_length = CatArray.length;
		var questions_required = [];
		QtyBuffer = Array({"Quantity": 0});
		for(var i = 0; i < CatArray.length; i++){
			if(CatArray[i].Count >= CatArray[i].Min){
				tempholdsave.push(CatArray[i].QuestionUnique);
			}else{
				questions_required.push(CatArray[i].QuestionName);
			}
			if(array_length == count){
				if(tempholdsave.length == CatArray.length){
					$('.button_proceed').click(function(){return false;});
					SaveEditItems()
					.then(function(){
						SaveSubMenuEditItems();
					})
				}else{
					var counter = 1;
					var items_req = '';
					var msg = "";
					for(var y = 0; y < questions_required.length; y++){
						items_req += counter+". "+questions_required[y]+"<br/>";
						if(counter > 1){
							msg = "Please complete and select the Item(s) from Questions:"+"<br/><br/>";
						}else{
							msg = "Please complete and select the Item(s) from Question:"+"<br/><br/>";
						}
						counter++;
					}

					msg+= items_req;
					NumpadAlertClose ('menu_incomplete_items', msg)
					.then(function(){
						WindowPopupAlert("Info");
					})
				}
			}
			count++;
		}
	});

	var SaveSubMenuEditItems = function(){
		var NewParentItem = [];
		NewParentItem.push(TempItemListRef[0]);
		var postdata ="ParentItem="+encodeURIComponent(JSON.stringify(NewParentItem));
			postdata+="&SelectedItems="+encodeURIComponent(JSON.stringify(TempItemListRef));
			postdata+="&QuantityBefore="+ BEFOREQUANTITY;
			postdata+="&PriceQuantity="+JSON.stringify(PriceQty);
		posData.SaveSelectedItemsList(postdata)
		.success(function(data){
			if(data.success == true){
				TempAddItem = [];
				TempAddItemCompare = [];
				TempItemReference = [];
				TempAddItemList = [];
				TempItemListRef = [];
				ModifierArray = [];
				OpenItemArray = [];
				CatArray = [];
				BEFOREQUANTITY = 0;
				QtyBuffer = Array({"Quantity": 0});
				SubMenuItemSource = {
					localdata: []
				}
				dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
				$("#jqxlistbox").jqxGrid({
					source: dataAdapterSubMenu
				});
				$("#AddingItems").val(JSON.stringify(TempItemListRef));
				$("#QuestionView").html('');
				$("#price_numpad").html('');
				$("#barcode_search").attr("disabled", false);
				$("#barcode_search").focus();
				$("#dialog-numpad-sub-menu").jqxWindow('close');
			}
			load_data(data);
			// GetCustomerSave();
			setTimeout(function(){
				GetSelectedCustomer();
			},500);
			$scope.BtnPaymentWhen = false;
			PoleDisplayTotal();
			Qquestion = 0;
			GlobalItemUnique.Unique = 0;
		})
	}//--> Modifer edit menu item end

	$(document).on('click', '#edit_item_sub_menu_form .button_q_cancel', function(e){
		e.preventDefault();
		// CatArray = [];
		// TempItemListRef = [];
		// TempAddItemList = [];
		// ModifierArray = [];
		// SubMenuItemSource = {
		// 	localdata: []
		// }
		// $("#dialog-numpad-sub-menu").jqxWindow("close");
		$("#QuestionView").html('');
		$("#price_numpad").html('');
		$("#custom_item_keyboard").html('');
		$("#dialog-numpad-sub-menu").jqxWindow('close');
		$("#barcode_search").attr("disabled", false);
		$("#barcode_search").focus();
		Qquestion = 0;
		TempAddItem = [];
		TempAddItemCompare = [];
		TempAddItemList = [];
		TempItemListRef = [];
		PriceQtyItemArray = []; //-->Modifier Menu
		PriceQty = []; //-->Menu Item
		CatArray = [];
		QtyBuffer = Array({"Quantity": 0});
		SubMenuItemSource = {
			localdata: []
		}
		dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
	})

	var SaveEditItems = function(){
		var def = $.Deferred();
		var postdata ="ParentItem="+encodeURIComponent(JSON.stringify(TempItemListRef[0]));
			postdata+="&SelectedItems="+encodeURIComponent(JSON.stringify(TempItemListRef));
			postdata+="&ReceiptDetailsUnique="+GlobalItemUnique.Unique;
			postdata+="&PriceQuantity="+JSON.stringify(PriceQty);
		posData.SaveEditSelectedItems(postdata)
		.success(function(data){
			def.resolve();
		})
		return def.promise();
	}

	$(document).on('click', '#item_sub_menu_form .button_q_cancel', function(e){
		e.preventDefault();
		$("#QuestionView").html('');
		$("#price_numpad").html('');
		$("#custom_item_keyboard").html('');
		$("#dialog-numpad-sub-menu").jqxWindow('close');
		$("#barcode_search").attr("disabled", false);
		$("#barcode_search").focus();
		Qquestion = 0;
		TempAddItem = [];
		TempAddItemCompare = [];
		TempAddItemList = [];
		TempItemListRef = [];
		PriceQtyItemArray = []; //-->Modifier Menu
		PriceQty = []; //-->Menu Item
		CatArray = [];
		QtyBuffer = Array({"Quantity": 0});
		SubMenuItemSource = {
			localdata: []
		}
		dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
	})

	/*	
	$(document).on('click', '.button_q_cancel', function(e){
		e.preventDefault();
		$("#QuestionView").html('');
		$("#price_numpad").html('');
		$("#custom_item_keyboard").html('');
		$("#dialog-numpad-sub-menu").jqxWindow('close');
		$("#barcode_search").attr("disabled", false);
		$("#barcode_search").focus();
		Qquestion = 0;
		TempAddItem = [];
		TempAddItemCompare = [];
		TempAddItemList = [];
		TempItemListRef = [];
		PriceQtyItemArray = []; //-->Modifier Menu
		PriceQty = []; //-->Menu Item
		CatArray = [];
		QtyBuffer = Array({"Quantity": 0});
		SubMenuItemSource = {
			localdata: []
		}
		dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
	})
	*/

	$(document).on('click', '#ClearAllItem', function(e){
		e.preventDefault();
		TempAddItem = [];
		TempAddItemCompare = [];
		TempAddItemList = [];
		TempItemListRef = [];
		var PriceQtyTemp = [];
		var PriceQtyItemArrayTemp = [];

		for(i = 0; i < PriceQty.length; i++){
			if(i == 0){
				PriceQtyTemp.push(PriceQty[i]);
			}
		}

		for(i = 0; i < PriceQtyItemArray.length; i++){
			if(i == 0){
				PriceQtyItemArrayTemp.push(PriceQtyItemArray[i]);
			}
		}

		PriceQtyItemArray = []; //-->Modifier Menu
		PriceQtyItemArray = PriceQtyItemArrayTemp;
		PriceQty = []; //-->Menu Item
		PriceQty = PriceQtyTemp;

		SubMenuItemSource = {
			localdata: []
		}
		QtyBuffer = Array({"Quantity": 0});
		for(i = 0; i < CatArray.length; i++){
			CatArray[i].Count = 0;
			CatArray[i].Current = CatArray[i].Max;
			$("."+CatArray[i].QuestionUnique).text("Remain "+CatArray[i].Min);
			$(".Cur"+CatArray[i].QuestionUnique).text("Current "+CatArray[i].Max);
		}
		dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
		$("#jqxlistbox").jqxGrid({
			source: dataAdapterSubMenu
		});
		TempItemListRef.push(ItemHoldArray[0]);
		$("#AddingItems").val(JSON.stringify(ItemHoldArray));

		$("#Qty_field").val();
		setTimeout(function(){
			$("#Qty_field").focus();
			$("#Qty_field").select();
		},100);
		$(".CounterNotify").text('');
	})

	$(document).on('click', '.clear_items', function(e){
		var CopyTempItemListRefFirst = TempItemListRef[0];
		TempAddItem = [];
		TempAddItemCompare = [];
		TempAddItemList = [];
		TempItemListRef = [];
		SubMenuItemSource = {
			localdata: []
		}

		var PriceQtyTemp = [];
		var PriceQtyItemArrayTemp = [];

		for(i = 0; i < PriceQty.length; i++){
			if(i == 0){
				PriceQtyTemp.push(PriceQty[i]);
			}
		}

		for(i = 0; i < PriceQtyItemArray.length; i++){
			if(i == 0){
				PriceQtyItemArrayTemp.push(PriceQtyItemArray[i]);
			}
		}

		PriceQtyItemArray = []; //-->Modifier Menu
		PriceQtyItemArray = PriceQtyItemArrayTemp;
		PriceQty = []; //-->Menu Item
		PriceQty = PriceQtyTemp;

		QtyBuffer = Array({"Quantity": 0});
		for(i = 0; i < CatArray.length; i++){
			CatArray[i].Count = 0;
			CatArray[i].Current = CatArray[i].Max;
			$("."+CatArray[i].QuestionUnique).text("Remain "+CatArray[i].Min);
			$(".Cur"+CatArray[i].QuestionUnique).text("Current "+CatArray[i].Max);
		}
		dataAdapterSubMenu = new $.jqx.dataAdapter(SubMenuItemSource);
		$("#jqxlistbox").jqxGrid({
			source: dataAdapterSubMenu
		});
		//TempItemListRef.push(ItemHoldArray[0]);
		TempItemListRef.push(CopyTempItemListRefFirst);
		$("#AddingItems").val(JSON.stringify(ItemHoldArray));

		$("#Qty_field").val(0);
		setTimeout(function(){
			$("#Qty_field").focus();
			$("#Qty_field").select();
		},100);
		$(".CounterNotify").text('');
	})

	//Table Order
	var populateNumpadTable = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-table").append('<div id="table_order_numpad" style="background: #144766; color:#EEE;"></div>');
			$("#table_order_numpad").html('');
			$("#table_order_numpad").append(''+
			'<form id="'+form_name+'">'+
				'<h4 style="text-align:center;">Enter Table#</h4>'+
				'<input type="text" class="hdfield" id="number_field" maxlength="3" style="color:#000">'+
				'<div id="keyboard"></div>'+
			'</form>');
			def.resolve();
		},100);
		return def.promise();
	}
		
	var WindowPopupTable = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-table").jqxWindow({
				height: 390,
				minWidth: 300,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-table').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadTable = function(form_name){
		var def = $.Deferred();
		populateNumpadTable(form_name)
		.then(function(){
			$('#keyboard').hdkeyboard({
				layout: "numbers_only",
				input: $('#number_field')
			});
			setTimeout(function(){
				def.resolve();
			},100);
		});
		return def.promise();
	}
		
	$(document).on('submit','#table_order_form',function(e){
		e.preventDefault();
		var tableno = $("#number_field").val();
		var postdata="tableno="+tableno;
		posData.TableAssign(postdata)
		.success(function(data){
			if(data.success == true){
				if(data.taken == false){
					LoadHeaderInfo()
					.then(function(){
						$("#table_order_numpad").html('');
						$("#dialog-numpad-table").jqxWindow('close');
						$window.location = base_url + "pos/pointofsale"
					});
				}else{
					$("#dialog-numpad-table").jqxWindow('close');
					var msg = "Table "+tableno+" is not available.";
					NumpadAlertOk('tabler_order_not_valid_form', msg)
					.then(function(){
						WindowPopupAlert("Table Status");
					})
				}
			}else{
				$("#dialog-numpad-table").jqxWindow('close');
				var msg = "Table "+tableno+" does not exist.";
				NumpadAlertClose ('tabler_order_not_valid_form', msg)
				.then(function(){
					WindowPopupAlert("Table Status");
				})
			}
		})
	})
	
	/*remove this codes when the new one is working. 5-9-18
	var once_clicked = function(){
		$("#user_name").one("click", function(e) {
			var postdata ="FunctionButton=AssignNewUser";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'AssignNewUser';
					NumpadPasscode('assign_newuser_enter_passcode')
					.then(function(){
						WindowPopupPasscode('Assign')
						.then(function(){
							$("#number_field").focus();
							once_clicked();
						})
					})
				}else{
					if($("#POSAssignList").val() == 1){
						posData.ServerCashIn()
						.success(function(data){
							ServerCashInListView('assign_single_receipts', data.html)
							.then(function(){
								WindowServerCashInList('Assign Receipt To');
								once_clicked();
							})
						})
					}else if($("#POSAssignList").val() == 2){
						posData.ServerAll()
						.success(function(data){
							ServerCashInListView('assign_single_receipts2', data.html)
							.then(function(){
								WindowServerCashInList('Assign Receipt To');
								once_clicked();
							})
						})
					}
				}
			})
		})
	}*/
	var once_clicked = function(){
		$("#user_name").one("click", function(e) {
			var postdata ="FunctionButton=AssignNewUser";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'AssignNewUser';
					NumpadPasscode('assign_newuser_enter_passcode')
					.then(function(){
						WindowPopupPasscode('Assign')
						.then(function(){
							$("#number_field").focus();
							once_clicked();
						})
					})
				}else{
					posData.AssignList()
						.success(function(data){
							WindowPopupCashierList2()
							.then(function(){
								var source = {
									datatype: "json",
									datafields: SalesPersonColTypes,
									localdata: {}
								};
								
								var NewHeight = (Height1 + Height2);
								var TopHeight = $("#CashierButtonTop").height();
								var WindowHeader = $(".jqx-window-header").height();
								var NewTopHeight = (NewHeight - TopHeight);
								NewTopHeight = (NewTopHeight - 50);
								$("#SalesPersonList3").jqxGrid({
									width: '100%',
									height: NewTopHeight,
									columnsresize: true,
									theme: 'ui-light',
									pageable: true,
									pagermode: 'advanced',
									pagesize: 100,
									showfilterrow: true,
									filterable: true,
									filterMode: 'advance',
									columns: SalesPersonGridColumns
								})

								var source = {
									datatype: "json",
									localdata: data
								};
								var dataAdapter = new $.jqx.dataAdapter(source);
								$("#SalesPersonList3").jqxGrid({
									source: dataAdapter
								})
							})
						})
					once_clicked();
				}
			})
		})
	}

	once_clicked();
	//05-07-18
	$(document).on('submit', '#assign_newuser_enter_passcode_old', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var password = CRP.converted;
			var hashpasscode = CryptoJS.MD5(password);
			var postdata="passcode="+hashpasscode;
				postdata+="&FunctionButton=AssignNewUser";
			posData.EnterPassCodeShowCashedIn(postdata)
			.success(function(data){
				if(data.success){
					if(data.login){
						$("#dialog-numpad-passcode").jqxWindow("close");
						if($("#POSAssignList").val() == 1){
							posData.ServerCashIn()
							.success(function(data){
								ServerCashInListView('assign_single_receipts', data.html)
								.then(function(){
									WindowServerCashInList('Assign Receipt To');
								})
							})
						}else if($("#POSAssignList").val() == 2){
							posData.ServerAll()
							.success(function(data){
								ServerCashInListView('assign_single_receipts2', data.html)
								.then(function(){
									WindowServerCashInList('Assign Receipt To');
									once_clicked();
								})
							})
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertOk('assign_no_permission', data.msg)
						.then(function(){
							WindowPopupAlert('Message');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Password";
					NumpadAlertOk('cashier_change_error_form', msg)
					.then(function(){
						WindowPopupAlert('Invalid Passcode');
					})
				}
			});
		}else{
			$("#dialog-numpad-passcode").jqxWindow("close");
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('cashier_change_error_form', msg)
			.then(function(){
				WindowPopupAlert('Invalid Passcode');
			})
		}
		$("#passcode_numpad").html('');
	})

	//-->assign_single_receipts
	$(document).on('click', '#assign_single_receipts .button_proceed', function(){
		var ServerId = $('input[type=radio][name=group1]:checked').attr('id');
		if(ServerId){
			var postdata ="Server="+ServerId;
			posData.AssignServer(postdata)
			.success(function(data){
				LoadHeaderInfo();
				$("#quick_recall_cashin").jqxWindow('close');
			})
		}else{
			var msg = 'Please select Assign';
			NumpadAlertClose('qrec_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})

	$(document).on('click', '#assign_single_receipts .button_q_cancel', function(){
		$("#quick_recall_cashin").jqxWindow('close');
	})

	//-->assign_single_receipts2
	$(document).on('click', '#assign_single_receipts2 .button_proceed', function(){
		var ServerId = $('input[type=radio][name=group1]:checked').attr('id');
		if(ServerId){
			var postdata ="Server="+ServerId;
			posData.AssignServer2(postdata)
			.success(function(data){
				LoadHeaderInfo();
				$("#quick_recall_cashin").jqxWindow('close');
			})
		}else{
			var msg = 'Please select Assign';
			NumpadAlertClose('qrec_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})

	$(document).on('click', '#assign_single_receipts2 .button_q_cancel', function(){
		$("#quick_recall_cashin").jqxWindow('close');
	})


	var WindowPopupTableOrder = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-table-order").jqxWindow({
				height: '100%',
				width: 600,
				title: "Table Order",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-table-order').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	$scope.POSDineIn = function(){
		WindowPopupTableOrder();
	}
	
	$scope.TableOrderCancel = function(){
		$('#dialog-numpad-table-order').jqxWindow('close');
	}
		
	var ClearDBCache = function(){
		var def = $.Deferred();
		//posData.ClearDBCache()
		//.success(function(){
		setTimeout(function(){	
			def.resolve();	
		},100);	
		//})	
		return def.promise(); 
	}	
	
	var RefreshAfterTableOrder = function(){
		$window.location = base_url + "pos/pointofsale";
	}
		
	//Table available color blue
	$scope.TableOrder = function(id){
		//$('body').block({message: 'Loading...'});

		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Loading...' });

		TableID = id; //Global variable see declaration on the top.
		posData.RecallFirstCheck() //Check receipt details based on receipt header unique and status.
		.success(function(firstdata){
			if(firstdata.success == true){
				posData.RecallSecondCheck() //Check receipt print based on receipt header unique and status.
				.success(function(seconddata){
					if(seconddata.success == true){
						KitchenPrintReceipt("OnHoldPrinterStatus")
						.then(function(){
							OnHoldTableOrder()
							.then(function(){
								TableAssign(id)
								.then(function(){
									RefreshAfterTableOrder()
								})
							})
						})
					}else{
						OnHoldTableOrder()
						.then(function(){
							TableAssign(id)
							.then(function(){
								RefreshAfterTableOrder()
							})
						})
					}
				})
			}else{
				OnHoldTableOrder()
				.then(function(){
					TableAssign(id)
					.then(function(){
						RefreshAfterTableOrder()
					})
				})
			}
			$('#dialog-numpad-table-order').jqxWindow('close');
		})
	}
	//Table available then assign to Receipt
	var TableAssign = function(id){
		var def = $.Deferred();
		$scope.TableNo = id;
		var tabledata="TableNo="+id;
		posData.TableOrderNoInject(tabledata)
		.success(function(injected){
			if(injected.success == true){
				PoleDisplayReset();
				GetCustomerSave(); //not disabled because no load_data() process
				LoadHeaderInfo();
				LoadOrderedItemList();
				LoadTotals()
				.then(function(){
					POSTotal();
				})
				LoadTax();
				ReceiptTaxChecker();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				CheckReceiptStatus();
				setTimeout(function(){
					GetSelectedCustomer();
				},500)
				setTimeout($.unblockUI, 100); 
			}
			def.resolve();
		})
		return def.promise();
	}
		
	var TableReceiptOpen = function(unique){
		var postData="receiptunique="+unique;
		posData.OpenReceiptTable(postData)
		.success(function(data){
			if(data.success == true){
				PoleDisplayReset();
				GetCustomerSave(); //not disabled because no load_data() process
				LoadHeaderInfo();
				LoadOrderedItemList();
				LoadTotals()
				.then(function(){
					POSTotal();
				})
				LoadTax();
				ReceiptTaxChecker();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				CheckReceiptStatus();
				setTimeout(function(){
					GetSelectedCustomer();
				},500)
				$('#dialog-numpad-table-order').jqxWindow('close');
			}
		})
	}
		
	//Table in used color red
	$scope.TableOpen = function(id, unique, type){
		posData.RecallFirstCheck()
		.success(function(firstdata){ //Check receipt details based on receipt header unique and status.
			if(firstdata.success == true){
				posData.RecallSecondCheck()
				.success(function(seconddata){ //Check receipt print based on receipt header unique and status.
					if(seconddata.success == true){
						KitchenPrintReceipt("OnHoldPrinterStatus")
						.then(function(){
							OnHoldTableOrder()
							.then(function(){
								TableReceiptOpen(unique);
							})
						})
					}else{
						OnHoldTableOrder()
						.then(function(){
							TableReceiptOpen(unique);
						})
					}
				})
			}else{
				if(firstdata.table){
					var msg = "Table "+firstdata.table+" is empty, please add item first or choose available table or click New Sale instead.";
					NumpadAlertOk('table_empty_alert', msg)
					.then(function(){
						WindowPopupAlert('Open Table');
					})
				}else{
					OnHoldTableOrder()
					.then(function(){
						TableReceiptOpen(unique);
					})
				}
			}
		})
	}
		
	var OnHoldTableOrder = function(){
		var def = new $.Deferred();
		setTimeout(function(){
				posData.OnHold()
				.success(function(data){
				if(data.success == true){
					PoleDisplayReset();
					LoadHeaderInfo();
					LoadOrderedItemList();
					LoadTotals()
					.then(function(){
						POSTotal();
					})
					LoadTax();
					LoadEBT();
					LoadDiscount();
					ReceiptTaxChecker();
					OnHoldClicked();
					GlobalCustomer = null;
					$scope.customer = {
						selected: 'Guest',
						id:''
					}
				}
					def.resolve();
				});
			},100); 
		return def.promise();
	}

	$scope.SplitCheck = function(){
		$("#SplitCheckfunction").attr("disabled", true);
		posData.CheckItemAddedOnList()
		.success(function(data){
			if(data.success == true){
				if(data.split){
					$.blockUI({ css: { 
						border: '2px solid #fff',
						padding: '15px', 
						backgroundColor: '#210e66', 
						'-webkit-border-radius': '10px', 
						'-moz-border-radius': '10px', 
						opacity: 1, 
						color: '#fff',
						fontSize: '20px' 
					}, message: 'Processing please wait...' });

					posData.SplitCheckUpdateRemove()
					.success(function(){
						KitchenPrintReceipt("SplitOnHoldPrinterStatus")
						.then(function(){
							/*
							setTimeout(function(){
								posData.QuickAddSale()
								.then(function(data){
									$window.location = base_url + "pos/pointofsale/split-check";
								});
							},500);
							*/
							setTimeout(function(){
								$window.location = base_url + "pos/pointofsale/split-check";
							},1000);
						})
					});
				}else{
					var msg = data.msg;
					NumpadAlertOk('no_item_added_yet', msg)
					.then(function(){
						WindowPopupAlert("Split Check Alert");
					})
				}
			}else if(data.success == false){
				var msg = data.msg;
				NumpadAlertOk('no_item_added_yet', msg)
				.then(function(){
					WindowPopupAlert("Split Check Alert");
				})
			}
		});
		setTimeout(function(){
			setTimeout($.unblockUI, 100); 
			$("#SplitCheckfunction").attr("disabled", false);
		},1000);
	}

	$(document).on('submit', '#SplitOnHoldPrinterStatus', function(e){
		e.preventDefault();
		var def = $.Deferred();
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'printing to default printer\nPlease wait...' });
		posData.GetCurrentReceiptHeader()
		.success(function(jsondata){
			var postdata="ReceiptHeaderUnique="+jsondata.ReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(data){
				setTimeout($.unblockUI, 100);
				$window.location = base_url + "pos/pointofsale/split-check";
				def.resolve();
			})
		})
		$("#dialog-numpad-alert").jqxWindow('close');
		return def.promise();
	})
	
	/*
	$scope.TwentyPercentDiscount = function(discount){
		var DiscountAmount = discount;
		var postDataReceiptDiscount="optiondiscount="+1;
		postDataReceiptDiscount+="&discountamount="+DiscountAmount;
		posData.ReceiptDiscount(postDataReceiptDiscount)
		.success(function(data){
			if(data.success == true){
				PoleDisplayTotal();
				LoadOrderedItemList();
				LoadTotals()
				.then(function(){
					POSTotal();
				})
				LoadTax();
				LoadEBT();
				LoadDiscount();
				LoadPayments();
				LoadChange();
				GlobalItemUnique = {};
				$("#dialog-numpad-discount").jqxWindow('close');
				}else{
				var msg = "Discount must be less than the total amount";
				NumpadAlertClose('discount_receipt_alert', msg)
				.then(function(){
					WindowPopupAlert('Receipt Discount Alert');
				})
			}
		});
	}
	*/
		
	$(document).on('click', '.btn-sel-amount-gc', function(e){
		e.preventDefault();
		var gc_amount = $(this).text();
		var gc_amount_decimal = parseFloat(gc_amount).toFixed(2);
		$("#gift_card_amount").text(gc_amount_decimal);
		setTimeout(function(){
			$("#gift_card_number").focus();
		},100);
	})

	$(document).on('click', '.btn-sel-amount-gc2', function(e){
		e.preventDefault();
		var gc_amount = $(this).text();
		var gc_amount_decimal = parseFloat(gc_amount).toFixed(2);
		$("#gift_card_amount2").text(gc_amount_decimal);
		setTimeout(function(){
			$("#gift_card_number2").focus();
		},100);
	})
		
	$(document).on('click', '#gift_card_manual_enter_amount', function(e){
		e.preventDefault();
		NumpadPriceGC('gift_card_manual_amount')
		.then(function(){
			WindowPopupPriceGC('Gift Card')
			.then(function(){
				setTimeout(function(){
					$("#gc_enter_amount").jqxNumberInput('focus');
					var input = $('#gc_enter_amount input')[0];
					if('selectionStart' in input) {
						input.setSelectionRange(0, 0);
						$("#gc_enter_amount").select();
					}else{
						var range = input.createTextRange();
						range.collapse(true);
						range.moveEnd('character', 0);
						range.moveStart('character', 0);
						range.select();
					}
					$("#gc_enter_amount input").select();
				},100)
			})
		})
	})
		
	$(document).on("submit", "#gift_card_manual_amount", function(e){
		e.preventDefault();
		var manual_amount = $("#gc_enter_amount").val();
		if(manual_amount == ''){
			manual_amount = 0.00;
		}
		$("#gift_card_amount").text(parseFloat(manual_amount).toFixed(2));
		setTimeout(function(){
			$("#gift_card_number").focus();
		},100);
		
		$("#dialog-numpad-gift-price").jqxWindow('close');
	})
		
	$(document).on('click', '.manual-giftcard', function(e){
		e.preventDefault();
		NumpadGiftCard('gift_card_manual_card')
		.then(function(){
			WindowPopupGiftCard('Gift Card')
			.then(function(){
				$("#card_field").val('');
				$("#card_field").focus();
				setTimeout(function(){
					$("#card_field").select();
				},100);
			})
		})
	})
		
		
	$(document).on('input','#gift_card_number', function() {
		//ParseParserObj();
	})
	
	$(document).on('submit', '#gift_card_manual_card', function(e){
		e.preventDefault();
		$("#gift_card_number").val('');
		var manual_card = $("#card_field").val();
		var p = new SwipeParserObj( manual_card );
		if( p.hasTrack1 ){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			
			var convert_card = cc_format(p.account);
			var cardtype = GetCardType(p.account);
			$("#gift_card_number").val(convert_card);
			setTimeout(function(){
				$("#gift_card_number").focus();
			},100);
		}else if( p.hasTrack2){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			
			var convert_card = cc_format(p.account);
			var cardtype = GetCardType(p.account);
			$("#gift_card_number").val(convert_card);
			setTimeout(function(){
				$("#gift_card_number").focus();
			},100);
		}else{
			$("#gift_card_number").val(manual_card);
			ParseParserObj();
			setTimeout(function(){
				$("#gift_card_number").focus();
			},100);
		}
		
		$("#dialog-numpad-gift-card").jqxWindow('close');
	})
		
	var ValidateGiftCardNumber = function(cardno){
		var def = $.Deferred();

		
		var postdata ="GiftCard="+cardno;
		posData.ValidateGiftCard(postdata)
		.success(function(data){
			def.resolve(data.success);
		})
		return def.promise();
	}
		
	$(document).on('submit', '#sell_gift_card', function(e){
		e.preventDefault();
		var GiftCardLength 		 = $("#GiftCardLength").val();
		var GiftCardItemUnique 	= $("#gift_card_item_unique").val();
		var GiftCardAmount 		= $("#gift_card_amount").text();
		var GiftCard			= $("#gift_card_number").val();	
		var ItemUnique 			= $("#gift_card_field").val();		
		var GiftCardBal			= $("#gift_card_balance").text();
		var ConvertGCBal		= GiftCardBal.replace("Balance ", '');
		var NewBalance 			= parseFloat(ConvertGCBal) + parseFloat(GiftCardAmount);

		if(GiftCardAmount == 0){
			var msg = "Gift Card Amount Cannot Be 0";
			NumpadAlertOk('gift_card_amount_zero', msg)
			.then(function(){
					WindowPopupAlert ('<span class="glyphicon glyphicon-exclamation-sign"></span>')	
			})
		}else{
			if($("#gift_card_number").val() == '' || $("#gift_card_number").val() == null){
				var msg = "Please swipe or type Gift Card Number";
				NumpadAlertClose('gift_card_number_required', msg)
				.then(function(){
					WindowPopupAlert ('<span class="glyphicon glyphicon-exclamation-sign"></span>')	
				})
			}else{
				var regex = /^[0-9\s]*$/;
				if( !regex.test(GiftCard) ) {
					$("#gift_card_balance").text('Card can only be numbers.');
					return false;
				}

				if(GiftCardLength == 0){
					GiftCardLength = 4;
				}


				if(GiftCard.length < GiftCardLength){
					$("#gift_card_balance").text('Card must be at least '+GiftCardLength+' digits.');
					return false;
				}

				ValidateGiftCardNumber(GiftCard)
				.then(function(GCresponse){
					if(GCresponse == true){//Validate Gift Card
						if(NewBalance >= 0){
							var postdata="ItemUnique="+ItemUnique;
								postdata+="&Amount="+GiftCardAmount;
								postdata+="&GiftCard="+GiftCard;
								postdata+="&CustomerUnique="+GlobalCustomer;
								postdata+="&Points="+GiftCardPoints;
							posData.AddItemGiftCard(postdata)
							.success(function(data){
								if(data.success == true){
									$scope.desc = data;
									$("#receiptn").text(data.ReceiptNumber);
									load_data(data);
									// GetCustomerSave();
									$scope.BtnPaymentWhen = false;
									$('#dialog-gift-card').jqxWindow("close");
									PoleDisplay(data.ReceiptDetailsUnique);
								}else{
									var msg = "Gift Card is already issued, do you want to add "+GiftCardAmount+" amount to this Gift Card?";
									NumpadAlertYesNo('gift_card_reload', msg)
									.then(function(){
										WindowPopupAlert ('Gift Card')	
									})
								}
								GiftCardPoints = '';
							});
						}else{
							var msg = "Gift Card Return Amount Cannot Bring Balance Below 0.";
							NumpadAlertOk('gift_card_amount_zero', msg)
							.then(function(){
								WindowPopupAlert ('<span class="glyphicon glyphicon-exclamation-sign"></span>')	
							})
						}
					}else{
						if(GiftCardAmount > 0){
							var postdata="ItemUnique="+ItemUnique;
								postdata+="&Amount="+GiftCardAmount;
								postdata+="&GiftCard="+GiftCard;
								postdata+="&CustomerUnique="+GlobalCustomer;
								postdata+="&Points="+GiftCardPoints;
							posData.AddItemGiftCard(postdata)
							.success(function(data){
								if(data.success == true){
									$scope.desc = data;
									$("#receiptn").text(data.ReceiptNumber);
									PoleDisplay(data.ReceiptDetailsUnique);
									load_data(data);
									// GetCustomerSave();
									$scope.BtnPaymentWhen = false;
									$('#dialog-gift-card').jqxWindow("close");
								}else{
									var msg = "Gift Card is already issued, do you want to add "+GiftCardAmount+" amount to this Gift Card?";
									NumpadAlertYesNo('gift_card_reload', msg)
									.then(function(){
										WindowPopupAlert ('Gift Card')	
									})
								}
							});
						}else if(GiftCardAmount < 0){
							var postdata ="&Amount="+GiftCardAmount;
								postdata+="&GiftCard="+GiftCard;
								postdata+="&ReceiptPaymentUnique=null";
								postdata+="&process=4";
							posData.PaymentGiftCard(postdata)
							.success(function(data){
								var msg = "Unable to refund, Invalid Gift Card";
								NumpadAlertOk('gift_card_amount_zero', msg)
								.then(function(){
									WindowPopupAlert ('<span class="glyphicon glyphicon-exclamation-sign"></span>')	
								})
							});
						}
					}//GCResponse
				})
			}	
		}
	})
	
	$(document).on('click', '#swipe_card', function(e){
		e.preventDefault();
		$("#gift_card_number").val('');
		setTimeout(function(){
			$("#gift_card_number").focus();
		},100);
	})
	
	$(document).on('submit', '#gift_card_reload', function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow("close");
		var postdata = "GiftCard="+$("#gift_card_number").val();
			postdata+= "&Amount="+$("#gift_card_amount").text();
			postdata+= "&CustomerUnique="+GlobalCustomer;
			postdata+= "&ItemUnique="+$("#gift_card_field").val();	
		posData.GiftCardReload(postdata)
		.success(function(data){
			$scope.desc = data;
			load_data(data);
			$("#receiptn").text(data.ReceiptNumber);
			/*
			LoadOrderedItemList();
			LoadTax();
			LoadEBT();
			LoadDiscount();
			LoadPayments();
			LoadChange();
			ReceiptTaxChecker();
			CheckReceiptStatus();
			*/
			// GetCustomerSave();
			//LoadTotals()
			//.then(function(){
			//	POSTotal()
			//	.then(function(){
					PoleDisplay(data.ReceiptDetailsUnique);
			//	})
			//})
			$scope.BtnPaymentWhen = false;
			$('#dialog-gift-card').jqxWindow("close");
		})	
	})

	
	$(document).on('click', '#gift_card_invalid', function(){
		$("#gift_card_balance").text("Please swipe the Gift Card.");
	})
	
	ItemsCategoryView();
		
	$(document).on('submit', "#open_payment_view", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
				console.log(postdata);
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						$("#dialog-numpad-passcode").jqxWindow('close');
						PoleDisplayTotal();
						PaymentView();	
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('payment_view', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{

					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('payment_view', data.msg)
					.then(function(){
						WindowPopupAlert('Passcode Error');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('payment_view', msg)
			.then(function(){
				WindowPopupAlert('Passcode Error');
			})
		}
		$("#passcode_numpad").html('');
	})
		
	$scope.BackToItemCategory = function(){
		ItemsCategoryView();
	} 
		
	$(document).on('submit', '#add_item_without_stock', function(e){
		e.preventDefault();
		var ItemUnique = $("#use_value").val();
		var question = $("#use_value2").val();
		var postDataAddItem="ItemId="+ItemUnique
		var postdata="ItemUnique="+ItemUnique;
		CheckPrompt(postdata, ItemUnique, 1)
		.then(function(){
			if(question == 1){
				Question('', true, '', ItemUnique);	
			}else{
				posData.AddItem(postDataAddItem)
				.success(function(data){
					load_data(data);
					$scope.desc = data;
					$("#receiptn").text(data.ReceiptNumber);
					$scope.ItemSearch = '';
					setTimeout(function(){
						GetSelectedCustomer();
					},500);
					$scope.BtnPaymentWhen = false;
					$scope.ItemSearch = null;
					PoleDisplay(data.ReceiptDetailsUnique);
				});
				$("#barcode_search").attr("disabled", false);
				$("#barcode_search").focus();
			}
		})
		$("#dialog-numpad-alert").jqxWindow('close');
	})
	
	
	/*From Payment Page*/
	$scope.TipDollar = function(){
		$("#TipDollarfunction").attr("disabled", true);
		var TitleTipLabel = $("#AdjustTipButtonLabel").val();
		var FunctionTipLabel = $("#TipDollarfunction").text();
		NumpadTip('TipDollar', FunctionTipLabel)
		.then(function(){
			WindowPopupTip(TitleTipLabel)
			.then(function(){
				$("#tip_number_field").jqxNumberInput('focus');
				setTimeout(function(){
					var input = $('#tip_number_field input')[0];
					if('selectionStart' in input) {
						input.setSelectionRange(0, 0);
					}else{
						var range = input.createTextRange();
						range.collapse(true);
						range.moveEnd('character', 0);
						range.moveStart('character', 0);
						range.select();
					}
					$("#tip_number_field input").select();
				},100)
				$("#TipDollarfunction").attr("disabled", false);
			})
		})
	}
		
	$(document).on('submit', '#TipDollar', function(e){
		e.preventDefault();
		var tipdollar = $("#tip_number_field").val();
		var postdata ="tipamount="+tipdollar;
			postdata+="&tiptype=1";
		posData.Tips(postdata)
		.success(function(data){
			if(data.success == true){
				load_data(data);
				DisplayAllPayments();
			}
		}).then(function(){
			$("#barcode_search").focus();
			$("#dialog-numpad-tip").jqxWindow('close');
		})
	})
		
	$scope.TipPercent = function(){
		$("#TipPercentfunction").attr("disabled", true);
		var TitleTipLabel = $("#AdjustTipButtonLabel").val();
		var FunctionTipLabel = $("#TipPercentfunction").text();
		NumpadTip('TipPercent', FunctionTipLabel)
		.then(function(){
			WindowPopupTip(TitleTipLabel)
			.then(function(){
				$("#tip_number_field").jqxNumberInput('focus');
				setTimeout(function(){
					var input = $('#tip_number_field input')[0];
					if('selectionStart' in input) {
						input.setSelectionRange(0, 0);
					}else{
						var range = input.createTextRange();
						range.collapse(true);
						range.moveEnd('character', 0);
						range.moveStart('character', 0);
						range.select();
					}
					$("#tip_number_field input").select();
				},100)
				$("#TipPercentfunction").attr("disabled", false);
			})
		})
	}
	//Don't watch over me, I see you too..
	$(document).on('submit', '#TipPercent', function(e){
		e.preventDefault();
		var tippercent = $("#tip_number_field").val();
		var postdata ="tipamount="+tippercent;
			postdata+="&tiptype=2";
		posData.Tips(postdata)
		.success(function(data){
			if(data.success == true){
				load_data(data);
				//LoadTotals();
				//POSTotal();
				//LoadPayments();
				//LoadChange();
				//CheckReceiptStatus();
				DisplayAllPayments();
			}
		}).then(function(){
			$("#barcode_search").focus();
			$("#dialog-numpad-tip").jqxWindow('close');
		})
	})
		
	$scope.AdjustTip = function(){
		var rowindex = $("#payment_list_grid").jqxDataTable('getSelection');
		if(rowindex.length > 0){
			var batchno = $scope.BatchNo;//rowindex[0]["BatchNo"];
			var PaymentUnique 	= $scope.paymentid;
			var trantype = $scope.trantype;
			var postdata="ReceiptPaymentUnique="+PaymentUnique;
			posData.CheckStatusPayment(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.removable == true){
						if($scope.paymentid > 0){

							if(batchno > 0){
								var msg = 'Card has been batched cannot adjust.';
								NumpadAlertOk('adjust_payment_batched', msg)
								.then(function(){
									WindowPopupAlert('Adjust Tip');
								})

								return false;
							}

							if(trantype != 'EBT'){
								NumpadTip('AdjustTip', 'Enter Tip Dollar')
								.then(function(){
									WindowPopupTip('Adjust Tip')
									.then(function(){
										setTimeout(function(){
											$("#tip_number_field").jqxNumberInput('focus');

											var input = $('#tip_number_field input')[0];
											if('selectionStart' in input) {
												input.setSelectionRange(0, 0);
												$("#tip_number_field").select();
											}else{
												var range = input.createTextRange();
												range.collapse(true);
												range.moveEnd('character', 0);
												range.moveStart('character', 0);
												range.select();
											}
											$("#tip_number_field input").select();
										},100)
									})
								})
							}else{
								var msg = trantype + ' cannot be adjusted';
								NumpadAlertOk('adjust_tip', msg)
								.then(function(){
									WindowPopupAlert('Adjust Tip');
								})
							}
						}else{
							var msg = 'Please select Payment first.';
							NumpadAlertOk('adjust_tip', msg)
							.then(function(){
								WindowPopupAlert('Adjust Tip');
							})
						}
					}else{
						var msg = "View only mode, please edit receipt to remove payment.";
						NumpadAlertOk('adjust_tip_view_mode', msg)
						.then(function(){
							WindowPopupAlert('Adjust Tip');	
						}) 
					}
				}else{
					var msg = 'Cannot be adjusted';
					NumpadAlertOk('adjust_tip', msg)
					.then(function(){
						WindowPopupAlert('Adjust Tip');
					})
				}
			})
		}else{
			var msg = 'Please select Payment first.';
			NumpadAlertOk('adjust_tip', msg)
			.then(function(){
				WindowPopupAlert('Adjust Tip');
			})
		}
	}
		
	$(document).on('submit', '#AdjustTip', function(e){
		e.preventDefault();
		var integrated 	= $scope.list_integrated;
		$('#paymentlist').block({message: 'Adjusting Tip please wait...'});
		var tipdollar = $("#tip_number_field").val();
		var PaymentUnique = $scope.paymentid;
		var postdata="tipamount="+tipdollar;
			postdata+="&receipt_payment_unique="+PaymentUnique;
		$("#dialog-numpad-tip").jqxWindow('close');	
		if(integrated == 0){
			posData.AdjustTip(postdata)
			.success(function(data){
				$('#paymentlist').unblock();
				if(data.success == true){
					load_data(data);
					DisplayAllPayments();
					PoleDisplayReset();
					var msg = 'Tip Adjusted';
					NumpadAlertOk('adjust_tip', msg)
					.then(function(){
						WindowPopupAlert('Adjust Tip');
					})
				}
			}).then(function(){
				// $("#barcode_search").focus();
			})
		}else if(integrated == 1){
			//No integrated 1 yet.
		}else if(integrated == 2 || integrated == 5){//2 is Credit Card; 5 is Customer Card On file
			posData.AdjustTips(postdata)
			.success(function(data){
				$('#paymentlist').unblock();
				if(data.success == true){
					load_data(data);
					DisplayAllPayments();
					PoleDisplayReset();
					var msg = data.TextResponse;
					NumpadAlertOk('adjust_tip', msg)
					.then(function(){
						WindowPopupAlert('Adjust Tip');
					})
				}
			})
		}
	})
		
	$scope.EBTBalance = function(){
		$("#EBTBalancefunction").attr("disabled", true);
		WindowPopupBalanceInquiry();
		setTimeout(function(){
			$("#EBTBalancefunction").attr("disabled", false);
		},1000);
	}
	
	$scope.EBTBalanceBtn = function(Unique, Name, TranType, InvokeControl, MerchantID, SecureDevice, Comport, ReceiptPrint, AcctNo, CardType){
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: 'Processing please wait...' });

		var postdata = "TranType="+TranType;
			postdata+= "&InvokeControl="+InvokeControl;
			postdata+= "&MerchantID="+MerchantID;
			postdata+= "&AcctNo="+AcctNo;
			postdata+= "&SecureDevice="+SecureDevice;
			postdata+= "&ComPort="+Comport;
			postdata+= "&ReceiptPrint="+ReceiptPrint;
			postdata+= "&CardType="+CardType;
		posData.EBTBalance(postdata)
		.success(function(data){
			if(data.success == true){
				var msg = data.Status+"<br/>";
					msg+= data.CardType+"<br/>";
					msg+= data.AcctNo+"<br/>";
					msg+= data.Balance;
				NumpadAlertClose('ebt_balance_close', msg)
				.then(function(){
					WindowPopupAlert("EBT Balance")
					.then(function(){
						$(".alert_close").focus();
					})
				})
			}else{
				var msg = JSON.stringify(data.result);
				NumpadAlertClose('ebt_balance_error', msg)
				.then(function(){
					WindowPopupAlert("Alert")
					.then(function(){
						$(".alert_close").focus();
					})
				})
			}
			//$('body').unblock();
			setTimeout($.unblockUI, 100); 
		})
		$("#diloag-balance-inquiry").jqxWindow('close');	
	}
		
	var WindowPopupCashierList = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var NewHeight = (Height1 + Height2);
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#dialog-cashier-list").jqxWindow({
				height: NewHeight,
				width: 710,
				title: "Change Sales Person",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				resizable: false,
				draggable: false,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#dialog-cashier-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	$scope.CashierList_old = function(){
		$("#CashierListfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		if(SelectedItem){
			WindowPopupCashierList();
			var postdata = "ReceiptDetailsUnique="+SelectedItem;
			posData.GetCurrentSalesPerson(postdata)
			.success(function(data){
				$("#current_sales_person").text(data.SalesPerson);
			})
		}else{
			var msg = 'Please select Item first';
			NumpadAlertClose('no_item_selected', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
		setTimeout(function(){
			$("#CashierListfunction").attr("disabled", false);
		},1000);
		$("#dialog-numpad-all-price").jqxWindow('close');
	}
		
	$scope.SelectUser_old = function(){
		var CashierID = $("#cashier_list").val();
		if(CashierID == 0){
			var msg = 'Select Sale Person';
			NumpadAlertClose('sale_person_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}else{
			var postdata = "CashierID="+CashierID;
				postdata += "&ReceiptDetailsUnique="+GlobalItemUnique.Unique;
			posData.SelectUser(postdata)
			.success(function(data){
				if(data.success == true){
					$('#dialog-cashier-list').jqxWindow('close');
					$("#cashier_list").val(0);
				}
			}).then(function(){
				$("#barcode_search").focus();
			})
		}
	}
		
	$scope.CancelSelectUser = function(){
		$('#dialog-cashier-list').jqxWindow('close');
		$("#cashier_list").val(0);
	}


	var ScanDetected = (msg) => {
        var def = $.Deferred();
        $("body").append(
            '<div id="scan_detected" style="background: #144766; color:#EEE; overflow: hidden;">'+
                '<div id="scan_detected_container">'+
                    '<p>'+msg+'</p>'+
                    '<div>'+
                        '<div>'+
                            '<button id="scan_detected_yes" class="btn btn-primary btn-lg">Yes</button>&nbsp;&nbsp;'+
                            '<button id="scan_detected_no" class="btn btn-danger btn-lg">No</button>&nbsp;&nbsp;'+
                        '</div>'+
                    '</div>'+
                '</div>'+
            '</div>'
        );

        $("#scan_detected").jqxWindow({
            height: 220,
            width: 260,
            title: 'Scan detected',
            isModal: true,
            theme: 'darkblue',
            showCloseButton: false,
            showAnimationDuration: 0,
            closeAnimationDuration: 0
        })

        $("#scan_detected_yes").on('click', function(e){
            e.preventDefault();
            ScanRecallReceipt()
            .then(function(){

                var getrows = $("#listOnHoldSale").jqxGrid('getrows');
                if(getrows.length > 0){
                    $('#listOnHoldSale').jqxGrid({ selectedrowindex: 0});
                    $("#btn-use-req-receipt").trigger('click');
                }else{
                    var ScannedReceiptNumber = $("#ScanReceiptNumber").val();
                    var msg = 'Receipt no. '+ScannedReceiptNumber + ' cannot be found!';
                    NumpadAlertClose('no_receipt_found', msg)
                    .then(function(){
                        WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
                    })
                }
                $("#scan_detected").jqxWindow('close');
            })
        })

        $("#scan_detected_no").on('click', function(e){
            e.preventDefault();
            $("#scan_detected").jqxWindow('close');
        })

        setTimeout(function(){  
            $("#scan_detected").jqxWindow('open');
            $("#scan_detected").on('close', function(){
                $("#scan_detected").remove();
            })

            def.promise();
        },100)


        return def.promise();
    }


	/*OnHold Sale*/
	var populateOnHoldSale = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("body").append(
				'<div id="on-hold-sale">'+
					'<div id="on-hold-sale-container"></div>'+
					'<input type="text" id="ScanReceiptNumber" style="position: absolute; top:100; width: 0px; height: 0px; top:100px; left: 10px; border:none; color: #ffff;"/>'+
				'</div>'
			);
			document.onkeydown = rebuildKeyPress;
			def.resolve();
		},100);
		return def.promise();
	}

	var rebuildKeyPress = () => {
		var evtobj = window.event? event : e;
		if (evtobj.keyCode == 66 && evtobj.ctrlKey) {
			var msg = "Scan detected! Do you like to continue?";

			$("#ScanReceiptNumber").val('');
			$("#ScanReceiptNumber").focus();

			setTimeout(function(){  
                ScanDetected(msg)
                .then(function(){
                    
                })
            },2000)

			// setTimeout(function(){
			// 	ScanRecallReceipt()
			// 	.then(function(){
			// 		var getrows = $("#listOnHoldSale").jqxGrid('getrows');
			// 		if(getrows.length > 0){
			// 			$('#listOnHoldSale').jqxGrid({ selectedrowindex: 0});
			// 			$("#btn-use-receipt").trigger('click');
			// 		}else{
			// 			var ScannedReceiptNumber = $("#ScanReceiptNumber").val();
			// 			var msg = 'Receipt no. '+ScannedReceiptNumber + ' cannot be found!';
			// 			NumpadAlertClose('no_receipt_found', msg)
			// 			.then(function(){
			// 				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			// 			})
			// 		}
			// 	})
			// },500)
		}
	}

	var ScanRecallReceipt = () => {
		var def = $.Deferred();
		$("#listOnHoldSale").jqxGrid('clearselection');
		var filtergroup = new $.jqx.filter();
		var filter_or_operator = 1;

		var receiptNumberParse = $("#ScanReceiptNumber").val();
		var parseReceiptNumber = receiptNumberParse.split("=")[1];
		$("#ScanReceiptNumber").val(parseReceiptNumber);

		var filtervalue = $("#ScanReceiptNumber").val();
		var filtercondition = 'EQUAL';
		var filter1 = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
		filtergroup.addfilter(filter_or_operator, filter1);
		// add the filters.
		$("#listOnHoldSale").jqxGrid('addfilter', 'ReceiptNumber', filtergroup);
		// apply the filters.
		$("#listOnHoldSale").jqxGrid('applyfilters');
		setTimeout(function(){
			def.resolve();
		},100)
		return def.promise();
	}	
		
	var WindowOnHoldSale = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("#on-hold-sale").jqxWindow({
				width: '100%', 
				height: '100%',
				title: '<button id="pos_quick_recall_close" class="glyphicon glyphicon-remove" style="float:left; background-color: #449bca; width: auto;" title="Close"></button>&nbsp;Quick Recall',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				draggable: false,
				position: { x: 0, y: 0 },
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				zIndex: 100,
			});
			$('#on-hold-sale').jqxWindow('open');

			setTimeout(function(){
				$("#on-hold-sale").on('close', function(){
					$('#listOnHoldSale').jqxGrid('removefilter', 'ReceiptNumber', true);
					$("#listOnHoldSale").jqxGrid('destroy');
					$("#on-hold-sale").remove();
					document.onkeydown = KeyPress;
				});
			},100)

			def.resolve();	
		},100);
		return def.promise();
	}
		
	var OnHoldSaleView = function(form_name, html){
		var def = $.Deferred();
		populateOnHoldSale(form_name, html)
		.then(function(){
			setTimeout(function(){
				def.resolve();
			},100);
		});
		return def.promise();
	}

	var onholdcolumns    = [];
	var VisibleColumns = function(){
		posData.GetOnHoldSaleColumns()
		.success(function(onholdcols){
			$.each(onholdcols, function(index, value){
				if(value.aggregates == 1){
					onholdcolumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, cellsalign: value.cellsalign, cellsformat: value.cellsformat, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							} 
						})
				}else{
					onholdcolumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, cellsalign: value.cellsalign, cellsformat: value.cellsformat})
				}
			})
		})
	}
	VisibleColumns();

	var ProceedOnHoldSale = function(){
		var def = $.Deferred();
		OnHoldSaleView()
		.then(function(){
			WindowOnHoldSale()
			.then(function(){
				$("#on-hold-sale-container").css("height", "auto");
				SelOnHold();
				ShowPoints();
				def.resolve();
			})
		})
		return def.promise();
	}

	var SelOnHold = function(){
		var def = $.Deferred();
		posData.GetOnHoldSale()
		.success(function(data){
			$("#on-hold-sale-container").append($compile(data.html)($scope));
			var ResoWidth 	        = $("#on-hold-sale").width();
			var ResoHeight 	        = $("#on-hold-sale").height();
			var ComputeHeight		= ResoHeight - 90;
			var UseHeight			= ComputeHeight;
			var ComputeDisplayRow 	= Math.ceil(ComputeHeight / 30);
			var OHSListItems		= UseHeight - 180;
			var TotalHeight 		= OHSListItems - 230;
			var Payments 			= (TotalHeight / 2);
			$(".listitems").css("height", OHSListItems);
			$(".OHSlistitemsTotal").css({"height":TotalHeight, "display":"block"});
			//$(".qspayments").css("height", Payments+'px !important'); not working
			posData.LoadOnHoldSale()
			.success(function(recdata){
				//var url = base_url + "pos/pointosale/load-all-onhold-sale";
				var source = {
					datatype: "json",
					datafields: [
						{ name: 'Unique', type: 'int' },
						{ name: 'ReceiptNumber', type: 'string' },
						{ name: 'Notes', type: 'string' },
						{ name: 'Cashier', type: 'string' },
						{ name: 'TotalSale', type: 'string' },
						{ name: 'CustomerName', type: 'string'},
						{ name: 'OrderNo', type: 'string'},
						{ name: 'ReceiptDate', type: 'string'},
						{ name: 'TableNo', type: 'string'},
						{ name: 'TableName', type: 'string'},
						{ name: 'SplitUnique', type: 'int'}
					],
					localdata: recdata
				};
				var dataAdapter = new $.jqx.dataAdapter(source);
				var ColumnHideShow = $("#PrintReceiptOrderNo").val();
				if(ColumnHideShow > 0){
					$("#listOnHoldSale").jqxGrid({
						width: '100%',
						height: UseHeight,
						source: dataAdapter,
						columnsresize: true,
						altrows: true,
						rowsheight: GridRowHeight,
						//scrollbarsize: 50,
						theme: GridTheme,
						pageable: false,
						pagermode: 'advanced',
						pagesize: ComputeDisplayRow,
						scrollbarsize: GridScrollBarSize,
						sortable: true,
						filtermode: 'excel',
						showfilterrow: true,
						filterable: true,
						showstatusbar: true,
						statusbarheight: GridRowHeight,
						showaggregates: true,
						columns: [
							{ text: 'Unique', datafield: 'Unique', hidden: true }
						]
					});
				}else{
					$("#listOnHoldSale").jqxGrid({
						width: '100%',
						height: UseHeight,
						source: dataAdapter,
						columnsresize: true,
						altrows: true,
						scrollbarsize: 25,
						rowsheight: GridRowHeight,
						theme: GridTheme,
						pageable: false,
						pagermode: 'advanced',
						pagesize: ComputeDisplayRow,
						scrollbarsize: 25,
						sortable: true,
						filtermode: 'excel',
						showfilterrow: true,      
						filterable: true,
						showstatusbar: true,
						statusbarheight: GridRowHeight,
						showaggregates: true,
						columns: [
							{ text: 'Unique', datafield: 'Unique', hidden: true }
						]
					});
				}
				
				setTimeout(function(){
					$("#listOnHoldSale").jqxGrid('selectrow', 0);
				},100);
				
				bindData();

				$("#listOnHoldSale").jqxGrid({ columns: onholdcolumns });
				$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');

			}).then(function(){
				scrollTotalDown();
			})
			def.resolve();
		})
		return def.promise();
	}

	var bindData = function(){
		$("#listOnHoldSale").bind('rowselect', function(event){
			var rowindex = event.args.rowindex;
			var datafield = event.args.datafield;
			var row = $(this).jqxGrid('getrowdata', rowindex);
			var datainformations = $("#listOnHoldSale").jqxGrid("getdatainformation");
			var rowscounts = datainformations.rowscount;
			if(rowscounts > 0){
				var postdata ="ReceiptHeaderUnique="+row.Unique;
				$("#btn-use-receipt").val(row.Unique);
				// $("#btn-use-receipt").text('Open '+row.ReceiptNumber);
				GlobalReceiptHeaderUnique = row.Unique;
				posData.GetItemsOnHoldSale(postdata)
				.success(function(data){
					$(".listitems").html('');
					$(".OHSlistitemsTotal").html('');
					$.each(data, function(index, value){
						if(value.Completed || value.Remove == 2){
							if(value.Indent == false){
								$(".listitems").append(
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-2" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-4" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
									'</div>'
								);
							}else{
								$(".listitems").append(
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">&nbsp;</div>'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-4" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
									'</div>'
								);
							}
						}else{
							if(value.Indent == false){
								$(".listitems").append(''+
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-2" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-3" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
										'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">'+
										'	<label><input type="checkbox" id="'+value.Unique+'" name="groupqrec" class="radio1 qrec '+value.ParentUnique+'" /></label>'+
										'</div>'+
									'</div>'+
								'');
							}else{
								$(".listitems").append(''+
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">&nbsp;</div>'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-3" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
										'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">'+
										'	<label><input type="checkbox" id="'+value.Unique+'" name="groupqrec" class="radio1 qrec '+value.ParentUnique+'" /></label>'+
										'</div>'+
									'</div>'+
								'');
							}
						}
						
					})
				}).then(function(){
					$(".OHSlistitemsTotal").append($compile('<div class="totals">'+
						'<div class="totals">'+
							'<div ng-repeat="qstotal in qstotals">'+
								'<div class="col-sm-12 alignlabels" style="margin:0; padding:0;">'+
										'<div class="col-sm-5">'+
											'<div class="col-sm-12 alignlabels text-right" ng-hide="qsEBTShow" style="margin:0; padding:0;">'+
												'<div class="col-sm-6" style="margin:0; padding:0;"><strong>EBT</strong></div>'+
												'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsEBT.EBTtotal | currency:\'\'}}</strong></div>'+
											'</div>'+
											
											'<div class="col-sm-12 alignlabels text-right" ng-hide="qsNonEBTShow" style="margin:0; padding:0;">'+
												'<div class="col-sm-6" style="margin:0; padding:0;"><strong>Non-EBT</strong></div>'+
												'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsNonEBT.NonEBTtotal | currency:\'\'}}</strong></div>'+
											'</div>'+
											
											'<div class="col-sm-12 alignlabels text-left" ng-hide="qsTotalDiscountShow" style="margin:0; padding:0;">'+
												'<div class="col-sm-6" style="margin:0; padding:0;"><strong>Disc</strong></div>'+
												'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsDiscount.TotalDiscount | currency:\'\'}}</strong></div>'+
											'</div>'+
										'</div>'+
										'<div class="col-sm-7 text-right" style="padding: 0; margin:0;">'+
											'<div class="col-sm-12 alignlabels text-right" style="margin:0; padding:0;">'+
												'<div class="col-sm-7 text-right" style="margin:0; padding:0;"><strong>SUB TOTAL</strong></div>'+
												'<div class="col-sm-5 text-right" style="margin:0; padding:0;"><strong>{{qstotal.SubTotal | currency: \'\'}}</strong></div>'+
											'</div>'+
											'<div class="col-sm-12 alignlabels text-right" ng-if="qstotal.Tip != 0" style="margin:0; padding:0;">'+
												'<div class="col-sm-7" style="margin:0; padding:0;"><strong>'+$("#AdjustTipButtonLabel").val()+'</strong></div>'+
												'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstotal.Tip | currency: \'\'}}</strong></div>'+
											'</div>'+
											'<div class="col-sm-12 alignlabels text-right" ng-repeat="qstax in qsShowTax" style="margin:0; padding:0;">'+
												'<div class="col-sm-7" style="margin:0; padding:0;"><strong>{{qstax.Description}}</strong></div>'+
												'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstax.TotalTax | currency: \'\'}}</strong></div>'+
											'</div>'+
											'<div class="col-sm-12 text-right" style="margin:0; padding:0;"><strong>============</strong></div>'+
											'<div class="col-sm-12 alignlabels text-right" style="margin:0; padding:0;">'+
												'<div class="col-sm-7" style="margin:0; padding:0;"><strong>TOTAL</strong></div>'+
												'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstotal.Total | currency: \'\'}}</strong></div>'+
											'</div>'+
										'</div>'+
									'</div>'+
									'<div class="qspayments" id="payments">'+
										'<div class="col-sm-12" style="margin:0; padding:0;" ng-repeat="qspayments in qsAllPayments">'+
											'<div class="col-sm-9" style="margin:0; padding:0;"><strong>{{qspayments.paymentname}} * {{payments.cardno}}</strong></div>'+
											'<div class="col-sm-3" style="margin:0; padding:0;"><strong>{{qspayments.amount | currency: \'\'}}</strong></div>'+
										'</div>'+
										'<div class="col-sm-12" style="margin:0; padding:0;">'+
											'<div class="col-sm-9" style="margin:0; padding:0;"><strong>{{qsposchange.changedesc}}</strong></div>'+
											'<div class="col-sm-3" style="margin:0; padding:0;"><strong>{{qsposchange.totalchange | currency: \'\'}}</strong></div>'+
										'</div>'+
									'</div>'+
								'</div>'+
							'</div>'+
						'</div>')($scope));
					posData.QuickSaleTotal(postdata)
					.success(function(data){
						if(data.DiscountSuccess == true){
							$scope.qsTotalDiscountShow = false;
							$scope.qsTotalDiscountHide = true;
							$scope.qsDiscount = data.Discount;
						}else{
							$scope.qsTotalDiscountShow = true;
							$scope.qsTotalDiscountHide = false;
						}

						$scope.qsEBT = data.EBT;
						$scope.qsNonEBT = data.NonEBT;
						if(data.EBTSuccess == true){
							$scope.qsEBTShow = false;
							$scope.qsNonEBTShow = false;
						}else{
							$scope.qsEBTShow = true;
							$scope.qsNonEBTShow = true;
						}

						$scope.qstotals = data.Totals;
						$scope.qsShowTax  = data.Tax;
						$scope.qsposchange = data.Change;
						$scope.qsAllPayments = data.Payments;
					}).then(function(){
						scrollOrderListDown();
						scrollTotalDown();
					})
				})
			}else{
				$(".listitems").html('');
				$(".OHSlistitemsTotal").html('');
				RowReceiptHeaderUnique = 0;
				GlobalReceiptHeaderUnique = 0;
				GlobalReceiptNumber = '';	
			}
		})
	}

	/*
	|-------------------------------------------------------------------------
	|Quick Recall Item CheckBox
	|-------------------------------------------------------------------------
	*/
	$(document).on('click', '.qrec', function(){
		var id = $('input[type=checkbox][name=groupqrec]:checked').attr('id');
		var parentid = $('input[type=checkbox][name=groupqrec]:checked').attr('class').split(' ')[2];
		if(id == parentid){
			if($(this).attr('id') != id){
				$('#'+id).prop('checked', false);
			}else{
				$('.'+id).prop('checked', true);
			}
		}
	});
	
	/*Popup Quantity*/
	var populateQRNumpadQuantity = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-quantity").append('<div id="quantity_numpad" style="background: #144766; color:#EEE;"></div>');
			$("#quantity_numpad").html('');
			$("#quantity_numpad").append('<h4 style="text-align:center;">Enter New Quantity</h4>');
			$("#quantity_numpad").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="qrec_qty_field" class="hdfield" maxlength="'+QuantityInputLimit+'" style="color:#000;">'+
				'<div id="keyboard_qrec_quantity"></div>'+
			'</form>'+
			'');
			def.resolve();
		},100);
		return def.promise();
	}
		
	var WindowPopupQRecQuantity = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-quantity").jqxWindow({
				height: 390,
				minWidth: 300,
				title: "Quantity Change",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-quantity').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadQRecQuantity = function(form_name){
		var def = $.Deferred();
		populateQRNumpadQuantity(form_name)
		.then(function(){
			$('#keyboard_qrec_quantity').hdkeyboard({
				layout: "numbers_only",
				input: $('#qrec_qty_field')
			});
			def.resolve();
		});
		return def.promise();
	}
	/*End Quantity*/

	var QuickRecallItemArray = [];
	$(document).on('click', '#btn-reorder', function(){
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				var postdata="ReceiptHeaderUnique="+GlobalReceiptHeaderUnique;
				posData.QRCheckReceiptStatus(postdata)
				.success(function(data){
					if(data.success){
						$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
						$("#messageNotification").jqxNotification("closeAll");
						QuickRecallItemArray = [];
						var QuantityNumpadOpen = false;
						$('input[type=checkbox][name=groupqrec]:checked').each(function(){
							var chkqId = $(this).attr('id');
							QuickRecallItemArray.push(chkqId);
							var Quantity = $("#"+chkqId).find("div:first").text();
							if(Quantity > 1){
								QuantityNumpadOpen = true;
							}
						});

						if(QuantityNumpadOpen){
							NumpadQRecQuantity('quick_recall_adjust_qty')
							.then(function(){
								WindowPopupQRecQuantity()
								.then(function(){
									$("#qrec_qty_field").val('');
									
									setTimeout(function(){
										$("#qrec_qty_field").select();
										$("#qrec_qty_field").focus();
									},100);
								})
							})
						}else{
							if(QuickRecallItemArray.length > 0){
								QuickRecallReOrder(0);
							}else{
								var msg = 'Please select item first';
								NumpadAlertClose('cannot_open_receipt', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
								})
							}
						}
					}else{
						NumpadAlertClose('cannot_open_receipt', data.msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
						})
					}
				})
			}else{
				var msg = result.msg;
				NumpadAlertClose('cannot_open_receipt', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
				})
			}
		})
	})

	$(document).on('submit', '#quick_recall_adjust_qty', function(e){
		e.preventDefault();
		var Quantity = $("#qrec_qty_field").val();
		if(Quantity > 0){
			QuickRecallReOrder(Quantity);
			$("#dialog-numpad-quantity").jqxWindow('close');
		}else{
			var msg = 'Quantity cannot be 0';
			NumpadAlertClose('cannot_add_quantity', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})

	var QuickRecallReOrder = function(Quantity){
		var def = $.Deferred();
		var rowindex = $('#listOnHoldSale').jqxGrid('getselectedrowindex');
		var rowid = $('#listOnHoldSale').jqxGrid('getrowid', rowindex);
		var rowdata = $("#listOnHoldSale").jqxGrid('getrowdatabyid', rowid);

		var postdata ="reorder_q_items="+JSON.stringify(QuickRecallItemArray);
				postdata+="&Quantity="+Quantity;
				postdata+="&ReceiptHeaderUnique="+rowdata.Unique;
				postdata+="&SplitUnique="+rowdata.SplitUnique;
		posData.QReOrder(postdata)
		.success(function(data){
			if(data.can_reorder == false){
					NumpadAlertClose('cannot_reorder', data.msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					})
					return false;
			}

			if(data.reorder){
				// $('#listOnHoldSale').jqxGrid('selectrow', rowindex); 
				// return false;
				var postdata ="ReceiptHeaderUnique="+rowdata.Unique;
				posData.KitchenPrintReceipt(postdata)
				.success(function(data){
						$("#dialog-numpad-alert").jqxWindow('close');
				})
				
				posData.GetItemsOnHoldSale(postdata)
				.success(function(data){
					$(".listitems").html('');
					$(".OHSlistitemsTotal").html('');
					$.each(data, function(index, value){
						if(value.Completed || value.Remove == 2){
							if(value.Indent == false){
								$(".listitems").append(
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-2" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-4" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
									'</div>'
								);
							}else{
								$(".listitems").append(
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">&nbsp;</div>'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-4" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
									'</div>'
								);
							}
						}else{
							if(value.Indent == false){
								$(".listitems").append(''+
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-2" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-3" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
										'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">'+
										'	<label><input type="checkbox" id="'+value.Unique+'" name="groupqrec" class="radio1 qrec '+value.ParentUnique+'" /></label>'+
										'</div>'+
									'</div>'+
								'');
							}else{
								$(".listitems").append(''+
									'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">&nbsp;</div>'+
										'<div class="col-sm-1" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
										'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
										'<div class="col-sm-3" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
										'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">'+
										'	<label><input type="checkbox" id="'+value.Unique+'" name="groupqrec" class="radio1 qrec '+value.ParentUnique+'" /></label>'+
										'</div>'+
									'</div>'+
								'');
							}
						}
						
					})
				}).then(function(){
					$(".OHSlistitemsTotal").append($compile('<div class="totals">'+
						'<div class="totals">'+
							'<div ng-repeat="qstotal in qstotals">'+
								'<div class="col-sm-12 alignlabels" style="margin:0; padding:0;">'+
										'<div class="col-sm-5">'+
											'<div class="col-sm-12 alignlabels text-right" ng-hide="qsEBTShow" style="margin:0; padding:0;">'+
												'<div class="col-sm-6" style="margin:0; padding:0;"><strong>EBT</strong></div>'+
												'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsEBT.EBTtotal | currency:\'\'}}</strong></div>'+
											'</div>'+
											
											'<div class="col-sm-12 alignlabels text-right" ng-hide="qsNonEBTShow" style="margin:0; padding:0;">'+
												'<div class="col-sm-6" style="margin:0; padding:0;"><strong>Non-EBT</strong></div>'+
												'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsNonEBT.NonEBTtotal | currency:\'\'}}</strong></div>'+
											'</div>'+
											
											'<div class="col-sm-12 alignlabels text-left" ng-hide="qsTotalDiscountShow" style="margin:0; padding:0;">'+
												'<div class="col-sm-6" style="margin:0; padding:0;"><strong>Disc</strong></div>'+
												'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsDiscount.TotalDiscount | currency:\'\'}}</strong></div>'+
											'</div>'+
										'</div>'+
										'<div class="col-sm-7 text-right" style="padding: 0; margin:0;">'+
											'<div class="col-sm-12 alignlabels text-right" style="margin:0; padding:0;">'+
												'<div class="col-sm-7 text-right" style="margin:0; padding:0;"><strong>SUB TOTAL</strong></div>'+
												'<div class="col-sm-5 text-right" style="margin:0; padding:0;"><strong>{{qstotal.SubTotal | currency: \'\'}}</strong></div>'+
											'</div>'+
											'<div class="col-sm-12 alignlabels text-right" ng-if="qstotal.Tip != 0" style="margin:0; padding:0;">'+
												'<div class="col-sm-7" style="margin:0; padding:0;"><strong>'+$("#AdjustTipButtonLabel").val()+'</strong></div>'+
												'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstotal.Tip | currency: \'\'}}</strong></div>'+
											'</div>'+
											'<div class="col-sm-12 alignlabels text-right" ng-repeat="qstax in qsShowTax" style="margin:0; padding:0;">'+
												'<div class="col-sm-7" style="margin:0; padding:0;"><strong>{{qstax.Description}}</strong></div>'+
												'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstax.TotalTax | currency: \'\'}}</strong></div>'+
											'</div>'+
											'<div class="col-sm-12 text-right" style="margin:0; padding:0;"><strong>============</strong></div>'+
											'<div class="col-sm-12 alignlabels text-right" style="margin:0; padding:0;">'+
												'<div class="col-sm-7" style="margin:0; padding:0;"><strong>TOTAL</strong></div>'+
												'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstotal.Total | currency: \'\'}}</strong></div>'+
											'</div>'+
										'</div>'+
									'</div>'+
									'<div class="qspayments" id="payments">'+
										'<div class="col-sm-12" style="margin:0; padding:0;" ng-repeat="qspayments in qsAllPayments">'+
											'<div class="col-sm-9" style="margin:0; padding:0;"><strong>{{qspayments.paymentname}} * {{payments.cardno}}</strong></div>'+
											'<div class="col-sm-3" style="margin:0; padding:0;"><strong>{{qspayments.amount | currency: \'\'}}</strong></div>'+
										'</div>'+
										'<div class="col-sm-12" style="margin:0; padding:0;">'+
											'<div class="col-sm-9" style="margin:0; padding:0;"><strong>{{qsposchange.changedesc}}</strong></div>'+
											'<div class="col-sm-3" style="margin:0; padding:0;"><strong>{{qsposchange.totalchange | currency: \'\'}}</strong></div>'+
										'</div>'+
									'</div>'+
								'</div>'+
							'</div>'+
						'</div>')($scope));
					posData.QuickSaleTotal(postdata)
					.success(function(data){
						if(data.DiscountSuccess == true){
							$scope.qsTotalDiscountShow = false;
							$scope.qsTotalDiscountHide = true;
							$scope.qsDiscount = data.Discount;
						}else{
							$scope.qsTotalDiscountShow = true;
							$scope.qsTotalDiscountHide = false;
						}

						$scope.qsEBT = data.EBT;
						$scope.qsNonEBT = data.NonEBT;
						if(data.EBTSuccess == true){
							$scope.qsEBTShow = false;
							$scope.qsNonEBTShow = false;
						}else{
							$scope.qsEBTShow = true;
							$scope.qsNonEBTShow = true;
						}

						$scope.qstotals = data.Totals;
						$scope.qsShowTax  = data.Tax;
						$scope.qsposchange = data.Change;
						$scope.qsAllPayments = data.Payments;
						def.resolve();
					}).then(function(){
						scrollOrderListDown();
						scrollTotalDown();
					})

					
				})
			}
		})
		return def.promise();
	}

	var populateQuickRecallReasonList = function(form_name){
		var def = $.Deferred();
		posData.QuickRecallLoadReasonList()
		.success(function(data){
			$("#dialog-reason-list").append('<div id="reason-list-container" style="background: #144766; color:#EEE;"></div>');
			$("#reason-list-container").html('');
			$("#reason-list-container").append(data.html);
			$("#reason-list-container").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
				'<div id="keyboard_qr"></div>'+
			'</form>'+
			'');
			ReasonID = data.checkedItem;
			def.resolve();
		})
		return def.promise();
	}

	var WindowPopupQuickRecallReason = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#dialog-reason-list").jqxWindow({
				height: 390,
				minWidth: 300,
				title: "Reason",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#dialog-reason-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var ViewQuickRecallReasonList = function(form_name){
		var def = $.Deferred();
		populateQuickRecallReasonList(form_name)
		.then(function(){
			$('#keyboard_qr').hdkeyboard({
				layout: "item_reason",
				input: $('#quantity_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	$(document).on('click', '#btn-qr-remove', function(){
		var rowindex = $('#listOnHoldSale').jqxGrid('getselectedrowindex');
		var rowid = $('#listOnHoldSale').jqxGrid('getrowid', rowindex);
		var rowdata = $("#listOnHoldSale").jqxGrid('getrowdatabyid', rowid);

		$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
		$("#messageNotification").jqxNotification("closeAll");
		
		QuickRecallItemArray = [];
		$('input[type=checkbox][name=groupqrec]:checked').each(function(){
			var chkqId = $(this).attr('id');
			QuickRecallItemArray.push(chkqId);
		})
		
		if(QuickRecallItemArray.length > 0){
			posData.CashInServerCheckByUserId()
			.success(function(result){
				if(result.cashin){
					var postdata="ReceiptHeaderUnique="+rowdata.Unique;
							postdata+="&SplitUnique="+rowdata.SplitUnique;
					posData.QRCheckReceiptStatus(postdata)
					.success(function(data){
						if(data.can_reopen = false){
								NumpadAlertClose('cannot_remove_item', data.msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
								})
								return false;
						}

						if(data.success){

							var postdata ="remove_q_items="+JSON.stringify(QuickRecallItemArray);
							posData.QuickRecallRemoveItemCheck(postdata)
							.success(function(data){
								if(data.RewardDiscount){
									var msg = 'Discount or Reward is not refundable';
									NumpadAlertClose('cannot_remove_item', msg)
									.then(function(){
										WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
									})
								}else{
									if(data.ItemCount > 0){
										var postdata ="FunctionButton=RemoveItem";
										posData.CheckUserManagerCookie(postdata)
										.success(function(data){
											if(data.prompt){
												$scope.FunctionButton = 'RemoveItem';
												NumpadPasscode('qr_remove_item_passcode')
												.then(function(){
													WindowPopupPasscode('Remove Item')
													.then(function(){
														$("#number_field").focus();
													})
												})
											}else{
												ViewQuickRecallReasonList('quick_recall_remove_item')
												.then(function(){
													WindowPopupQuickRecallReason();
													$("#dialog-numpad-passcode").jqxWindow('close');
												})
											}
										})
									}else{
										posData.QuickRecallRemoveItem(postdata)
										.success(function(data){
											ReloadQuickRecallItemList(GlobalReceiptHeaderUnique);
										})
									}
								}
							})
						}else{
							NumpadAlertClose('cannot_open_receipt', data.msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
							})
						}
					})
				}else{
					var msg = result.msg;
					NumpadAlertClose('cannot_open_receipt', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					})
				}
			})

		}else{
			var msg = 'Please select item first';
			NumpadAlertClose('cannot_open_receipt', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})

	$(document).on('click', '#quick_recall_remove_item .button_proceed', function(){
		var postdata ="remove_q_items="+JSON.stringify(QuickRecallItemArray);
			postdata+="&ReturnUnique="+ReasonID;
		posData.QuickRecallRemoveItemReason(postdata)
		.success(function(data){
			ReloadQuickRecallItemList(GlobalReceiptHeaderUnique);
			$("#dialog-reason-list").jqxWindow('close');
		})
	})

	$(document).on('submit', '#qr_remove_item_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						ViewQuickRecallReasonList('quick_recall_remove_item')
						.then(function(){
							WindowPopupQuickRecallReason();
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}	
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#quick_recall_remove_item .button_q_cancel', function(){
		$("#dialog-reason-list").jqxWindow('close');
	})

	/*
	|---------------------------------------------------------------------------|
	| Quick Recall Discount Item
	|---------------------------------------------------------------------------|
	*/
	var populateQuickRecallDiscountList = function(form_name){
		var def = $.Deferred();
		$("#dialog-discount-list").append('<div id="discount-list-container" style="background: #004a73"></div>');
		$("#discount-list-container").html('');
		posData.QuickLoadDiscountList()
		.success(function(data){
			$("#discount-list-container").append($compile(data.html)($scope));
			$("#discount-list-container").append(
				'<form id="'+form_name+'">'+
					'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
					'<div id="keyboard_qr_discount"></div>'+
				'</form>'
			);
			def.resolve();
		})
		return def.promise();
	}
		
	var WindowQuickRecallDiscountList = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-discount-list").jqxWindow({
				width: '50%', 
				height: '60%',
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-discount-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var QuickRecallDiscountListView = function(form_name, html){
		var def = $.Deferred();
		populateQuickRecallDiscountList(form_name, html)
		.then(function(){
			$('#keyboard_qr_discount').hdkeyboard({
				layout: "item_reason",
				input: $('#text_field')
			});
			setTimeout(function(){
				def.resolve();
			},100);
		});
		return def.promise();
	}

	$(document).on('click', '#btn-qr-discount', function(){
		$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
		$("#messageNotification").jqxNotification("closeAll");
		QuickRecallItemArray = [];
		$('input[type=checkbox][name=groupqrec]:checked').each(function(){
			var chkqId = $(this).attr('id');
			QuickRecallItemArray.push(chkqId);
		})

		if(QuickRecallItemArray.length > 0){
			posData.CashInServerCheckByUserId()
			.success(function(result){
				if(result.cashin){
					var postdata ="FunctionButton=DiscountItem";
					posData.CheckUserManagerCookie(postdata)
					.success(function(data){
						if(data.prompt){
							$scope.FunctionButton = 'DiscountItem';
							NumpadPasscode('discount_item_onhold_passcode')
							.then(function(){
								WindowPopupPasscode('Discount Item')
								.then(function(){
									$("#number_field").focus();
								})
							})
						}else{
							QuickRecallDiscountListView('quick_recall_item_discount')
							.then(function(){
								WindowQuickRecallDiscountList('Item Discount');
							})

							//discount_item_process();
						}
					})

					
				}else{
					var msg = result.msg;
					NumpadAlertClose('qc_discount_error', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					})
				}
			})

		}else{
			var msg = 'Please select item first';
			NumpadAlertClose('qc_discount_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})

	/*
	|--------------------------------------------------------------------------|
	| Quick Recall Discount Numpad
	|--------------------------------------------------------------------------|
	*/
	var populateNumpadQRecDiscount = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-discount").append('<div id="discount_numpad" style="background: #144766; color:#EEE;"></div>');
			$("#discount_numpad").html('');
			if(form_name == 'qrec_item_discount_percent_prompt'){
				$("#discount_numpad").append('<h4 style="text-align:center;">Enter % Discount</h4>');
			}else if(form_name == 'qrec_item_discount_dollar_prompt'){
				$("#discount_numpad").append('<h4 style="text-align:center;">Enter $ Discount</h4>');
			}
			$("#discount_numpad").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="number_field" class="hdfield" maxlength="'+NumpadPriceInputLimit+'" style="color:#000">'+
				'<div id="keyboard_qrec_numpad_disc"></div>'+
			'</form>');
			def.resolve();
		},100);
		return def.promise();
	}
	
	var WindowPopupQRecDiscount = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-discount").jqxWindow({
				height: 440,
				width: 300,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-discount').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadQRecDiscount = function(discount_type, discount_list = false){
		var def = $.Deferred();
		var uselayout = 'numeric';
		if(discount_list){
			uselayout = 'custom2';
		}
		populateNumpadQRecDiscount(discount_type)
		.then(function(){
			$('#keyboard_qrec_numpad_disc').hdkeyboard({
				layout: uselayout,
				input: $('#number_field')
			});
			setTimeout(function(){
				$("#number_field").focus();
				def.resolve();
			},100);
		});
		return def.promise();
	}

	/*
	|--------------------------------------------------------------------------|
	| Quick Recall Discount Proceed
	|--------------------------------------------------------------------------|
	*/
	$(document).on('click', '#quick_recall_item_discount .button_proceed', function(){
		var DiscSel = $('input[type=radio][name=group1]:checked').attr('id');
			DiscountItemUnique = DiscSel.split('=')[0];
			DiscountItemPrice  = DiscSel.split('=')[1];
			DiscountType	   = DiscSel.split('=')[2];
			DiscountName	   = DiscSel.split('=')[5];
			DiscountUnique	   = DiscSel.split('=')[4];
		if(DiscSel){
			if(DiscountItemPrice){	
				var postdata ="discount_q_arr="+JSON.stringify(QuickRecallItemArray);
					postdata+="&ItemUnique="+DiscountItemUnique;
					postdata+="&SellPrice="+parseFloat(DiscountItemPrice).toFixed(2);
					postdata+="&DiscountType="+DiscountType;
					postdata+="&DiscountName="+DiscountName;
					postdata+="&DiscountUnique="+DiscountUnique;
				posData.QuickRecallDiscountProceed(postdata)
				.success(function(data){
					ReloadQuickRecallItemList(GlobalReceiptHeaderUnique);
					$("#dialog-discount-list").jqxWindow('close');
				})
			}else{
				NumpadQRecDiscount('qrec_item_discount_percent_prompt', true)
				.then(function(){
					WindowPopupQRecDiscount('Discount Item Percent')
					.then(function(){
						$('#number_field').val('0.00');
						$('#number_field').focus();
						setTimeout(function(){
							$('#number_field').select();
						},100);
					})
				})
			}
		}else{
			var msg = 'Please choose discount';
			NumpadAlertClose('qc_discount_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})
	/*
	|--------------------------------------------------------------------------|
	| Quick Recall Discount Cancel
	|--------------------------------------------------------------------------|
	*/
	$(document).on('click', '#quick_recall_item_discount .button_q_cancel', function(){
		$("#dialog-discount-list").jqxWindow('close');
	})
	/*
	|--------------------------------------------------------------------------|
	| Quick Recall Discount Percent
	|--------------------------------------------------------------------------|
	*/
	$(document).on('submit', '#qrec_item_discount_percent_prompt', function(e){
		e.preventDefault();
		if($("#number_field").val()){
			var DiscSel = $('input[type=radio][name=group1]:checked').attr('id');
				DiscountItemUnique = DiscSel.split('=')[0];
				DiscountItemPrice  = $('#number_field').val();
				DiscountType	   = DiscSel.split('=')[2];
				DiscountName	   = DiscSel.split('=')[5];
				DiscountUnique	   = DiscSel.split('=')[4];

			var postdata ="discount_q_arr="+JSON.stringify(QuickRecallItemArray);
				postdata+="&ItemUnique="+DiscountItemUnique;
				postdata+="&SellPrice="+parseFloat(DiscountItemPrice).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
				postdata+="&DiscountName="+DiscountName;
				postdata+="&DiscountUnique="+DiscountUnique;
			posData.QuickRecallDiscountProceed(postdata)
			.success(function(data){
				ReloadQuickRecallItemList(GlobalReceiptHeaderUnique);
				$("#dialog-numpad-discount").jqxWindow('close');
				$("#dialog-discount-list").jqxWindow('close');
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close');
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('qrec_discount_item_percent_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Percent')
			});
		}
	})

	var ReloadQuickRecallItemList = function(Unique){
		var postdata ="ReceiptHeaderUnique="+Unique;
		posData.GetItemsOnHoldSale(postdata)
		.success(function(data){
			$(".listitems").html('');
			$(".OHSlistitemsTotal").html('');
			$.each(data, function(index, value){
				if(value.Completed || value.Remove == 2){
					if(value.Indent == false){
						$(".listitems").append(''+
							'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
								'<div class="col-sm-2" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
								'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
								'<div class="col-sm-4" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
								//'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">&nbsp;</div>'+
							'</div>'+
						'');
					}else{
						$(".listitems").append(''+
							'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
								'<div class="col-sm-1" style="padding: 0; margin: 0;">&nbsp;</div>'+
								'<div class="col-sm-1" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
								'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
								'<div class="col-sm-4" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
								//'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">&nbsp;</div>'+
							'</div>'+
						'');
					}
				}else{
					if(value.Indent == false){
						$(".listitems").append(''+
							'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
								'<div class="col-sm-2" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
								'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
								'<div class="col-sm-3" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
								'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">'+
								'	<label><input type="checkbox" id="'+value.Unique+'" name="groupqrec" class="radio1 qrec '+value.ParentUnique+'" /></label>'+
								'</div>'+
							'</div>'+
						'');
					}else{
						$(".listitems").append(''+
							'<div style="padding: 0; margin: 0;" class="col-sm-12 quick_recall_item" id="'+value.Unique+'">'+
								'<div class="col-sm-1" style="padding: 0; margin: 0;">&nbsp;</div>'+
								'<div class="col-sm-1" style="padding: 0; margin: 0;">'+value.Quantity+'</div>'+
								'<div class="col-sm-6" style="padding: 0; margin: 0; word-wrap: break-word;">'+value.Description+'</div>'+
								'<div class="col-sm-3" align="right" style="padding: 0; margin: 0;">'+value.SellPrice+'</div>'+
								'<div class="col-sm-1" align="right" style="padding: 0; margin: 0;">'+
								'	<label><input type="checkbox" id="'+value.Unique+'" name="groupqrec" class="radio1 qrec '+value.ParentUnique+'" /></label>'+
								'</div>'+
							'</div>'+
						'');
					}
				}
			})
		}).then(function(){
			$(".OHSlistitemsTotal").append($compile('<div class="totals">'+
				'<div class="totals">'+
					'<div ng-repeat="qstotal in qstotals">'+
						'<div class="col-sm-12 alignlabels" style="margin:0; padding:0;">'+
								'<div class="col-sm-5">'+
									'<div class="col-sm-12 alignlabels text-right" ng-hide="qsEBTShow" style="margin:0; padding:0;">'+
										'<div class="col-sm-6" style="margin:0; padding:0;"><strong>EBT</strong></div>'+
										'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsEBT.EBTtotal | currency:\'\'}}</strong></div>'+
									'</div>'+
									
									'<div class="col-sm-12 alignlabels text-right" ng-hide="qsNonEBTShow" style="margin:0; padding:0;">'+
										'<div class="col-sm-6" style="margin:0; padding:0;"><strong>Non-EBT</strong></div>'+
										'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsNonEBT.NonEBTtotal | currency:\'\'}}</strong></div>'+
									'</div>'+
									
									'<div class="col-sm-12 alignlabels text-left" ng-hide="qsTotalDiscountShow" style="margin:0; padding:0;">'+
										'<div class="col-sm-6" style="margin:0; padding:0;"><strong>Disc</strong></div>'+
										'<div class="col-sm-6 text-right" style="margin:0; padding:0;"><strong>{{qsDiscount.TotalDiscount | currency:\'\'}}</strong></div>'+
									'</div>'+
								'</div>'+
								'<div class="col-sm-7 text-right" style="padding: 0; margin:0;">'+
									'<div class="col-sm-12 alignlabels text-right" style="margin:0; padding:0;">'+
										'<div class="col-sm-7 text-right" style="margin:0; padding:0;"><strong>SUB TOTAL</strong></div>'+
										'<div class="col-sm-5 text-right" style="margin:0; padding:0;"><strong>{{qstotal.SubTotal | currency: \'\'}}</strong></div>'+
									'</div>'+
									'<div class="col-sm-12 alignlabels text-right" ng-if="qstotal.Tip != 0" style="margin:0; padding:0;">'+
										'<div class="col-sm-7" style="margin:0; padding:0;"><strong>Tip</strong></div>'+
										'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstotal.Tip | currency: \'\'}}</strong></div>'+
									'</div>'+
									'<div class="col-sm-12 alignlabels text-right" ng-repeat="qstax in qsShowTax" style="margin:0; padding:0;">'+
										'<div class="col-sm-7" style="margin:0; padding:0;"><strong>{{qstax.Description}}</strong></div>'+
										'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstax.TotalTax | currency: \'\'}}</strong></div>'+
									'</div>'+
									'<div class="col-sm-12 text-right" style="margin:0; padding:0;"><strong>============</strong></div>'+
									'<div class="col-sm-12 alignlabels text-right" style="margin:0; padding:0;">'+
										'<div class="col-sm-7" style="margin:0; padding:0;"><strong>TOTAL</strong></div>'+
										'<div class="col-sm-5" style="margin:0; padding:0;"><strong>{{qstotal.Total | currency: \'\'}}</strong></div>'+
									'</div>'+
								'</div>'+
							'</div>'+
							'<div class="qspayments" id="payments">'+
								'<div class="col-sm-12" style="margin:0; padding:0;" ng-repeat="qspayments in qsAllPayments">'+
									'<div class="col-sm-9" style="margin:0; padding:0;"><strong>{{qspayments.paymentname}} * {{payments.cardno}}</strong></div>'+
									'<div class="col-sm-3" style="margin:0; padding:0;"><strong>{{qspayments.amount | currency: \'\'}}</strong></div>'+
								'</div>'+
								'<div class="col-sm-12" style="margin:0; padding:0;">'+
									'<div class="col-sm-9" style="margin:0; padding:0;"><strong>{{qsposchange.changedesc}}</strong></div>'+
									'<div class="col-sm-3" style="margin:0; padding:0;"><strong>{{qsposchange.totalchange | currency: \'\'}}</strong></div>'+
								'</div>'+
							'</div>'+
						'</div>'+
					'</div>'+
				'</div>')($scope));
			posData.QuickSaleTotal(postdata)
			.success(function(data){
				if(data.DiscountSuccess == true){
					$scope.qsTotalDiscountShow = false;
					$scope.qsTotalDiscountHide = true;
					$scope.qsDiscount = data.Discount;
				}else{
					$scope.qsTotalDiscountShow = true;
					$scope.qsTotalDiscountHide = false;
				}

				$scope.qsEBT = data.EBT;
				$scope.qsNonEBT = data.NonEBT;
				if(data.EBTSuccess == true){
					$scope.qsEBTShow = false;
					$scope.qsNonEBTShow = false;
				}else{
					$scope.qsEBTShow = true;
					$scope.qsNonEBTShow = true;
				}

				$scope.qstotals = data.Totals;
				$scope.qsShowTax  = data.Tax;
				$scope.qsposchange = data.Change;
				$scope.qsAllPayments = data.Payments;
			}).then(function(){
				scrollOrderListDown();
				scrollTotalDown();
			})
		})
	}

	$(document).on('rowdoubleclick', '#listOnHoldSale', function(event){
		var rowindex = event.args.rowindex;
		var datafield = event.args.datafield;
		var row = $(this).jqxGrid('getrowdata', rowindex);
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				GlobalReceiptHeaderUnique = row.Unique;
				var postdata="receiptunique="+row.Unique;
						postdata+="&SplitUnique="+row.SplitUnique;
						postdata+="&FunctionName=Quick Recall";
				posData.OpenReceipt(postdata)
				.success(function(data){
					if(data.success == true){
						if(data.can_open){
							// GetCustomerSave();
							load_data(data);
							PoleDisplayReset();
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$("#barcode_search").focus();
							$("#item-category-container").show();
							$("#payment-view").hide();

							ItemsCategoryView();
							$('#on-hold-sale').jqxWindow('close');
						}else{
							NumpadAlertClose('cannot_open_receipt', data.msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
							})
						}
					}else{
						NumpadAlertClose('cannot_open_receipt', data.msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
						})
					}
				})
			}else{
				NumpadAlertClose('cannot_open_receipt', result.msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
				})
			}
		})
	})

	//-->Printer Check
	var OnHoldPrinterCheck = function(){
		var def = $.Deferred();  
		$('#on-hold-sale').block({message: 'Printing receipt please wait...'})
		posData.OnHoldPrinterCheck()
		.success(function(result){
			if(result.success == true){
				if(result.print == true){
					$('#on-hold-sale').unblock();
					def.resolve();
				}else{
					$('#on-hold-sale').unblock();
					var msg="Printer error, please check <br/>";
					msg+="1. Printer is turned on. <br/>";
					msg+="2. Check printer paper. <br/>";
					msg+="3. Restart printer.";
					NumpadAlertClose('invalid_passcode', msg)
					.then(function(){
						WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
					})
					setTimeout($.unblockUI, 100);
				}
			}else{
				$('#on-hold-sale').unblock();
			}
		}).catch(function(result){
			if(LogDisplay == 1){
				var msg = result.data+'<br/>'
					msg+= notifyMessage;
				NumpadAlertClose('PrinterCheck_error', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span> PrinterCheck');
				});
			}else{
				var msg = 'Technical issue '+'<br/>'
					msg+= notifyMessage;		
				NumpadAlertClose('printer_check_error', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span> PrinterCheck');	
				});
			}
			
		}).finally(function() {
			//console.log("finally finished repos");
		})
		return def.promise();
	};

	//-->Print Receipt button
	$(document).on("click", "#btn-print-receipt", function(e){
		e.preventDefault();
		var printmsg = "Printing receipt"+"<br/>";
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: printmsg }); 

		$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
		$("#messageNotification").jqxNotification("closeAll");
		if(GlobalReceiptHeaderUnique > 0){
			OnHoldPrinterCheck()
			.then(function(){
				posData.RePrintReceipt2(GlobalReceiptHeaderUnique)
				.success(function(data){
					load_data(data);
					setTimeout($.unblockUI, 100);
				})
			})
		}else{
			var msg = "Please select receipt number";
			NumpadAlertClose('recall_open_receipt', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span> Recall / Print Receipt');
			});
		}
	})

	var Recallurl = base_url + "pos/cashier/recall/location";
	var Recallsource = {
		datatype: "json",
		datafields: [
			{ name: 'Unique' },
			{ name: 'LocationName' }
		],
		url: Recallurl,
		async: false
	};
	var RecalldataAdapter = new $.jqx.dataAdapter(Recallsource);

	var populateRecallFilter = function(form, html){
		var def = $.Deferred();
		$("#onhold_filter_recall").append('<div class="onhold_filter_recall_container" style="background: #144766; color:#EEE;"></div>');
		$(".onhold_filter_recall_container").html('');
		setTimeout(function(){
			$(".onhold_filter_recall_container").append(html);
			$(".onhold_filter_recall_container").append(
				'<form id="'+form+'">'+
					'<input type="text" id="recall_number_field" style="display:none;">'+
					'<div id="recall_keyboard"></div>'+
				'</form>'
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupRecallFilter = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			var ResoWidth       = $("#on-hold-sale").width();
			var ResoHeight      = $("#on-hold-sale").height();
			var useFilterHeight = (ResoHeight / 2);
			$("#onhold_filter_recall").jqxWindow({
				height: useFilterHeight,
				width: '30%',
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#onhold_filter_recall').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var RecallFilter = function(form_name, html){
		var def = $.Deferred();
		populateRecallFilter(form_name, html)
		.then(function(){
			$('#recall_keyboard').hdkeyboard({
				layout: "item_reason",
				input: $('#recall_number_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	$(document).on("click", "#btn-filter", function(){
		$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
		$("#messageNotification").jqxNotification("closeAll");
		posData.RecallFilter()
		.success(function(data){
			RecallFilter('recall_filter', data.html)
			.then(function(){
				WindowPopupRecallFilter('Filter')
				.then(function(){
					$("#recall_date_from").jqxDateTimeInput({width: '100%', height: 40, formatString: 'MM/dd/yyyy'});
					$("#recall_date_to").jqxDateTimeInput({width: '100%', height: 40, formatString: 'MM/dd/yyyy'});
					$("#recall_location").jqxComboBox({ source: RecalldataAdapter, selectedIndex: 0, displayMember: "LocationName", valueMember: "Unique", height: 40, width:'100%'});
				
					$("#recall_filter").on("click", ".button_proceed", function(e){
						e.preventDefault();
						$("#btn-use-receipt").text('Receipt');
						$("#btn-use-receipt").val('');
						var RecallDatefrom  = $("#recall_date_from").val();
						var RecallDateto    = $("#recall_date_to").val();
						var RecallLocation  = $("#recall_location").val();
						var postdata = "DateFrom="+$filter('date')(new Date(RecallDatefrom), 'yyyy-MM-dd');
							postdata+= "&DateTo="+$filter('date')(new Date(RecallDateto), 'yyyy-MM-dd');
							postdata+= "&Location="+RecallLocation;
							postdata+= "&Attribute=CashierRecallOnHold";
							postdata+= "&Status=5";
						posData.RecallFilterSearch(postdata)
						.success(function(recdata){
								var source = {
									datatype: "json",
									datafields: recdata.type,
									localdata: recdata.result
								};
								
								$('#listOnHoldSale').on('bindingcomplete', function (event) {
									$('#statusrowlistCashierSale').children().css("background-color", "white")
								});

								var dataAdapter = new $.jqx.dataAdapter(source);
								var ColumnHideShow = $("#PrintReceiptOrderNo").val();
								$("#listOnHoldSale").jqxGrid({
									source: dataAdapter
								})
								
								setTimeout(function(){
									$("#listOnHoldSale").jqxGrid('selectrow', 0);
								},100);
								
						})
						$("#onhold_filter_recall").jqxWindow('close');
					})
				})
			})
		})
	})

	//-->Recall filter when close the DOM will remove completely
	$("#onhold_filter_recall").on("close", function(event){
		$("div.onhold_filter_recall_container").remove();
	})
	
	//-->Recall filter Cancel button    
	$(document).on("click", "#recall_filter .button_q_cancel", function(){
		$("#onhold_filter_recall").jqxWindow('close');
	})

	var GlobalReceiptHeaderUnique;
	var proceed = false;
	$scope.OnHoldSale = function(){
		$("#OnHoldSalefunction").attr("disabled", true);
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				posData.CheckSettingRequiredLabel()
				.success(function(data){
					if(data.OnHoldRequireLabel != 1){//-->No Label Required
						//-->Checking if previous item is printed on the kitchen.
						posData.RecallSecondCheck()
						.success(function(seconddata){
							if(seconddata.success == true){
								var OrderTypePopup = $("#POSOrderTypeRequired").val();
								if(OrderTypePopup > 0){ //With Order Type
									if($("#OrderTypeName").val() <= 0){ //Order Type not set
										var postdata ="FunctionButton=OnHold";
										posData.CheckUserManagerCookie(postdata)
										.success(function(CUMdata){
											if(CUMdata.prompt){
												$scope.FunctionButton = 'OnHold';
												NumpadPasscode('onhold_sale_ordertype_no_label_required_w_ordertype_notset_passcode')
												.then(function(){
													WindowPopupPasscode('Recall On Hold')
													.then(function(){
														$("#number_field").focus();
													})
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}else{
												if(seconddata.ordertype == null){
													posData.OrderTypePopupList()
													.success(function(data){
														if(data.OrderType == null || data.OrderType == ''){
															OrderTypeIDApp = data.Default;
															OrderTypeWindowApp('OrderTypeQuickRecall', data.html)
															.then(function(){
																WindowPopupOrderTypeApp('Order type')
															})
														}else{
															// posData.EmptyTransaction()
															posData.EmptyTransactionCompleted()
															.success(function(data){
																OnHoldSalePrintKitchenReceipt();
															})
														}
													})
												}else{
													// posData.EmptyTransaction()
													posData.EmptyTransactionCompleted()
													.success(function(data){
														if(data.success == true){
															OnHoldSalePrintKitchenReceipt();
														}
													})
												}
											}
										})
									}else{ //Order Type already set
										posData.NewSaleQue()
										.success(function(a_data){
											if(a_data.success){
												var postdata ="FunctionButton=OnHold";
												posData.CheckUserManagerCookie(postdata)
												.success(function(CUMdata){
													if(CUMdata.prompt){
														$scope.FunctionButton = 'OnHold';
														NumpadPasscode('onhold_sale_newsaleq_no_label_required_w_ordertype_alreadyset_passcode')
														.then(function(){
															WindowPopupPasscode('On Hold')
															.then(function(){
																$("#number_field").focus();
															})
														})
														$("#OnHoldSalefunction").attr("disabled", false);
													}else{
														// posData.EmptyTransaction()
														posData.EmptyTransactionCompleted()
														.success(function(data){
															if(data.success == true){
																OnHoldSalePrintKitchenReceipt();
															}
														})
													}
												})
											}else{
												posData.EmptyTransaction()
												.success(function(data){
													posData.NewSale()
													.success(function(data){
														if(data.success == true){
															$scope.newsaleid = data.NewSaleId;
															$scope.showModal = false;
															load_data(data);
															// GetCustomerSave();
															PoleDisplayReset();
															setTimeout(function(){
																GetSelectedCustomer();
															},500)
															$("#barcode_search").focus();
															ItemsCategoryView();
															ordertype();
															if($("#TableOrder").val() == 1){
																if($("#PoleDisplay").val() == 2){
																	if(ConnectionPoleDisplay){
																		if(tableconn){
																			tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
																		}
																	}
																}
															}
															ProceedOnHoldSale()
															.then(function(){
																$("#OnHoldSalefunction").attr("disabled", false);
															})
														}
													})
												})
											}
										})		
									}
								}else{ //Withtout Order Type
									posData.NewSaleQue()
									.success(function(b_data){
										if(b_data.success){
											var postdata ="FunctionButton=OnHold";
											posData.CheckUserManagerCookie(postdata)
											.success(function(CUMdata){
												if(CUMdata.prompt){
													$scope.FunctionButton = 'OnHold';
													NumpadPasscode('onhold_sale_newsaleq_label_required_wo_ordertype_passcode')
													.then(function(){
														WindowPopupPasscode('On Hold')
														.then(function(){
															$("#number_field").focus();
														})
													})
													$("#OnHoldSalefunction").attr("disabled", false);
												}else{
													// posData.EmptyTransaction()
													posData.EmptyTransactionCompleted()
													.success(function(data){
														if(data.success == true){
															OnHoldSalePrintKitchenReceipt();
														}
													})
												}
											})
										}else{
											posData.EmptyTransaction()
											.success(function(data){
												posData.NewSale()
												.success(function(data){
													if(data.success == true){
														$scope.newsaleid = data.NewSaleId;
														$scope.showModal = false;
														load_data(data);
														// GetCustomerSave();
														PoleDisplayReset();
														setTimeout(function(){
															GetSelectedCustomer();
														},500)
														$("#barcode_search").focus();
														ItemsCategoryView();
														ordertype();
														if($("#TableOrder").val() == 1){
															if($("#PoleDisplay").val() == 2){
																if(ConnectionPoleDisplay){
																	if(tableconn){
																		tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
																	}
																}
															}
														}
														ProceedOnHoldSale()
														.then(function(){
															$("#OnHoldSalefunction").attr("disabled", false);
														})
													}
												})
											})
										}
									})
								}
							}else{
								//Previous Item(s) printed on the kitchen
								if(OrderedItemCount){//When clicked recall tab button with item(s) added.
									var OrderTypePopup = $("#POSOrderTypeRequired").val();
									if(OrderTypePopup > 0){//Order Type Required
										if($("#OrderTypeName").val() <= 0){
											var postdata ="FunctionButton=OnHold";
											posData.CheckUserManagerCookie(postdata)
											.success(function(CUMdata){
												if(CUMdata.prompt){
													$scope.FunctionButton = 'OnHold';
													NumpadPasscode('onhold_sale_ordertype_without_print_ordertype_notset_passcode')
													.then(function(){
														WindowPopupPasscode('On Hold')
														.then(function(){
															$("#number_field").focus();
														})
													})
													$("#OnHoldSalefunction").attr("disabled", false);
												}else{
													if(seconddata.ordertype == null){
														posData.OrderTypePopupList()
														.success(function(data){
															if(data.OrderType == null || data.OrderType == ''){
																OrderTypeIDApp = data.Default;
																OrderTypeWindowApp('OrderTypeQuickRecallWithoutPrint', data.html)
																.then(function(){
																	WindowPopupOrderTypeApp('Order type')
																})
															}else{
																// posData.EmptyTransaction()
																posData.EmptyTransactionCompleted()
																.success(function(data){
																	if(data.success == true){
																		OnHoldSalePrintKitchenReceipt();
																	}
																})
															}
														})
													}else{
														// posData.EmptyTransaction()
														posData.EmptyTransactionCompleted()
														.success(function(data){
															if(data.success == true){
																OnHoldSalePrintKitchenReceipt();
															}
														})
													}
												}
											})
										}else{
											posData.NewSaleQue()
											.success(function(c_data){
												var postdata ="FunctionButton=OnHold";
												posData.CheckUserManagerCookie(postdata)
												.success(function(CUMdata){
													if(CUMdata.prompt){
														$scope.FunctionButton = 'OnHold';
														NumpadPasscode('onholdsale_sale_newsaleq_kitchen_print_ordertype_isset_passcode')
														.then(function(){
															WindowPopupPasscode('On Hold')
															.then(function(){
																$("#number_field").focus();
															})
														})
														$("#OnHoldSalefunction").attr("disabled", false);
													}else{
														// posData.EmptyTransaction()
														posData.EmptyTransactionCompleted()
														.success(function(data){
															if(data.success == true){
																OnHoldSalePrintKitchenReceipt();
															}
														})
													}
												})
											})
										}
									}else{
										posData.NewSaleQue()
										.success(function(c_data){
											var postdata ="FunctionButton=OnHold";
											posData.CheckUserManagerCookie(postdata)
											.success(function(CUMdata){
												if(CUMdata.prompt){
													$scope.FunctionButton = 'OnHold';
													NumpadPasscode('onhold_sale_newsaleq_no_ordertype_kitchen_print_passcode')
													.then(function(){
														WindowPopupPasscode('On Hold')
														.then(function(){
															$("#number_field").focus();
														})
													})
													$("#OnHoldSalefunction").attr("disabled", false);
												}else{
													// posData.EmptyTransaction()
													posData.EmptyTransactionCompleted()
													.success(function(data){
														if(data.success == true){
															OnHoldSalePrintKitchenReceipt();
														}
													})
												}
											})
										})
									}
								}else{//No Item added yet
									posData.NewSaleQue()
									.success(function(d_data){
										if(d_data.success){
											var postdata ="FunctionButton=OnHold";
											posData.CheckUserManagerCookie(postdata)
											.success(function(CUMdata){
												if(CUMdata.prompt){
													$scope.FunctionButton = 'OnHold';
													NumpadPasscode('onhold_sale_newsaleq_no_kitchen_print_passcode')
													.then(function(){
														WindowPopupPasscode('On Hold')
														.then(function(){
															$("#number_field").focus();
														})
													})
													$("#OnHoldSalefunction").attr("disabled", false);
												}else{
													// posData.EmptyTransaction()
													posData.EmptyTransactionCompleted()
													.success(function(data){
														if(data.success == true){
															OnHoldSalePrintKitchenReceipt();
														}
													})
												}
											})
										}else{
											ProceedOnHoldSale()
											.then(function(){
												$("#OnHoldSalefunction").attr("disabled", false);
											})	
										}
									})
								}
							}
						})
						setTimeout(function(){
							$("#OnHoldSalefunction").attr("disabled", false);
						},1000);
					}else{ //Label Required
						posData.NewSaleQue()
						.success(function(data){
							if(data.success == true){
								var OrderTypePopup = $("#POSOrderTypeRequired").val();
								if(OrderTypePopup > 0){
									if($("#OrderTypeName").val() <= 0){
										var postdata ="FunctionButton=OnHold";
										posData.CheckUserManagerCookie(postdata)
										.success(function(CUMdata){
											if(CUMdata.prompt){
												$scope.FunctionButton = 'OnHold';
												NumpadPasscode('onhold_sale_label_required_ordertype_passcode')
												.then(function(){
													WindowPopupPasscode('On Hold')
													.then(function(){
														$("#number_field").focus();
													})
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}else{
												posData.OrderTypePopupList()
												.success(function(data){
													if(data.OrderType == null || data.OrderType == ''){
														OrderTypeIDApp = data.Default;
														OrderTypeWindowApp('OrderTypeQuickRecallRequiredLabel', data.html)
														.then(function(){
															WindowPopupOrderTypeApp('Order type')
														})
													}else{
														QuickOnHoldRequiredLabel();
													}
												})
											}
										})
									}else{
										var postdata ="FunctionButton=OnHold";
										posData.CheckUserManagerCookie(postdata)
										.success(function(CUMdata){
											if(CUMdata.prompt){
												$scope.FunctionButton = 'OnHold';
												NumpadPasscode('onhold_sale_label_required_no_ordertype_passcode')
												.then(function(){
													WindowPopupPasscode('On Hold')
													.then(function(){
														$("#number_field").focus();
													})
												})
												$("#OnHoldSalefunction").attr("disabled", false);
											}else{
												QuickOnHoldRequiredLabel();
											}
										})
									}
								}else{
									var postdata ="FunctionButton=OnHold";
									posData.CheckUserManagerCookie(postdata)
									.success(function(CUMdata){
										if(CUMdata.prompt){
											$scope.FunctionButton = 'OnHold';
											NumpadPasscode('onhold_sale_label_required_no_ordertype_passcode')
											.then(function(){
												WindowPopupPasscode('On Hold')
												.then(function(){
													$("#number_field").focus();
												})
											})
											$("#OnHoldSalefunction").attr("disabled", false);
										}else{
											QuickOnHoldRequiredLabel();
										}
									})
								}
							}else{
								ProceedOnHoldSale();
							}
						})
						setTimeout(function(){
							$("#OnHoldSalefunction").attr("disabled", false);
						},1000);
					}
				})
			}else{
				var msg = result.msg;
				NumpadAlertClose('onhold_disabled', msg)
				.then(function(){
					WindowPopupAlert("Information")
				})
				$("#OnHoldSalefunction").attr("disabled", false);
			}
		})
	}

	$(document).on('submit', '#onhold_sale_ordertype_no_label_required_w_ordertype_notset_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var OrderTypePopup = $("#POSOrderTypeRequired").val();
						if(OrderTypePopup > 0){
							if($("#OrderTypeName").val() <= 0){
								posData.OrderTypePopupList()
								.success(function(data){
									OrderTypeIDApp = data.Default;
									OrderTypeWindowApp('OrderTypeQuickRecall', data.html)
									.then(function(){
										WindowPopupOrderTypeApp('Order type')
									})
								})
							}else{
								posData.NewSaleQue()
								.success(function(b_data){
									if(a_data.success){
										OnHoldSalePrintKitchenReceipt();
									}else{
										OnHoldSalePrintKitchenReceipt();
									}
								})
							}
						}else{
							posData.NewSaleQue()
							.success(function(b_data){
								if(a_data.success){
									OnHoldSalePrintKitchenReceipt();
								}else{
									OnHoldSalePrintKitchenReceipt();
								}
							})
						}
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_newsaleq_no_label_required_w_ordertype_alreadyset_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						OnHoldSalePrintKitchenReceipt();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_newsaleq_label_required_wo_ordertype_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						OnHoldSalePrintKitchenReceipt();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_ordertype_without_print_ordertype_notset_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						posData.OrderTypePopupList()
						.success(function(data){
							OrderTypeIDApp = data.Default;
							OrderTypeWindowApp('OrderTypeQuickRecallWithoutPrint', data.html)
							.then(function(){
								WindowPopupOrderTypeApp('Order type')
							})
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onholdsale_sale_newsaleq_kitchen_print_ordertype_isset_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						OnHoldSalePrintKitchenReceipt();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_newsaleq_no_ordertype_kitchen_print_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						OnHoldSalePrintKitchenReceipt();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_newsaleq_no_kitchen_print_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						QuickOnHoldWithoutKitchenPrint();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_label_required_ordertype_passcode',function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						posData.OrderTypePopupList()
						.success(function(data){
							OrderTypeIDApp = data.Default;
							OrderTypeWindowApp('OrderTypeQuickRecallRequiredLabel', data.html)
							.then(function(){
								WindowPopupOrderTypeApp('Order type')
							})
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_label_required_no_ordertype_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						QuickOnHoldRequiredLabel();
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#onhold_sale_no_label_no_required_ordertype_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						QuickOnHoldRequiredLabel();
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})


	//-->On Hold Sale Old
	$scope.OnHoldSaleOld = function(){
		$("#OnHoldSalefunction").attr("disabled", true);
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				posData.CheckSettingRequiredLabel()
				.success(function(data){
					if(data.OnHoldRequireLabel !== 1){//-->No Label Required
						posData.RecallSecondCheck()
						.success(function(seconddata){
							if(seconddata.success == true){
								var OrderTypePopup = $("#POSOrderTypeRequired").val();
								if(OrderTypePopup > 0){
									if($("#OrderTypeName").val() <= 0){
										var DisableOnHold = $("#POSDisableOnHold").val();
										if(DisableOnHold != 1){
											posData.OrderTypePopupList()
											.success(function(data){
												OrderTypeIDApp = data.Default;
												OrderTypeWindowApp('OrderTypeQuickRecall', data.html)
												.then(function(){
													WindowPopupOrderTypeApp('Order type')
												})
											})
										}else{
											var msg ="You must first Complete or Cancel Sale before continuing.";
											NumpadAlertClose('onhold_disabled', msg)
											.then(function(){
												WindowPopupAlert("Information")
											})
										}
									}else{
										posData.NewSaleQue()
										.success(function(a_data){
											if(a_data.success){
												var DisableOnHold = $("#POSDisableOnHold").val();
												if(DisableOnHold != 1){
													OnHoldSalePrintKitchenReceipt();
												}else{
													var msg ="You must first Complete or Cancel Sale before continuing.";
													NumpadAlertClose('onhold_disabled', msg)
													.then(function(){
														WindowPopupAlert("Information")
													})
												}
											}else{
												OnHoldSalePrintKitchenReceipt();
											}
										})		
									}
								}else{
									posData.NewSaleQue()
									.success(function(b_data){
										if(a_data.success){
											var DisableOnHold = $("#POSDisableOnHold").val();
											if(DisableOnHold != 1){
												OnHoldSalePrintKitchenReceipt();
											}else{
												var msg ="You must first Complete or Cancel Sale before continuing.";
												NumpadAlertClose('onhold_disabled', msg)
												.then(function(){
													WindowPopupAlert("Information")
												})
											}
										}else{
											OnHoldSalePrintKitchenReceipt();
										}
									})
								}
							}else{
								if(OrderedItemCount){
									var OrderTypePopup = $("#POSOrderTypeRequired").val();
									if(OrderTypePopup > 0){
										if($("#OrderTypeName").val() <= 0){
											posData.OrderTypePopupList()
											.success(function(data){
												OrderTypeIDApp = data.Default;
												OrderTypeWindowApp('OrderTypeQuickRecallWithoutPrint', data.html)
												.then(function(){
													WindowPopupOrderTypeApp('Order type')
												})
											})
										}else{
											posData.NewSaleQue()
											.success(function(c_data){
												var DisableOnHold = $("#POSDisableOnHold").val();
												if(DisableOnHold != 1){
													OnHoldSalePrintKitchenReceipt();
												}else{
													var msg ="You must first Complete or Cancel Sale before continuing.";
													NumpadAlertClose('onhold_disabled', msg)
													.then(function(){
														WindowPopupAlert("Information")
													})
												}
											})
										}
									}else{
										posData.NewSaleQue()
										.success(function(c_data){
											var DisableOnHold = $("#POSDisableOnHold").val();
											if(DisableOnHold != 1){
												OnHoldSalePrintKitchenReceipt();
											}else{
												var msg ="You must first Complete or Cancel Sale before continuing.";
												NumpadAlertClose('onhold_disabled', msg)
												.then(function(){
													WindowPopupAlert("Information")
												})
											}
										})
									}
								}else{
									posData.NewSaleQue()
									.success(function(d_data){
										if(d_data.success){
											var DisableOnHold = $("#POSDisableOnHold").val();
											if(DisableOnHold != 1){
												QuickOnHoldWithoutKitchenPrint();
											}else{
												var msg ="You must first Complete or Cancel Sale before continuing.";
												NumpadAlertClose('onhold_disabled', msg)
												.then(function(){
													WindowPopupAlert("Information")
												})
											}
										}else{
											QuickOnHoldWithoutKitchenPrint();
										}
									})
								}
							}
						})
						setTimeout(function(){
							$("#OnHoldSalefunction").attr("disabled", false);
						},1000);
					}else{ //Label Required
						posData.NewSaleQue()
						.success(function(data){
							if(data.success == true){
								var DisableOnHold = $("#POSDisableOnHold").val();
								if(DisableOnHold != 1){
									$("#custom_item_keyboard").html('');
									var OrderTypePopup = $("#POSOrderTypeRequired").val();
									if(OrderTypePopup > 0){
										if($("#OrderTypeName").val() <= 0){
											posData.OrderTypePopupList()
											.success(function(data){
												OrderTypeIDApp = data.Default;
												OrderTypeWindowApp('OrderTypeQuickRecallRequiredLabel', data.html)
												.then(function(){
													WindowPopupOrderTypeApp('Order type')
												})
											})
										}else{
											QuickOnHoldRequiredLabel();
										}
									}else{
										QuickOnHoldRequiredLabel();
									}
								}else{
									var msg ="You must first Complete or Cancel Sale before continuing.";
									NumpadAlertClose('onhold_disabled', msg)
									.then(function(){
										WindowPopupAlert("Information")
									})
								}
							}else{
								QuickOnHoldWithoutKitchenPrint();
							}
						})
						setTimeout(function(){
							$("#OnHoldSalefunction").attr("disabled", false);
						},1000);
					}
				})
			}else{
				var msg = result.msg;
				NumpadAlertClose('onhold_disabled', msg)
				.then(function(){
					WindowPopupAlert("Information")
				})
				$("#OnHoldSalefunction").attr("disabled", false);
			}
		})
	}

	var OnHoldSalePrintKitchenReceipt = function(){
		setTimeout(function(){
			// QuickOnHold()
			// .then(function(){
			// 	ProceedOnHoldSale()
			// 	ordertype();
			// })
			posData.CheckReceiptCompleted()
			.success(function(data){
				if(data.Result > 0){
					if(data.paid){
						if(data.Total == 0){
							ProceedOnHoldSale();
							load_data(data);
						}else{
							QuickOnHold()
							.then(function(){
									ProceedOnHoldSale();
							})
						}
					}else{
						if(data.Total == 0){
							ProceedOnHoldSale();
							load_data(data);
						}else{
							QuickOnHold()
							.then(function(){
									ProceedOnHoldSale();
							})
						}
					}
				}else{
					ProceedOnHoldSale();
					load_data(data);
				}
			})	
		},100);
	}

	$(document).on("submit", "#OrderTypeQuickRecall", function(e){
		e.preventDefault();
		posData.CheckSettingRequiredLabel()
		.success(function(data){
			if(data.OnHoldRequireLabel != 1){
				$("#OrderType").val(OrderTypeIDApp);
				$("#ordertype-popup").jqxWindow('close');
				setTimeout(function(){
					OnHoldSalePrintKitchenReceipt();
				},500);
			}else{
				$("#custom_item_keyboard").html('');
				var type = 7;
				posData.CheckReceiptNote()
				.success(function(data){
					if(data.RNotes == '' || data.RNotes == null){
						NumpadKeyboard('receipt_note_onhold_sale')
						.then(function(){
							WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
							.then(function(){
								setTimeout(function(){
									$("#ordertype-popup").jqxWindow('close');
									$("#note_receipt_header_unique").val(data.RUnique);
									var searchInput = $('#search_field');
									var strLength = searchInput.val(data.RNotes).length * 25;
									searchInput.focus();
									searchInput[0].setSelectionRange(strLength, strLength);
								},100);
							})
						})
					}else{
						OnHold()
						.then(function(){
							$("#ordertype-popup").jqxWindow('close');
							ItemsCategoryView();
						})
					}
				})
			}
		})
	})

	$(document).on('submit', '#receipt_note_onhold_sale', function(e){
		e.preventDefault();
		var postData="receiptnotemsg="+$("#search_field").val();
			postData+="&ReceiptHeaderUnique="+$("#note_receipt_header_unique").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success == true){
				$("#dialog-numpad-keyboard").jqxWindow('close');
				$("#price_numpad").html('');
				$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote);
				OnHoldSalePrintKitchenReceipt();
			}
		})
	})

	var QuickOnHoldWithoutKitchenPrint = function(){
		QuickOnHold()
		.then(function(){
			ProceedOnHoldSale()
			.then(function(){
				$("#OnHoldSalefunction").attr("disabled", false);
				ordertype();
			})
		});
	}

	var OrderTypeSelDescription = '';
	$(document).on("submit", "#OrderTypeQuickRecallWithoutPrint", function(e){
		e.preventDefault();
		var id = $('input[type=radio][class=radio_ordertype]:checked').attr('id');
		OrderTypeSelDescription = $('input[type=radio][class=radio_ordertype]:checked').next().next().text();
		$("#OrderType").val(id);
		$("#ordertype-popup").jqxWindow('close');
		setTimeout(function(){
			QuickOnHoldWithoutKitchenPrint();
		},500);
	})


	var QuickOnHoldRequiredLabel = function(){
		var type = 7;
		posData.CheckReceiptNote()
		.success(function(data){
			if(data.RNotes == '' || data.RNotes == null){
				NumpadKeyboard('receipt_note_form_onholdsale')
				.then(function(){
					WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
					.then(function(){
						setTimeout(function(){
							var searchInput = $('#search_field');
							var strLength = searchInput.val(data.RNotes).length * 25;
							searchInput.focus();
							searchInput[0].setSelectionRange(strLength, strLength);
						},100);
						$("#OnHoldSalefunction").attr("disabled", false);
					})
				})
			}else{
				posData.RecallSecondCheck()
				.success(function(seconddata){
					if(seconddata.success == true){
						KitchenPrintReceipt("RecallOnHoldPrinterStatus")
						.then(function(){
							setTimeout(function(){
								QuickOnHold()
								.then(function(){
									ProceedOnHoldSale();
								})
							},100);
						})
						setTimeout(function(){
							$("#OnHoldSalefunction").attr("disabled", false);
						},1000);
					}else{
						QuickOnHold()
						.then(function(){
							ProceedOnHoldSale()
							.then(function(){
								$("#OnHoldSalefunction").attr("disabled", false);
							})
						});
					}
				})
			}
		})
	}

	$(document).on("submit", "#OrderTypeQuickRecallRequiredLabel", function(e){
		e.preventDefault();
		$("#OrderType").val(OrderTypeIDApp);
		$("#ordertype-popup").jqxWindow('close');
		setTimeout(function(){
			QuickOnHoldRequiredLabel();
		},500);
	})


	$(document).on("submit", '#receipt_note_form_onholdsale', function(e){
		e.preventDefault();
		var postData="receiptnotemsg=" + $("#search_field").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success){
				$("#dialog-numpad-keyboard").jqxWindow('close');
				$("#price_numpad").html('');
				$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote);
				posData.RecallSecondCheck()
				.success(function(seconddata){
					QuickOnHold()
					.then(function(){
						ProceedOnHoldSale();
						LoadEverything();
					});
				})
			}
		})
	})

	$(document).on('click', '#btn-use-receipt', function(e){
		e.preventDefault();
		var rowindex = $('#listOnHoldSale').jqxGrid('getselectedrowindex');
		var rowid = $('#listOnHoldSale').jqxGrid('getrowid', rowindex);
		var rowdata = $("#listOnHoldSale").jqxGrid('getrowdatabyid', rowid);
		console.log(rowindex);

		if(rowindex >= 0){
			posData.CashInServerCheckByUserId()
			.success(function(result){
				if(result.cashin){
					GlobalReceiptHeaderUnique = rowdata.Unique;
					var postdata="receiptunique="+rowdata.Unique;
						postdata+="&SplitUnique="+rowdata.SplitUnique;
						postdata+="&FunctionName=Quick Recall";
					posData.OpenReceipt(postdata)
					.success(function(data){
						if(data.success == true){
							if(data.can_open){
								load_data(data);
								// GetCustomerSave();
								PoleDisplayReset();
								setTimeout(function(){
									GetSelectedCustomer();
								},500)
								ordertype();
								$("#barcode_search").focus();
								$("#item-category-container").show();
								$("#payment-view").hide();
								ItemsCategoryView();
								$("#messageNotification").jqxNotification("closeAll");
								$('#on-hold-sale').jqxWindow('close');
							}else{
								NumpadAlertClose('cannot_open_receipt', data.msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
								})
							}
						}else{
							NumpadAlertClose('cannot_open_receipt', data.msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
							})
						}
					})
				}else{
					NumpadAlertClose('cannot_open_receipt', result.msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					})
				}
			})
		}else{
			var msg = 'Please select Receipt Number first';
			NumpadAlertClose('on_hold_sale_not_selected', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
	});

	$(document).on('click', "#btn-new-receipt", function(e){
		e.preventDefault();
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
				$("#messageNotification").jqxNotification("closeAll");
				$('#on-hold-sale').jqxWindow('close');
				posData.NewSaleQue()
				.success(function(data){
					if(data.success == true){
						$scope.QueReceiptHeaderUnique = data.ReceiptHeaderUnique;
						$scope.newsaleqshowModal = !$scope.newsaleqshowModal;
					}else if(data.success == false){
						posData.NewSale()
						.success(function(data){
							if(data.success == true){
								$scope.newsaleid = data.NewSaleId;
								$scope.showModal = false;
							}
						}).then(function(){
							// GetCustomerSave();
							$("#messageNotification").jqxNotification("closeAll");
							load_data(data);
							PoleDisplayReset();
							setTimeout(function(){
								GetSelectedCustomer();
							},500)
							$("#barcode_search").focus();
							ItemsCategoryView();
							$("#item-category-container").show();
							$("#payment-view").hide();
							var TableNumberChange   = $("#TableNumberChange").val();
							var TableCustomerNo     = $("#TableCustomerNo").val();

							if(TableCustomerNo == 1){
								var OrderTypePopup = $("#POSOrderTypeRequired").val();
								if(OrderTypePopup == 2){
									posData.OrderTypePopupList()
									.success(function(data){
										if(data.OrderType == null || data.OrderType == ''){
											OrderTypeIDApp = data.Default;
											OrderTypeWindowApp('OrderTypePopupAppNewSale', data.html)
											.then(function(){
												WindowPopupOrderTypeApp('Order type');
											})
										}else{
											$("#customercount").trigger('click');
										}
									})
								}else{
									$("#customercount").trigger('click');
								}
							}
						});
					}
				})
			}else{
				NumpadAlertClose('cannot_open_receipt', result.msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
				})
			}
		})
	})

	$(document).on('click', '#btn-proceed-sale', function(e){
		e.preventDefault();
		var rowindex = $('#listOnHoldSale').jqxGrid('getselectedrowindex');
		var rowid = $('#listOnHoldSale').jqxGrid('getrowid', rowindex);
		var rowdata = $("#listOnHoldSale").jqxGrid('getrowdatabyid', rowid);

		$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
		$("#messageNotification").jqxNotification("closeAll");

		// var RHDUnique = GlobalReceiptHeaderUnique;
		if(rowdata.Unique){
			posData.CashInServerCheckByUserId()
			.success(function(result){
				if(result.cashin){
					var postdata="receiptunique="+rowdata.Unique;
						postdata+="&SplitUnique="+rowdata.SplitUnique;
						postdata+="&FunctionName=Quick Recall";
					posData.OpenReceipt(postdata)
					.success(function(data){
						if(data.success == true){
							if(data.can_open){
								// GetCustomerSave();
								load_data(data);
								PoleDisplayReset();
								setTimeout(function(){
									GetSelectedCustomer();
								},500)
								PoleDisplayTotal();
								PaymentView();
								$("#messageNotification").jqxNotification("closeAll");
								$("#barcode_search").focus();
								$('#on-hold-sale').jqxWindow('close');
							}else{
								NumpadAlertClose('cannot_open_receipt', data.msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
								})
							}
						}else{
							NumpadAlertClose('cannot_open_receipt', data.msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
							})
						}
					})
				}else{
					var msg = result.msg;
					NumpadAlertClose('on_hold_sale_not_selected', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					})	
				}
			})
		}else{
			var msg = 'Please select Receipt Number first';
			NumpadAlertClose('on_hold_sale_not_selected', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
	})

	var DiscountItemUnique;
	var DiscountItemPrice;
	var DiscountType;
	var DiscountName;
	var DiscountUnique;
	$(document).on('click', '.radio2', function(){
		var MethodUnique = $('input[type=radio][name=group1]:checked').attr('id');
		DiscountItemUnique = MethodUnique.split('=')[0];
		DiscountItemPrice  = MethodUnique.split('=')[1];
		DiscountType	   = MethodUnique.split('=')[2];
		DiscountName	   = MethodUnique.split('=')[5];
		DiscountUnique	   = MethodUnique.split('=')[4];
	});
	/*Discount List*/
	var populateDiscountList = function(form_name, html){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-discount-list").append('<div id="discount-list-container" style="background: #004a73"></div>');
			$("#discount-list-container").html('');
			$("#discount-list-container").append($compile(html)($scope));
			$("#discount-list-container").append(
				'<form id="'+form_name+'">'+
					'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
					'<div id="keyboard"></div>'+
				'</form>'
			);
			def.resolve();
		},100);
		return def.promise();
	}
	
	var WindowDiscountList = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-discount-list").jqxWindow({
				width: '50%', 
				height: '60%',
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
				//position: { x: 0, y: 50 }
			});
			$('#dialog-discount-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var DiscountListView = function(form_name, html){
		var def = $.Deferred();
		populateDiscountList(form_name, html)
		.then(function(){
			$('#keyboard').hdkeyboard({
				layout: "item_reason",
				input: $('#text_field')
			});
			setTimeout(function(){
				def.resolve();
			},100);
		});
		return def.promise();
	}
	
	$scope.ItemDiscountList = function(){
		$("#ItemDiscountListfunction").attr("disabled", true);
		var Unique = GlobalItemUnique.Unique;
		if(Unique > 0){
			var postdata ="FunctionButton=DiscountItem";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'DiscountItem';
					NumpadPasscode('discount_item_passcode')
					.then(function(){
						WindowPopupPasscode('Discount Item')
						.then(function(){
							$("#number_field").focus();
						})
					})
				}else{
					discount_item_process();
				}
			})
		}else{
			var msg = 'Please select Item first.';
			NumpadAlertClose('set_discount_from_list', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
		setTimeout(function(){
			$("#ItemDiscountListfunction").attr("disabled", false);
		},1000);
	}

	var discount_item_process = function(){
		var Unique = GlobalItemUnique.Unique;
		var Header  = $scope.ReceiptDetailsUnique +" "+ $scope.SelectedDescription +" "+  "Price: "+$scope.SelectedSellPrice;
		var postdata ="Display=1";
		postdata+="&ReceiptDetailsUnique="+Unique;
		posData.LoadDiscountList(postdata)
		.success(function(data){
			if(data.success == true){
				DiscountListView('item_discount_list', data.html)
				.then(function(){
					WindowDiscountList(Header);
				})
			}else{
				var msg = data.msg;
				NumpadAlertClose('set_discount_from_list', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
					.then(function(){
						$(".alert_close").focus();
					})
				})
			}
			$("#dialog-numpad-passcode").jqxWindow('close');
		})
	}

	$(document).on('submit', '#discount_receipt_line_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var DisplayHeader = '';
						var postdata ="Display=5";
						posData.LoadDiscountList(postdata)
						.success(function(data){
							ReceiptDiscountSubTotal = data.SubTotal;
							DisplayHeader = "Receipt# "+data.ReceiptNumber +" "+ "SubTotal: "+data.SubTotal;
							if(data.success == true){
								DiscountListView('receipt_line_discount_list', data.html)
								.then(function(){
									WindowDiscountList(DisplayHeader);
								})
							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on("submit", "#discount_item_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var ItemSelInfo 	= $(".selected").attr('id');
						var ItemCanDiscount = ItemSelInfo.split("=")[12];
						var ItemDescription = ItemSelInfo.split("=")[13];
						
						if(ItemCanDiscount == 0){
							var msg = ItemDescription+ " cannot be discounted";
							NumpadAlertOk('discount_item_failed', msg)
							.then(function(){
								WindowPopupAlert('Info');
								$("#ItemInlineDiscountListfunction").attr("disabled", false);
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						var Unique = GlobalItemUnique.Unique;
						var Header  = $scope.ReceiptDetailsUnique +" "+ $scope.SelectedDescription +" "+  "Price: "+$scope.SelectedSellPrice;
						var postdata ="Display=4";
						postdata+="&ReceiptDetailsUnique="+Unique;
						posData.LoadDiscountList(postdata)
						.success(function(data){
							if(data.success == true){
								// This discount is adding as like an item.
								// so I changed like the discount without passcode prompting.
								// DiscountListView('item_discount_list', data.html)
								// .then(function(){
								// 	WindowDiscountList(Header);
								// })

								DiscountListView('item_line_discount_list', data.html)
								.then(function(){
									WindowDiscountList(Header);
								})

							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on("submit", "#discount_item_onhold_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var Unique = GlobalItemUnique.Unique;
						var Header  = $scope.ReceiptDetailsUnique +" "+ $scope.SelectedDescription +" "+  "Price: "+$scope.SelectedSellPrice;
						var postdata ="Display=1";
							postdata+="&ReceiptDetailsUnique="+Unique;
						posData.LoadDiscountList(postdata)
						.success(function(data){
							if(data.success == true){
								DiscountListView('item_discount_list', data.html)
								.then(function(){
									WindowDiscountList(Header);
								})
							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#item_discount_list .button_proceed', function(e){
		e.preventDefault();
		var DiscSel = $('input[type=radio][name=group1]:checked').attr('id');
			DiscountItemUnique = DiscSel.split('=')[0];
			DiscountItemPrice  = DiscSel.split('=')[1];
			DiscountType	   = DiscSel.split('=')[2];
			DiscountName	   = DiscSel.split('=')[5];
			DiscountUnique	   = DiscSel.split('=')[4];
			
		if(DiscountItemPrice !== ''){
			DiscountPromptNewPrice = DiscountItemPrice;
			var Unique = GlobalItemUnique.Unique;
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+parseFloat(DiscountItemPrice).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
			posData.DiscountBelowCostPage(postdata)
			.success(function(data){
				
				if(parseFloat(data.NewPrice) < parseFloat(data.OldPrice) ){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var postDataPriceChange="Unique="+Unique;
						postDataPriceChange+="&NewPrice="+DiscountItemPrice;
					if(DiscountItemPrice){
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&ItemUnique="+DiscountItemUnique;
							postdata+="&SellPrice="+parseFloat(DiscountItemPrice).toFixed(2);
							postdata+="&DiscountType="+DiscountType;
							postdata+="&DiscountName="+DiscountName;
							postdata+="&DiscountUnique="+DiscountUnique;
							postdata+="&Quantity="+ItemQuantity;
						posData.SaveItemDiscount(postdata)
						.success(function(data){
							if(data.success == true){
								load_data(data);
								// GetCustomerSave();
								setTimeout(function(){
									GetSelectedCustomer();
								},500);
								$scope.BtnPaymentWhen = false;
								PoleDisplayTotal();
								Qquestion = 0;
							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
						})
					}
				}
			})
		}else{
			var form_name;
			var windowPopupTitle = '';
			if(DiscountType == 'Dollar'){
				form_name = 'item_discount_dollar_prompt';
				windowPopupTitle = "Dollar Discount";
			}else if(DiscountType == 'Percent'){
				form_name = 'item_discount_percent_prompt';
				windowPopupTitle = "Percent Discount";
			}

			var postDataItemInfo = "Unique="+GlobalItemUnique.Unique;
			posData.ItemInfo(postDataItemInfo)
			.success(function(data){
				$scope.iteminfo = data;
				$scope.itemno = data.Item;
				$scope.itemdesc = data.Description;
				NumpadDiscount(form_name, true)
				.then(function(){
					WindowPopupDiscount('')
					.then(function(){
						$("#discount_field").jqxNumberInput('focus');
						$("#dialog-numpad-discount").jqxWindow({title: windowPopupTitle});
						setTimeout(function(){
							var input = $('#discount_field input')[0];
							if('selectionStart' in input) {
								input.setSelectionRange(0, 0);
							}else{
								var range = input.createTextRange();
								range.collapse(true);
								range.moveEnd('character', 0);
								range.moveStart('character', 0);
								range.select();
							}
							$("#discount_field input").select();
						},100)
					})
				})
			})
		}
		$('#dialog-discount-list').jqxWindow('close');
	})

	$(document).on('click', '#item_discount_list .button_q_cancel', function(e){
		e.preventDefault();
		$('#dialog-discount-list').jqxWindow('close');
	})

	var DiscountPromptNewPrice = 0;
	$(document).on('submit', '#item_discount_dollar_prompt', function(e){
		e.preventDefault();
		if($("#discount_field").val() > 0){
			DiscountPromptNewPrice = $("#discount_field").val();
			var Unique = GlobalItemUnique.Unique;
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
			posData.DiscountBelowCostPage(postdata)
			.success(function(data){
				if(data.NewPrice < data.OldPrice){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var postdata ="ReceiptDetailsUnique="+Unique;
						postdata+="&ItemUnique="+DiscountItemUnique;
						postdata+="&SellPrice="+parseFloat($("#discount_field").val()).toFixed(2);
						postdata+="&DiscountType="+DiscountType;
						postdata+="&DiscountName="+DiscountName;
						postdata+="&DiscountUnique="+DiscountUnique;
						postdata+="&Quantity="+ItemQuantity;
					posData.SaveItemDiscount(postdata)
					.success(function(data){
						if(data.success == true){
							load_data(data);
							// GetCustomerSave();
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$scope.BtnPaymentWhen = false;
							PoleDisplayTotal();
							Qquestion = 0;
							GlobalItemUnique.Unique = 0;
						}else{
							var msg = data.msg;
							NumpadAlertClose('set_discount_from_list', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
								.then(function(){
									$(".alert_close").focus();
								})
							})
						}
					})
				}
				$('#dialog-numpad-discount').jqxWindow('close');
			})
		}else{
			var msg = "Discount cannot be Negative or zero value.";
			NumpadAlertClose('set_discount_but_negative_zero', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Discount Item')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			$('#dialog-numpad-discount').jqxWindow('close');
		}
	})


	$(document).on('submit', '#item_discount_percent_prompt', function(e){
		e.preventDefault();
		if($("#discount_field").val() > 0){
			DiscountPromptNewPrice = $("#discount_field").val();
			var Unique = GlobalItemUnique.Unique;
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
			posData.DiscountBelowCostPage(postdata)
			.success(function(data){
				if(data.NewPrice < data.OldPrice){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var Unique = GlobalItemUnique.Unique;
					var postdata ="ReceiptDetailsUnique="+Unique;
						postdata+="&ItemUnique="+DiscountItemUnique;
						postdata+="&SellPrice="+parseFloat($("#discount_field").val()).toFixed(2);
						postdata+="&DiscountType="+DiscountType;
						postdata+="&DiscountName="+DiscountName;
						postdata+="&DiscountUnique="+DiscountUnique;
						postdata+="&Quantity="+ItemQuantity;
					posData.SaveItemDiscount(postdata)
					.success(function(data){
						if(data.success == true){
							// GetCustomerSave();
							load_data(data);
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$scope.BtnPaymentWhen = false;
							PoleDisplayTotal();
							Qquestion = 0;
						}else{
							var msg = data.msg;
							NumpadAlertClose('set_discount_from_list', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
								.then(function(){
									$(".alert_close").focus();
								})
							})
						}
					}).then(function(){
						$("#barcode_search").focus();
					})
				}
				$('#dialog-numpad-discount').jqxWindow('close');
			})
		}else{
			var msg = "Discount cannot be Negative or zero value.";
			NumpadAlertClose('set_discount_but_negative_zero', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Discount Item')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			$('#dialog-numpad-discount').jqxWindow('close');
		}
	})

	$scope.ReceiptDiscountList = function(){
		$("#ReceiptDiscountListfunction").attr("disabled", true);
		var postdata ="FunctionButton=DiscountReceipt";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'DiscountReceipt';
				NumpadPasscode('discount_receipt_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Receipt')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				discount_receipt_process();
			}	
		})
		setTimeout(function(){
			$("#ReceiptDiscountListfunction").attr("disabled", false);
		},1000);
	}

	var discount_receipt_process = function(){
		var DisplayHeader;
		var postdata ="Display=2";
		posData.LoadDiscountList(postdata)
		.success(function(data){
			DisplayHeader = "Receipt# "+data.ReceiptNumber +" "+ "SubTotal: "+data.SubTotal;
			DiscountListView('receipt_discount_list', data.html)
			.then(function(){
				WindowDiscountList(DisplayHeader);
			})
			$("#dialog-numpad-passcode").jqxWindow('close');
		})
	}

	$(document).on("submit", "#discount_receipt_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var DisplayHeader;
						var postdata ="Display=2";
						posData.LoadDiscountList(postdata)
						.success(function(data){
							DisplayHeader = "Receipt# "+data.ReceiptNumber +" "+ "SubTotal: "+data.SubTotal;
							DiscountListView('receipt_discount_list', data.html)
							.then(function(){
								WindowDiscountList(DisplayHeader);
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#receipt_discount_list .button_q_cancel', function(e){
		e.preventDefault();
		$('#dialog-discount-list').jqxWindow('close');
	})

	$(document).on('click', '#receipt_discount_list .button_proceed', function(e){
		e.preventDefault();
		var DiscSel	   = $('input[type=radio][name=group1]:checked').attr('id');
			DiscountItemUnique = DiscSel.split('=')[0];
			DiscountItemPrice  = DiscSel.split('=')[1];
			DiscountType	   = DiscSel.split('=')[2];
			DiscountName	   = DiscSel.split('=')[5];
			DiscountUnique	   = DiscSel.split('=')[4];
		if(DiscountItemPrice !== ''){
			var	postdata ="SellPrice="+parseFloat(DiscountItemPrice).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
				postdata+="&DiscountName="+DiscountName;
				postdata+="&ItemUnique="+DiscountItemUnique;
				postdata+="&DiscountUnique="+DiscountUnique;
			posData.SaveReceiptDiscount(postdata)
			.success(function(data){
				if(data.success == true){
					// GetCustomerSave();
					load_data(data);
					setTimeout(function(){
						GetSelectedCustomer();
					},500);
					$scope.BtnPaymentWhen = false;
					PoleDisplayTotal();
					Qquestion = 0;
				}else{
					var msg = data.msg;
					NumpadAlertClose('set_discount_from_list', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
						.then(function(){
							$(".alert_close").focus();
						})
					})
				}
				$('#dialog-discount-list').jqxWindow('close');
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			var form_name;
			var windowPopupTitle = '';
			if(DiscountType == 'Dollar'){
				form_name = 'receipt_discount_dollar_prompt';
				windowPopupTitle = 'Dollar Discount';
			}else if(DiscountType == 'Percent'){
				form_name = 'receipt_discount_percent_prompt';
				windowPopupTitle = 'Percent Discount';
			}
			NumpadDiscount(form_name, true)
			.then(function(){
				WindowPopupDiscount('')
				.then(function(){
					$("#discount_field").jqxNumberInput('focus');
					setTimeout(function(){
						var input = $('#discount_field input')[0];
						if('selectionStart' in input) {
							input.setSelectionRange(0, 0);
						}else{
							var range = input.createTextRange();
							range.collapse(true);
							range.moveEnd('character', 0);
							range.moveStart('character', 0);
							range.select();
						}
						$("#discount_field input").select();
					},100)
					$("#dialog-numpad-discount").jqxWindow({title: windowPopupTitle});
				})
			})
			$('#dialog-discount-list').jqxWindow('close');
		}
	})

	$(document).on("submit", "#receipt_discount_percent_prompt", function(e){
		e.preventDefault();
		if($("#discount_field").val() > 0){
			DiscountReceiptBelowCostSellPrice = parseFloat($("#discount_field").val()).toFixed(2);
			var postdata ="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
			posData.DiscountReceiptBelowCostPage(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
						$('#dialog-numpad-discount').jqxWindow('close');
					})
				}else{
					var	postdata ="SellPrice="+parseFloat($("#discount_field").val()).toFixed(2);
						postdata+="&DiscountType="+DiscountType;
						postdata+="&DiscountName="+DiscountName;
						postdata+="&ItemUnique="+DiscountItemUnique;
						postdata+="&DiscountUnique="+DiscountUnique;
					posData.SaveReceiptDiscount(postdata)
					.success(function(data){
						if(data.success == true){
							// GetCustomerSave();
							load_data(data);
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$scope.BtnPaymentWhen = false;
							PoleDisplayTotal();
							Qquestion = 0;
						}else{
							var msg = data.msg;
							NumpadAlertClose('set_discount_from_list', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
								.then(function(){
									$(".alert_close").focus();
								})
							})
						}
						$('#dialog-numpad-discount').jqxWindow('close');
					})
				}
			})
		}else{
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('set_discount_but_negative_zero', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Discount Receipt')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			$('#dialog-numpad-discount').jqxWindow('close');
		}
	})
	/*
	|-----------------------------------------------------------
	| Discount Receipt Below Cost Okay
	|-----------------------------------------------------------
	*/
	$(document).on("click", "#discount_receipt_below_cost_yes", function(e){
		e.preventDefault();
		$scope.FunctionButton = "SellBelowCost";
		var postdata ="FunctionButton=SellBelowCost";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'SellBelowCost';
				NumpadPasscode('discount_receipt_below_cost_passcode')
				.then(function(){
					WindowPopupPasscode('Sell Below Price')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				var	postdata ="SellPrice="+DiscountReceiptBelowCostSellPrice;
					postdata+="&DiscountType="+DiscountType;
					postdata+="&DiscountName="+DiscountName;
					postdata+="&ItemUnique="+DiscountItemUnique;
					postdata+="&DiscountUnique="+DiscountUnique;
				posData.SaveReceiptDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						// GetCustomerSave();
						load_data(data);
						setTimeout(function(){
							GetSelectedCustomer();
						},500);
						$scope.BtnPaymentWhen = false;
						PoleDisplayTotal();
						Qquestion = 0;
					}else{
						var msg = data.msg;
						NumpadAlertClose('set_discount_from_list', msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
							.then(function(){
								$(".alert_close").focus();
							})
						})
					}
					$("#sell_below_cost").jqxWindow('close');
				})
			}
		})
	})

	/*
	|-----------------------------------------------------------
	| Discount Promo Below Cost Okay
	|-----------------------------------------------------------
	*/
	$(document).on("click", "#discount_promo_below_cost_yes", function(e){
		e.preventDefault();
		$scope.FunctionButton = "SellBelowCost";
		var postdata ="FunctionButton=SellBelowCost";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'SellBelowCost';
				NumpadPasscode('discount_promo_below_cost_passcode')
				.then(function(){
					WindowPopupPasscode('Sell Below Price')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				var	postdata ="SellPrice="+DiscountReceiptBelowCostSellPrice;
					postdata+="&DiscountType="+DiscountType;
					postdata+="&DiscountName="+DiscountName;
					postdata+="&ItemUnique="+DiscountItemUnique;
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&PromoNumber="+DiscountPromoNumber;
				posData.SavePromoDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						// GetCustomerSave();
						load_data(data);
						setTimeout(function(){
							GetSelectedCustomer();
						},500);
						$scope.BtnPaymentWhen = false;
						PoleDisplayTotal();
						Qquestion = 0;
					}else{
						var msg = data.msg;
						NumpadAlertClose('set_discount_from_list', msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
							.then(function(){
								$(".alert_close").focus();
							})
						})
					}
					$("#sell_below_cost").jqxWindow('close');
				})
			}
		})
	})

	$(document).on('submit', '#discount_promo_below_cost_passcode', function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var CardRead = $("#number_field").val();
        var CRP = new CardReaderParser(CardRead);
        if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var	postdata ="SellPrice="+DiscountReceiptBelowCostSellPrice;
							postdata+="&DiscountType="+DiscountType;
							postdata+="&DiscountName="+DiscountName;
							postdata+="&ItemUnique="+DiscountItemUnique;
							postdata+="&PromoNumber="+DiscountPromoNumber;
						posData.SavePromoDiscount(postdata)
						.success(function(data){
							if(data.success == true){
								// GetCustomerSave();
								load_data(data);
								setTimeout(function(){
									GetSelectedCustomer();
								},500);
								$scope.BtnPaymentWhen = false;
								PoleDisplayTotal();
								Qquestion = 0;
							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
							$('#sell_below_cost').jqxWindow('close');
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#discount_receipt_below_cost_passcode', function(e){
		e.preventDefault();
		var SelectedItem = GlobalItemUnique.Unique;
		var CardRead = $("#number_field").val();
        var CRP = new CardReaderParser(CardRead);
        if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var	postdata ="SellPrice="+DiscountReceiptBelowCostSellPrice;
							postdata+="&DiscountType="+DiscountType;
							postdata+="&DiscountName="+DiscountName;
							postdata+="&ItemUnique="+DiscountItemUnique;
							postdata+="&DiscountUnique="+DiscountUnique;
						posData.SaveReceiptDiscount(postdata)
						.success(function(data){
							if(data.success == true){
								// GetCustomerSave();
								load_data(data);
								setTimeout(function(){
									GetSelectedCustomer();
								},500);
								$scope.BtnPaymentWhen = false;
								PoleDisplayTotal();
								Qquestion = 0;
							}else{
								var msg = data.msg;
								NumpadAlertClose('set_discount_from_list', msg)
								.then(function(){
									WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
									.then(function(){
										$(".alert_close").focus();
									})
								})
							}
							$('#sell_below_cost').jqxWindow('close');
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	/*
	|--------------------------------------------------------------
	| Discount Receipt Below Cost Cancel
	|--------------------------------------------------------------
	*/
	$(document).on('click', '#discount_receipt_below_cost_no', function(){
		$("#sell_below_cost").jqxWindow('close');
	})

	var DiscountReceiptBelowCostSellPrice = 0;
	$(document).on("submit", "#receipt_discount_dollar_prompt", function(e){
		e.preventDefault();
		if($("#discount_field").val() > 0){
			DiscountReceiptBelowCostSellPrice = parseFloat($("#discount_field").val()).toFixed(2);
			var postdata ="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType="+DiscountType;
			posData.DiscountReceiptBelowCostPage(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
						$('#dialog-numpad-discount').jqxWindow('close');
					})
				}else{
					var	postdata ="SellPrice="+parseFloat($("#discount_field").val()).toFixed(2);
						postdata+="&DiscountType="+DiscountType;
						postdata+="&DiscountName="+DiscountName;
						postdata+="&ItemUnique="+DiscountItemUnique;
						postdata+="&DiscountUnique="+DiscountUnique;
					posData.SaveReceiptDiscount(postdata)
					.success(function(data){
						if(data.success == true){
							// GetCustomerSave();
							load_data(data);
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$scope.BtnPaymentWhen = false;
							PoleDisplayTotal();
							Qquestion = 0;
						}else{
							var msg = data.msg;
							NumpadAlertClose('set_discount_from_list', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
								.then(function(){
									$(".alert_close").focus();
								})
							})
						}
						$('#dialog-numpad-discount').jqxWindow('close');
					})
				}
			})
		}else{
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('set_discount_but_negative_zero', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Discount Receipt')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			$('#dialog-numpad-discount').jqxWindow('close');
		}
	})	

	var BEFOREQUANTITY = 0;
	$scope.QuantityBefore = function(){
		$("#QuantityBeforefunction").attr("disabled", true);
		var msg = 'Quantity added here will apply to next item selected.';
		NumpadBeforeQuantity('before_quantity', msg)
		.then(function(){
			WindowPopupBeforeQuantity()
			.then(function(){
				if(BEFOREQUANTITY > 0){
					$("#before_quantity_field").val(BEFOREQUANTITY);
				}else{
					$("#before_quantity_field").val(1);
				}
				$("#before_quantity_field").jqxNumberInput('focus');
				setTimeout(function(){
					var input = $('#before_quantity_field input')[0];
					if('selectionStart' in input) {
						input.setSelectionRange(0, 0);
					}else{
						var range = input.createTextRange();
						range.collapse(true);
						range.moveEnd('character', 0);
						range.moveStart('character', 0);
						range.select();
					}
					$("#before_quantity_field input").select();
				},100);
			})
		})
		setTimeout(function(){
			$("#QuantityBeforefunction").attr("disabled", false);
		},1000);
	}

	$(document).on("submit", "#before_quantity", function(e){
		e.preventDefault();
		BEFOREQUANTITY = $("#before_quantity_field").val();
		if(BEFOREQUANTITY == 0){
			$("#currentBeforeQty").text('CLR');
		}else{
			$("#currentBeforeQty").text(BEFOREQUANTITY);
		}
		// QtyBuffer = BEFOREQUANTITY;
		$("#before_quantity_numpad").jqxWindow('close');
		$("#barcode_search").focus();
	})

	$(document).on("submit", "#before_quantity .exit", function(e){
		e.preventDefault();
		BEFOREQUANTITY = 0;
		QtyBuffer = '';
		QtyBufferReset = '';
		$("#dialog-numpad-quantity").jqxWindow('close');
	})

	var index = 0,
	ordertypelist = [],
	ordertypeid = [],
	ordertyperef = [],
	OrderTypeDefault = '';
	var ordertype = function(){
		var def = $.Deferred();
		ordertypelist = [];
		ordertypeid = [];
		ordertyperef = [];
		
		posData.OrderTypeList()
		.success(function(data){
			$.each(data, function(index, value){
				ordertypelist.push(value.Type);
				ordertypeid.push(value.Unique);
				ordertyperef.push(value.Description);
				if(value.Default == 1){
					if(value.CurrentType == null){
						OrderTypeDefault = value.Type;
					}else{
						OrderTypeDefault = value.CurrentType;
					}
				}
			})
			def.resolve(data);
		}).then(function(){
			var ordertypelistIndex = ordertypelist.indexOf(OrderTypeDefault);
			var SelectedOrderType = ordertypeid[ordertypelistIndex];
			var ordertypeRef = ordertyperef.indexOf(OrderTypeDefault);
			$("#OrderType").val(SelectedOrderType);
			$("#OrderType").text(OrderTypeDefault);
			$("#OrderTypeName").val(ordertypeRef);
			ordertypeSel =  ordertypeid[ordertypelistIndex];
			ordertypeSelName = ordertyperef.indexOf(OrderTypeDefault);
		})
		return def.promise();
	}
	ordertype();

	var ordertypeSel;
	var ordertypeSelName;
	$("#OrderType").click(function(){
		$("#OrderType").attr('disabled', true);

		$(this).text(function(index, text){
			index = $.inArray(text, ordertypelist);
			return ordertypelist[++index % ordertypelist.length];
		});	
		var ordertypelistIndex = ordertypelist.indexOf($(this).text());
		//$(this).attr("class", "fndesign changequantity "+ordertypeid[ordertypelistIndex]);
		ordertypeSel = ordertypeid[ordertypelistIndex];
		$(this).val(ordertypeSel);
		ordertypeSelName = ordertyperef.indexOf($(this).text());
		$("#OrderTypeName").val(ordertypeSelName);
		postdata="OrderType="+$("#OrderType").val();
		posData.UpdateOrderNo(postdata)
		.success(function(data){});

		setTimeout(function(){
			$("#OrderType").attr('disabled', false);
		},1000)

	})

	var populateEmailReceiptForm = function(html){
		var def = $.Deferred();
		setTimeout(function(){
			$("#email_receipt_popup").append('<div id="email_receipt_container"></div>');
			$("#email_receipt_container").html('');
			$("#email_receipt_container").append($compile(html)($scope));
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowEmailReceipt = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#email_receipt_popup").jqxWindow({
				height: '100%',
				Width: '100%',
				isModal: true,
				theme: 'darkblue',
				title: '<button id="pos_email_close" class="glyphicon glyphicon-remove" style="float:left; background-color: #449bca; width: auto;" title="Close"></button>&nbsp;'+header_title,
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			// $('#email_receipt_popup').jqxWindow('setTitle', header_title);
			$('#email_receipt_popup').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var EmailPopup = function(html){
		var def = $.Deferred();
		populateEmailReceiptForm(html)
		.then(function(){
			def.resolve();
		})
		return def.promise();
	}

	$(document).on('click', '#pos_email_close', function(){
		$("#email_receipt_popup").jqxWindow('close');
	})

	var repeat = function(str, count) {
		var array = [];
		for(var i = 0; i <= count;)
			array[i++] = str;
		return array.join('');
	}


	var populateCustomNumpadKeyboard = function(form_name, title, maxlength){
		var def = $.Deferred();
		var maxtext = '';
		if(maxlength){
			maxtext = 'maxlength="'+KeyboardInputLimit+'"';
		}
		setTimeout(function(){
			$("#dialog-numpad-keyboard").append('<div id="custom_item_keyboard" style="background: #144766; color:#EEE;"></div>');
			$("#custom_item_keyboard").html('');
			$("#custom_item_keyboard").append(''+
			'<h4 style="text-align:center;">'+title+'</h4>'+
			'');
			$("#custom_item_keyboard").append(''+
			'<form id="'+form_name+'">'+
				'<input type="text" id="search_field" '+maxtext+' style="color:#000">'+
				'<div id="hd_keyboard"></div>'+
			'</form>');
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupCustomKeyboard = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-numpad-keyboard").jqxWindow({
				height: 520,
				minWidth: '80%',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-numpad-keyboard').jqxWindow('setTitle', header_title);
			$('#dialog-numpad-keyboard').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var NumpadCustomKeyboard = function(form_name, title, maxlength = true){
		var def = $.Deferred();
		populateCustomNumpadKeyboard(form_name, title, maxlength)
		.then(function(){
			$('#hd_keyboard').jkeyboard({
				layout: "english",
				input: $('#search_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	var NumpadCustomEmail = function(form_name){
		var def = $.Deferred();
		populateNumpadKeyboard(form_name)
		.then(function(){
			$('#keyboard').jkeyboard({
			  layout: "email",
			  input: $('#search_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	$scope.FromEmailReceipt = false;
	$scope.EmailReceipt = function(){
		$("#EmailReceiptfunction").attr("disabled", true);
		posData.EmailReceiptForm()
		.success(function(data){
			EmailPopup(data.html)
			.then(function(){
				WindowEmailReceipt('Email Receipt')
				.then(function(){
					$("#emailTo").focus();
					$("#EmailReceiptfunction").attr("disabled", false);
				})
			})
			$scope.FromEmailReceipt = true;
		})
	}

	$scope.ChangeScreenShow = false;
	$(document).on('click', "#SendEmail", function(){
		$(this).attr("disabled", true);
		if( $("#emailTo").val() != ''){
			$("#danger-alert").slideUp(500);
			$("#email_receipt_popup").block({
				message: 'Sending...'
			})
			// $("#jqxLoader").jqxLoader({ isModal: true, width: 100, height: 60, imagePosition: 'top', html: 'Sending...' });
			// $('#jqxLoader').jqxLoader('open');
			posData.CreateFile()
			.success(function(data){
				var postdata ="emailFrom="+encodeURIComponent($("#emailfrom").val());
					postdata+="&emailTo="+$("#emailTo").val();
					postdata+="&emailBcc="+$("#emailBcc").val();
					postdata+="&emailCc="+$("#emailCc").val();
					postdata+="&emailSubject="+encodeURIComponent($("#emailSubject").val());
					postdata+="&emailMessage="+encodeURIComponent($("#emailMessage").val());
					postdata+="&filename="+data.filename;
					postdata+="&emailmsgUnique="+data.emailmsgUnique;
					postdata+="&emailReplyTo="+$("#replytoemail").val();
					postdata+="&emailSignature="+$("#emailSignature").val();
				posData.SendEmail(postdata)
				.success(function(data){
					if(data.status == "Success"){
						$("#success-msg").text(data.message);
						$("#success-alert").alert();
						$("#success-alert").fadeTo(2000, 500).slideUp(500, function(){
							$("#success-alert").slideUp(500);
						});   
						setTimeout(function(){
							$('#email_receipt_popup').jqxWindow('close');
						},1000);
						
						if($scope.ChangeScreenShow){
							var POSChangeScreen = $("#POSChangeScreen").val();
							if(POSChangeScreen == 1){//Default
								
							}else if(POSChangeScreen == 2){ //CountDown Timer 0 Make New Receipt
								$scope.parentmethod();
							}else if(POSChangeScreen == 3){ //CountDown Timer 0 Go back to Cashier page
								setTimeout(function(){
									$scope.emptyTransaction();
								},100);
							}else if(POSChangeScreen == 4){ //CountDown Timer 0 Go back to Table layout
								setTimeout(function(){
									$scope.FinishTransaction();
								},100);	
							}
						}
						$scope.ChangeScreenShow = false;
					}else{
						var email_error = data.message.Error 
						var email_message = data.message.Reason 
						$("#danger-msg").text(email_error + ' ' + email_message);
						$("#danger-alert").alert();
						$("#danger-alert").fadeTo(2000, 500)
							// $("#danger-alert").slideUp(500);
						$("#SendEmail").attr("disabled", false);
					}

					$("#email_receipt_popup").unblock();
					
				})
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			var msg = 'Email To is required';
			NumpadAlertOk('email_send_failed', msg)
			.then(function(){
				WindowPopupAlert('Email send error');
			});
		}
	})

	$(document).on('click', '#CloseSendEmail', function(){
		$('#email_receipt_popup').jqxWindow('close');
		$scope.FromEmailReceipt = false;
	})

	var EmailCustomer = function(data){
		var source = {
			datatype: "json",
			datafields: [
				{ name: 'Unique', type: 'int' },
				{ name: 'Name', type: 'string' },
				{ name: 'Email', type: 'string'},
			],
			localdata: data,
			async: false
		};
		var dataAdapter = new $.jqx.dataAdapter(source);
		// Create a jqxComboBox
		$("#CustomerSearchEmail").on('bindingComplete', function (event) {
			if( $("#emailTo").val() == '' && $("#POSVirtualKeyboard").val() == 1 ){
				NumpadCustomKeyboard('enter_emailto', 'Enter Email')
				.then(function(){
					WindowPopupCustomKeyboard('Email To')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailTo").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			}
		});
		$("#CustomerSearchEmail").jqxComboBox({ 
			source: dataAdapter, 
			displayMember: "Name", 
			valueMember: "Email", 
			width: '100%', 
			height: 25, 
			searchMode: 'contains'
		});
		$("#CustomerSearchEmail").on('select', function (event) {
			if (event.args) {
				var item = event.args.item;
				if (item) {
					$("#emailTo").val(item.value);
				}
			}
		});
	}

		
	var EmailReceiptVirtualKeyboard = function(){
		if( $("#POSVirtualKeyboard").val() == 1 ){
			/*
			$(document).on("click", "#CustomerSearchEmail", function(){
				NumpadKeyboard('enter_customer', 'Enter Customer')
				.then(function(){
					WindowPopupKeyboard('Enter Customer')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#CustomerSearchEmail").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})

			$(document).on("submit", "#enter_customer", function(e){
				e.preventDefault();
				$("#CustomerSearchEmail").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})
			*/

			$(document).on("click", "#emailTo", function(){
				NumpadCustomEmail('enter_emailto', 'Enter Email')
				.then(function(){
					WindowPopupCustomKeyboard('Email To')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailTo").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})
			

			$(document).on("submit", "#enter_emailto", function(e){
				e.preventDefault();
				$("#emailTo").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})

			$(document).on("click", "#emailBcc", function(){
				NumpadCustomEmail('enter_emailbcc', 'Enter Email')
				.then(function(){
					WindowPopupCustomKeyboard('Email Bcc')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailBcc").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})

			$(document).on("submit", "#enter_emailbcc", function(e){
				e.preventDefault();
				$("#emailBcc").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})

			$(document).on("click", "#emailCc", function(){
				NumpadCustomEmail('enter_emailcc', 'Enter Email')
				.then(function(){
					WindowPopupCustomKeyboard('Email Cc')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailCc").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})

			$(document).on("submit", "#enter_emailcc", function(e){
				e.preventDefault();
				$("#emailCc").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})		

			$(document).on("click", "#emailSubject", function(){
				NumpadCustomKeyboard('enter_emailsubject', 'Enter Subject')
				.then(function(){
					WindowPopupCustomKeyboard('Email Subject')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailSubject").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})


			$(document).on("submit", "#enter_emailsubject", function(e){
				e.preventDefault();
				$("#emailSubject").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})

			$(document).on("click", "#emailMessage", function(){
				NumpadCustomKeyboard('enter_emailmessage', 'Enter Message', false)
				.then(function(){
					WindowPopupCustomKeyboard('Email Message')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailMessage").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})

			$(document).on("submit", "#enter_emailmessage", function(e){
				e.preventDefault();
				$("#emailMessage").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})

			$(document).on('click', '#emailSignature', function(e){
				e.preventDefault();
				NumpadCustomKeyboard('enter_emailSignature', 'Enter Signature', false)
				.then(function(){
					WindowPopupCustomKeyboard('Email Signature')
					.then(function(){
						var searchInput = $('#search_field');
						var strLength = searchInput.val($("#emailSignature").val()).length * 25;
						searchInput[0].setSelectionRange(strLength, strLength);
						searchInput.focus();
					})
				})
			})

			$(document).on('submit', '#enter_emailSignature', function(e){
				$("#emailSignature").val($('#search_field').val());
				$('#dialog-numpad-keyboard').jqxWindow('close');
			})
		}
	}

	EmailReceiptVirtualKeyboard();

	var populateCustomerList = function(form_name, html){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-customer-list").append('<div id="customer-list-container" style="background: #144766; color: #fff;"></div>');
			$("#customer-list-container").html('');
		
			$("#customer-list-container").append(""+
			"<div style='float:left; width: 50%;'>"+
			"	<div style='width: 100%; margin-bottom:10px;'>"+
			"		<span style='float: left; margin-top: 5px; margin-right: 4px;'>Search: </span>"+
			"		<input class='jqx-input' placeholder='Company, Name, Email or Phone' id='searchField_email' type='text' style='height: 23px; width: 230px;'/>"+ 
			"	</div>"+
			"	<div style='width:100%;'>"+
			"		<div id='CustomerListName'></div>"+
			"	</div>"+
			"</div>");

			$("#customer-list-container").append(""+
			"<div style='float:left; width:50%; border-left:1px solid #000;'>"+
			"	<div style='overflow: hidden;' id='ContentPanel'>"+
			"		<div style='width:100%; margin-bottom:14px;'><h4 style='margin:0px;'>Customer Profile</h4></div>"+
			"		<div id='ContentPanelContainer' style='background: #fff; color: #000; height: 550px;'></div>"+
			"	</div>"+
			"</div>");

			$("#customer-list-container").append(''+
			'<div style="width:100%; float:left;">'+
			'	<form id="'+form_name+'">'+
			'		<input type="text" id="number_field" class="hdfield" style="display:none;">'+
			'		<div id="keyboard_customer_list_main"></div>'+
			'	</form>'+
			'</div>');
			def.resolve();
		})
		return def.promise();
	}

	var WindowPopupCustomerList = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-customer-list").jqxWindow({
				height: 500,
				width: '100%',
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-customer-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var CustomerListView = function(form_name, html){
		var def = $.Deferred();
		populateCustomerList(form_name, html)
		.then(function(){
			$('#keyboard_customer_list_main').hdkeyboard({
				layout: "custom8",
				input: $('#number_field')
			});
			setTimeout(function(){
				$("#number_field").focus();
				def.resolve();
			},100);
		});
		return def.promise();
	}

	var populateCustomerForm = function(form_name, html){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-customer-form").append('<div id="customer-form-container" style="background: #144766; color: #fff;"></div>');
			$("#customer-form-container").html('');
			$("#customer-form-container").append(
			"<div style='margin: 10px; font-size: 18px;'><b>Company:</b> <input type='text' class='form-control' id='company' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>First Name:</b> <input type='text' class='form-control' id='firstname' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>Last Name:</b> <input type='text' class='form-control' id='lastname' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>Phone:</b> <input type='text' class='form-control' id='phone' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>Email:</b> <input type='text' class='form-control' id='email' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>Email2:</b> <input type='text' class='form-control' id='email2' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>Email3:</b> <input type='text' class='form-control' id='email3' /></div>"+
			"<div style='margin: 10px; font-size: 18px;'><b>Email4:</b> <input type='text' class='form-control' id='email4' /></div>"
			);
			$("#customer-form-container").append(''+
				'<div style="width:100%; float:left;">'+
				'	<form id="'+form_name+'">'+
				'		<div id="keyboard_customer_form"></div>'+
				'	</form>'+
				'</div>');
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupCustomerForm = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-customer-form").jqxWindow({
				/*
				height: 480,
				width: 380,
				*/
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-customer-form').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var CustomerFormView = function(form_name, html){
		var def = $.Deferred();
		populateCustomerForm(form_name, html)
		.then(function(){
			$('#keyboard_customer_form').hdkeyboard({
				layout: "custom4",
				input: $('#customer_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	$(document).on("click", "#CustomerName", function(){
		CustomerListView('customer_selected', '')
		.then(function(){
			WindowPopupCustomerList('Customer List')
			.then(function(){
				var ResoWidth 	= $("#dialog-customer-list").width();
				var ResoHeight 	= $("#dialog-customer-list").height();

				var ComputeHeight		= ResoHeight - 160;
				var UseHeight			= ComputeHeight;
				var ComputeDisplayRow 	= Math.ceil(ComputeHeight / 30);
				$("#ContentPanelContainer").css({height:UseHeight})
				var source = {
					datatype: "jsonp",
					datafields: [
						{ name: 'Unique' },
						{ name: 'name' },
					],
					url: base_url + "pos/pointofsale/customer-list",
					data: {
						featureClass: "P",
						style: "full",
						maxRows: 20,
						username: "customerdata"
					}
				};
				var CustomerdataAdapter = new $.jqx.dataAdapter(source,
					{
						formatData: function (data) {
							data.name_startsWith = $("#searchField_email").val();
							return data;
						}
					}
				);

				$("#CustomerListName").jqxListBox({
					width: '100%',
					height: UseHeight,
					source: CustomerdataAdapter,
					displayMember: "name",
					valueMember: "Unique",
					renderer: function (index, label, value){
						var item = CustomerdataAdapter.records[index];
						if (item != null) {
							var label = item.name;
							return label;
						}
						return "";
					}
				})

				var me = this;
				// if (me.timer) clearTimeout(me.timer);
					// me.timer = setTimeout(function () {
						CustomerdataAdapter.dataBind();
						// setTimeout(function(){
							// $("#CustomerListName").jqxListBox({selectedIndex: 0});
							// $("#searchField_email").focus();
							// if( $("#POSVirtualKeyboard").val() == 1 ){
							// 	NumpadCustomKeyboard('enter_search2', 'Type Customer Name')
							// 	.then(function(){
							// 		WindowPopupCustomKeyboard('Search Customer')
							// 		.then(function(){
							// 			var searchInput = $('#search_field');
							// 			var strLength = searchInput.val($("#searchField_email").val()).length * 25;
							// 			searchInput[0].setSelectionRange(strLength, strLength);
							// 			searchInput.focus();
							// 		})
							// 	})
							// }
						// },500);
					// }, 300);
				$('#dialog-numpad-keyboard').jqxWindow('close');

				var me = this;
				$("#searchField_email").on('keyup', function (event) {
					if (me.timer) clearTimeout(me.timer);
					me.timer = setTimeout(function () {
						CustomerdataAdapter.dataBind();
					}, 300);
				});
				$(".btnpayment").attr({"disabled": false});
				$("#searchField_email").focus();
			})
		})
	})

	$(document).on('click', '#customer_selected .button_cancel', function(){
		$('#dialog-customer-list').jqxWindow('close');
		$("#emailTo").focus();
	})

	$(document).on('click', '#customer_selected .select_me', function(e){
		e.preventDefault();
		$("#emailTo").val(GlobalCustomerArray[0]);
		$("#CustomerName").val(GlobalCustomerArray[1]);
		$('#dialog-customer-list').jqxWindow('close');
		$("#emailTo").focus();
	})

	$(document).on("click", "#customer_selected .create_form", function(e){
		e.preventDefault();
		CustomerFormView('new_customer', '')
		.then(function(){
			WindowPopupCustomerForm('New Customer')
			.then(function(){
				if( $("#POSVirtualKeyboard").val() == 1 ){
					NumpadKeyboard('enter_add_customer_company', 'Enter Company')
					.then(function(){
						WindowPopupKeyboard('Add Company')
						.then(function(){
							var searchInput = $('#search_field');
							var strLength = searchInput.val($("#company").val()).length * 25;
							searchInput[0].setSelectionRange(strLength, strLength);
							searchInput.focus();
						})
					})
				}
			})
		})
	})

	var populateEditCustomerForm = function(form_name, data){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-customer-edit-form").append('<div id="customer-edit-form-container" style="background: #144766; color: #fff;"></div>');
			$("#customer-edit-form-container").html('');
			$("#customer-edit-form-container").append(
			'<div style="margin: 10px; font-size: 18px;"><b>Company:</b> <input type="text" class="form-control" id="edit_company" value="'+data[5]+'"/></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>First Name:</b> <input type="text" class="form-control" id="edit_firstname" value="'+data[1]+'"/></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>Last Name:</b> <input type="text" class="form-control" id="edit_lastname" value="'+data[2]+'" /></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>Phone:</b> <input type="text" class="form-control" id="edit_phone" value="'+data[3]+'"/></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>Email:</b> <input type="text" class="form-control" id="edit_email" value="'+data[4]+'"/></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>Email2:</b> <input type="text" class="form-control" id="edit_email2" value="'+data[6]+'"/></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>Email3:</b> <input type="text" class="form-control" id="edit_email3" value="'+data[7]+'"/></div>'+
			'<div style="margin: 10px; font-size: 18px;"><b>Email4:</b> <input type="text" class="form-control" id="edit_email4" value="'+data[8]+'"/></div>')
			$("#customer-edit-form-container").append(''+
				'<div style="width:100%; float:left;">'+
				'	<form id="'+form_name+'">'+
				'		<div id="keyboard_edit_customer_form"></div>'+
				'	</form>'+
				'</div>');
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupEditCustomerForm = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-customer-edit-form").jqxWindow({
				height: 650,
				width: 380,
				isModal: true,
				title: 'Edit Customer',
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-customer-edit-form').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var EditCustomerFormView = function(form_name, data){
		var def = $.Deferred();
		populateEditCustomerForm(form_name, data)
		.then(function(){
			$('#keyboard_edit_customer_form').hdkeyboard({
				layout: "custom4",
				input: $('#customer_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	var CustomerSaveThenSelect = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var source = {
				datatype: "jsonp",
				datafields: [
					{ name: 'Unique' },
					{ name: 'name' },
				],
				url: base_url + "pos/pointofsale/customer-list",
				data: {
					featureClass: "P",
					style: "full",
					maxRows: 20,
					username: "customerdata"
				}
			};

			var CustomerdataAdapter = new $.jqx.dataAdapter(source,
				{
					formatData: function (data) {
						data.name_startsWith = $("#searchField_email").val();
						return data;
					}
				}
			);

			$("#CustomerListName").jqxListBox({
				width: '100%',
				height: 350,
				source: CustomerdataAdapter, 
				//selectedIndex: 0,
				displayMember: "name",
				valueMember: "Unique",
				renderer: function (index, label, value) {
					var item = CustomerdataAdapter.records[index];
					if (item != null) {
						var label = item.name;
						return label;
					}
					return "";
				}
			})
			
			var me = this;
			$("#searchField").on('keyup', function (event) {
				if (me.timer) clearTimeout(me.timer);
				me.timer = setTimeout(function () {
					CustomerdataAdapter.dataBind();
				}, 300);
			});
			def.resolve();
		},100);
		return def.promise();
	}

	$(document).on("click", "#customer_selected .edit_form", function(){
		var data = CustomerProfileArray;
		EditCustomerFormView('edit_customer2', data)
		.then(function(){
			WindowPopupEditCustomerForm()
			.then(function(){
				$("#firstname").focus();
			})
		})
	})

	$(document).on('click', '#edit_customer2 .save_form', function(e){
		e.preventDefault();
		var data = CustomerProfileArray;
		var postdata ="FirstName="+$("#edit_firstname").val();
			postdata+="&LastName="+$("#edit_lastname").val();
			postdata+="&Phone="+$("#edit_phone").val();
			postdata+="&Email="+$("#edit_email").val();
			postdata+="&Email2="+$("#edit_email2").val();
			postdata+="&Email3="+$("#edit_email3").val();
			postdata+="&Email4="+$("#edit_email4").val();
			postdata+="&CustomerUnique="+data[0];
			postdata+="&Company="+$("#edit_company").val();
		var fullname = ($("#edit_firstname").val() + ' ' + $("#edit_lastname").val());
		if($("#edit_firstname").val() !== ''){
			$("#searchField_email").val(fullname);
			posData.UpdateCustomerProfile(postdata)
			.success(function(data){
				if(data.success){
					$(".save_form").text('');
					$(".save_form").append('<img src="'+base_url+'assets/img/symbol_check.png'+'" height="50" width="50" />');
					$(".save_form").removeClass('save_form');
					$("#ContentPanelContainer").html('');
					CustomerSaveThenSelect();
					setTimeout(function(){
						$("#dialog-customer-edit-form").jqxWindow('close');
					},1000);
				}
			}).then(function(){
				setTimeout(function(){
					$("#CustomerListName").jqxListBox({selectedIndex: 0 }); 
				},500);
			})
		}else{
			var msg = 'First name is required field';
			NumpadAlertOk('customer_firstname_required', msg)
			.then(function(){
				WindowPopupAlert('Failed to continue');
			});
		}
	})

	$(document).on("click", "#edit_customer2 .button_cancel", function(e){
		e.preventDefault();
		$("#dialog-customer-edit-form").jqxWindow('close');
	})

	$(document).on('click', '#searchField_email',  function(e){
		e.preventDefault();
		if( $("#POSVirtualKeyboard").val() == 1 ){
			NumpadCustomKeyboard('enter_search2', 'Type Customer Name')
			.then(function(){
				WindowPopupCustomKeyboard('Search Customer')
				.then(function(){
					var searchInput = $('#search_field');
					var strLength = searchInput.val($("#searchField_email").val()).length * 25;
					searchInput[0].setSelectionRange(strLength, strLength);
					searchInput.focus();
				})
			})
		}
	})

	$(document).on('submit', '#enter_search2', function(e){
		e.preventDefault();
		$("#ContentPanelContainer").html('');
		var search_customer = $("#search_field").val();
		$("#searchField_email").val(search_customer);
		var source = {
			datatype: "jsonp",
			datafields: [
				{ name: 'Unique' },
				{ name: 'name' },
			],
			url: base_url + "pos/pointofsale/customer-list",
			data: {
				featureClass: "P",
				style: "full",
				maxRows: 20,
				username: "customerdata"
			}
		};
		var CustomerdataAdapter = new $.jqx.dataAdapter(source,
			{
				formatData: function (data) {
					data.name_startsWith = $("#searchField_email").val();
					return data;
				}
			}
		);
		
		$("#CustomerListName").jqxListBox({
			width: '100%',
			height: 350,
			source: CustomerdataAdapter,
			displayMember: "name",
			valueMember: "Unique",
			renderer: function (index, label, value){
				var item = CustomerdataAdapter.records[index];
				if (item != null) {
					var label = item.name;
					return label;
				}
				return "";
			}
		})

		var me = this;
		if (me.timer) clearTimeout(me.timer);
			me.timer = setTimeout(function () {
				CustomerdataAdapter.dataBind();
				setTimeout(function(){
					$("#CustomerListName").jqxListBox({selectedIndex: 0});
				},500);
			}, 300);
		$('#dialog-numpad-keyboard').jqxWindow('close');
	})


	var populateGiftCardForm2 = function(form_name, ItemUnique, Price){
		var def = $.Deferred();
		var DisplayInputCard = 'none';
		posData.AcctDefault()
		.success(function(data){
			if(data.account == 'Swipe'){
				DisplayInputCard = 'block';
			}
			$("#dialog-gift-card2").append('<div class="main_gc_container2" style="background: #144766; color:#EEE;"></div>');
			$(".main_gc_container2").html('');
			$(".main_gc_container2").append($compile(''+
			'<script type="text/javascript">'+
				'function KeyPress(e) {'+
					'var evtobj = window.event? event : e;'+
					'if (evtobj.keyCode == 66 && evtobj.ctrlKey) $("#gift_card_number2").focus()'+
				'}'+
				'document.onkeydown = KeyPress;'+
			'</script>'+
			'<form id="'+form_name+'">'+
				'<div class="gc_container" style="float:left;">'+
					'<h3 align="center" style="font-weight:bolder; margin-top:0 !important;">Sell Gift Card</h3>'+	
					'<div class="sel_amount">'+
						'<div style="float:left; width:110px;">'+
							'<div style="position:relative; width: 90px; height: 200px;">'+
								'<div style="border: 3px solid #ffffff; position: absolute; width: 95px; height: 90px; left: 10px ;  top:70px;">'+
									'<button style="height:85px; width: 90px; font-weight: bold; font-size: 15px; color: #000;" disabled="disabled">Gift Card<br/>Amount</button>'+
								'</div>'+
							'</div>'+
						'</div>'+
						'<div style="float: left; width:340px; padding-bottom:5px;">'+
							'<div style="float:left; width:270px; padding:5px;" align="right"><h5 style="font-weight:bold;">Select Amount</h5></div>'+
							'<div style="float:left; width:125px; padding:5px;"><button type="button" id="gift_card_manual_enter_amount2"  class="btn-enter-amount-gc">Enter Amount</button></div>'+
							'<div style="float:left; width:155px; padding-top:20px;" align="right"><span class="gift_card_amt" id="gift_card_amount2">'+parseFloat(Price).toFixed(2)+'</span></div>'+
							'<div style="float:left; witdh:100%; padding-top:5px; padding-bottom:5px;">'+
								'<button type="button" class="btn-sel-amount-gc2">10</button>'+
								'<button type="button" class="btn-sel-amount-gc2">20</button>'+
								'<button type="button" class="btn-sel-amount-gc2">25</button>'+
								'<button type="button" class="btn-sel-amount-gc2">50</button>'+
								'<button type="button" class="btn-sel-amount-gc2">100</button>'+
							'</div>'+
						'</div>'+
					'</div>'+
				'</div>'+
				'</br>'+
				'<div class="sel_amount" style="float:left;">'+
					'<div style="float:left; width:110px;">'+
						'<div style="position:relative; width: 90px; height: 130px;">'+
							'<div style="border: 3px solid #ffffff; position: absolute; width: 95px; height: 90px; left: 10px ; top:15px;">'+
								'<button type="button" style="height:85px; width: 90px; font-size: 15px; color: #000; font-weight: bold" disabled="disabled">Gift Card<br/>Number</button>'+
							'</div>'+
						'</div>'+
					'</div>'+
					'<div style="float: left; width:320px; padding-top:10px;">'+
						'<input type="text" class="form-control cardinfos2" id="gift_card_number2" ng-enter="ParseCardInfo2()" ng-model="card.ccinfo2" style="display:'+DisplayInputCard+';">'+
						'<div style="float:left; width:138px; padding:5px;"><button type="button" id="swipe_card2" class="btn-enter-amount-gc">Swipe</button></div>'+
						'<div style="float:left; width:138px; padding:5px;"><button type="button" class="btn-enter-amount-gc manual-giftcard2">Input</button></div>'+
						'<div style="float:left; width:138px; padding:5px;"><button type="button" id="gc_device" class="btn-enter-amount-gc" style="display:none;">Device</button></div>'+
						'<div style="float:left; width:138px; padding:5px;"><button type="button" id="gc_prompt_device" class="btn-enter-amount-gc" style="display:none;">Device<br/>Prompt</button></div>'+
					'</div>'+
				'</div>'+
				'<div class="sel_amount" style="float:left;">'+
					'<div style="float:left; width:110px;">'+
						'<div style="position:relative; width: 90px; height: 130px;">'+
							'<div style="border: 3px solid #ffffff; position: absolute; width: 95px; height: 90px; left: 10px ; top:15px;">'+
								'<button type="button" style="height:85px; width: 90px; font-size: 15px; color: #000; font-weight: bold" disabled="disabled">Current<br/>Balance</button>'+
							'</div>'+
						'</div>'+
					'</div>'+
					'<div style="float: left; width:320px; padding-top:30px;">'+
						'<div style="float:left; width:320px; padding-top:20px;" align="left"><span class="gift_card_bal" id="gift_card_balance2">Please swipe the Gift Card.</span><button class="btn btn-warning btn-lg" id="gcbalprint2" style="display:none;">Print</button></div>'+
					'</div>'+
				'</div>'+
				'<input type="text" id="gift_card_field2" class="hdfield" value="'+ItemUnique+'" style="display:none;"/>'+
				'<input type="hidden" id="gift_card_check_status" />'+
				'<div style="float:left; width: 450px;" id="functions2" align="right"></div>'+
				'<input type="hidden" id="akgcbalance" />'+
			'</form>'+
			'')($scope));
			def.resolve();
		})
		return def.promise();
	}

	$(document).on("click", "#swipe_card2", function(){
		$("#gift_card_number2").show();
		$("#gift_card_number2").val('');
		$("#gift_card_number2").focus();
	})

	$(document).on('click', '#gift_card_manual_enter_amount2', function(e){
		e.preventDefault();
		NumpadPriceGC('gift_card_manual_amount2')
		.then(function(){
			WindowPopupPriceGC('Gift Card')
			.then(function(){
				setTimeout(function(){
					$("#gc_enter_amount").jqxNumberInput('focus');
					var input = $('#gc_enter_amount input')[0];
					if('selectionStart' in input) {
						input.setSelectionRange(0, 0);
						$("#gc_enter_amount").select();
					}else{
						var range = input.createTextRange();
						range.collapse(true);
						range.moveEnd('character', 0);
						range.moveStart('character', 0);
						range.select();
					}
					$("#gc_enter_amount input").select();
				},100)
			})
		})
	})

	$(document).on("submit", "#gift_card_manual_amount2", function(e){
		e.preventDefault();
		var manual_amount = $("#gc_enter_amount").val();
		if(manual_amount == ''){
			manual_amount = 0.00;
		}
		$("#gift_card_amount2").text(parseFloat(manual_amount).toFixed(2));
		setTimeout(function(){
			$("#gift_card_number2").focus();
		},100);
		$("#dialog-numpad-gift-price").jqxWindow('close');
	})

	$(document).on('click', '.manual-giftcard2', function(e){
		e.preventDefault();
		NumpadGiftCard('gift_card_manual_card2')
		.then(function(){
			WindowPopupGiftCard('Gift Card')
			.then(function(){
				$("#card_field").val('');
				$("#card_field").focus();
				setTimeout(function(){
					$("#card_field").select();
				},100);
			})
		})
	})

	$scope.ParseCardInfo2 = function(){
		var CreditCardInfo = $(".cardinfos2").val();
		$("#gcbalprint2").hide(); 
		ParseParserObj2();
	};

	var ParseParserObj2 = function(){
		if($("#gift_card_number2").val() != ''){
			var p = new SwipeParserObj( document.getElementById('gift_card_number2').value );
			if( p.hasTrack1 ){
				p.account_name;
				p.surname;
				p.firstname;
				p.account;
				p.exp_month + "/" + p.exp_year;
				
				var convert_card = p.account;
				var cardtype = GetCardType(p.account);
				$("#gift_card_number2").val(convert_card);
				$("#card_field").val(convert_card);
				$("#gift_card_balance2").text('Processing please wait...');
				GiftCardBalanceAPI(convert_card)
				.then(function(result, status){
					$("#gift_card_balance2").text(result);
					$("#gift_card_check_status").val(status);
				})
				//cardvalidate(p.account,"");
			}else if( p.hasTrack2){
				p.account_name;
				p.surname;
				p.firstname;
				p.account;
				p.exp_month + "/" + p.exp_year;
				
				var convert_card = p.account;
				var cardtype = GetCardType(p.account);
				$("#gift_card_number2").val(convert_card);
				$("#card_field").val(convert_card);
				$("#gift_card_balance2").text('Processing please wait...');
				GiftCardBalanceAPI(convert_card)
				.then(function(result, status){
					$("#gift_card_balance2").text(result);
					$("#gift_card_check_status").val(status);
				})

			}else{
				var giftcard = document.getElementById('gift_card_number2').value;
				$("#gift_card_number2").val(giftcard);
				$("#card_field").val(giftcard);
				$("#gift_card_balance2").text('Processing please wait...');
				//GiftCardBalance(giftcard);
				GiftCardBalanceAPI(giftcard)
				.then(function(result, status){
					$("#gift_card_balance2").text(result);
					$("#gift_card_check_status").val(status);
				})
			}
		}else{
			var msg = "Please swipe or type Gift Card Number";
			NumpadAlertClose ('gift_card_number_required', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			});	
		}
	}

	$scope.ParseCardInfo3 = function(){
		var CreditCardInfo = $(".cardinfos2").val();
		ParseParserObj3();
	};

var ParseParserObj3 = function(){
	if($("#card_field").val() != ''){
		var p = new SwipeParserObj( document.getElementById('card_field').value );
		if( p.hasTrack1 ){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			
			var convert_card = p.account;
			var cardtype = GetCardType(p.account);
			$("#card_field").val(convert_card);
			$("#"+FormName).submit();
		}else if(p.hasTrack2){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			
			var convert_card = p.account;
			var cardtype = GetCardType(p.account);
			$("#card_field").val(convert_card);
			$("#"+FormName).submit();
		}else{
			var giftcard = document.getElementById('card_field').value;
			$("#card_field").val(giftcard);
			$("#"+FormName).submit();
		}
	}else{
		var msg = "Please swipe or type Gift Card Number";
		NumpadAlertClose ('gift_card_number_required', msg)
		.then(function(){
			WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
		});	
	}
}

	$(document).on("submit", "#gift_card_manual_card2", function(e){
		e.preventDefault();
		$("#gift_card_number2").show();
		$("#gift_card_number2").val($("#card_field").val());
		$("#dialog-numpad-gift-card").jqxWindow("close");
		$("#gift_card_number2").focus();
		
	})
	
	/*Gift Card Window popup*/
	var WindowPopupGiftCardForm2 = function(header_text){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-gift-card2").jqxWindow({
				height: '100%',
				width: 480,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-gift-card2').jqxWindow('setTitle', header_text);
			$('#dialog-gift-card2').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var GiftCardForm2 = function(form, ItemUnique, Price){
		var def = $.Deferred();
		populateGiftCardForm2(form, ItemUnique, Price)
		.then(function(){
			$('#functions2').hdgiftcard({
				layout: "giftcard_function2",
				input: $("#gift_card_field2")
			});
			def.resolve();
		});
		return def.promise();
	}

	$(document).on("submit", "#sell_gift_card_datacap", function(e){
		e.preventDefault();
		GiftCardReloadArray = [];
		if($("#gift_card_amount2").text() != '0.00'){
			if($("#gift_card_number2").val()){
					if($("#gift_card_check_status").val() == 'Approved'){
						if($("#gift_card_amount2").text() > 0){
							var msg = "Gift Card is already issued, do you want to add "+ $("#gift_card_amount2").text() +" amount to this Gift Card?";
							NumpadAlertYesNo('gift_card_reload_datacap', msg)
							.then(function(){
									WindowPopupAlert ('Gift Card')	
							})
						}else if($("#gift_card_amount2").text() < 0){
							var msg = "Gift Card is already issued, do you want to refund "+ $("#gift_card_amount2").text() +" amount to this Gift Card?";
							NumpadAlertYesNo('gift_card_return_datacap', msg)
							.then(function(){
								WindowPopupAlert ('Gift Card')	
							})
						}
					}else{
						var postdata ="ItemId=" + $("#gift_card_field2").val();
							postdata+="&QuantityBefore=0";
							postdata+="&Amount="+ $("#gift_card_amount2").text();
							postdata+="&Description="+encodeURIComponent(GiftCardArray[0].Description);
							postdata+="&Points="+GiftCardArray[0].Points;
							postdata+="&Cost="+GiftCardArray[0].Cost;
							postdata+="&Cost_Extra="+GiftCardArray[0].CostExtra;
							postdata+="&Cost_Freight="+GiftCardArray[0].CostFreight;
							postdata+="&Cost_Duty="+GiftCardArray[0].CostDuty;
							postdata+="&Custom1="+GiftCardArray[0].Custom1;
							postdata+="&Item="+GiftCardArray[0].Item;
							postdata+="&EBT="+GiftCardArray[0].EBT;
							postdata+="&Price1="+GiftCardArray[0].Price1;
							postdata+="&ListPrice="+GiftCardArray[0].ListPrice;
						posData.AddItem(postdata)
						.success(function(data){
							$.blockUI({ css: { 
								border: '2px solid #fff',
								padding: '15px', 
								backgroundColor: '#210e66', 
								'-webkit-border-radius': '10px', 
								'-moz-border-radius': '10px', 
								opacity: 1, 
								color: '#fff',
								fontSize: '20px' 
							}, message: 'Processing please wait...' });

							postdata+="&ReceiptDetailsUnique="+data.ReceiptDetailsUnique;
							postdata+="&ReceiptHeaderUnique="+data.ReceiptHeaderUnique;
							postdata+="&CustomerUnique="+GlobalCustomer;
							postdata+="&AcctNo="+$("#gift_card_number2").val();
							$('#dialog-gift-card2').jqxWindow('close');
							posData.GiftCardIssue(postdata)
							.success(function(data2){
								setTimeout($.unblockUI, 100); 
								if(data2.CmdStatus == 'Approved'){
									var msg = data2.Status+"<br/>";
										msg+= data2.msg+"<br/>";
										msg+= data2.Balance;
									NumpadAlertClose ('gift_card_message', msg)
									.then(function(){
										WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Issue');
									});

									$scope.desc = data;
									ReloadInformation();
									GetCustomerSave(); //not disabled because there is no load_data process 
									$scope.BtnPaymentWhen = false;
									PoleDisplay(data.ReceiptDetailsUnique);
									$("#barcode_search").attr("disabled", false);
									$("#barcode_search").focus();
									GlobalItemUnique.Unique = 0;
									BEFOREQUANTITY = 0;
								}else if(data2.CmdStatus == 'Declined'){
									var msg = data2.Status+"<br/>";
										msg+= data2.msg;
									NumpadAlertClose ('gift_card_message', msg)
									.then(function(){
										WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Issue');
									});
								}else if(data2.CmdStatus == 'Error'){
									var msg = data2.Status+"<br/>";
										msg+= data2.msg;
									NumpadAlertClose ('gift_card_message', msg)
									.then(function(){
										WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Issue');
									});
								}
							})
						})	
					}
				
			}else{
				var msg = "Gift Card Number is required";
				NumpadAlertClose ('gift_card_message', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Issue');
				});
			}
		}else{
			var msg = "Please select or enter Amount greater than 0";
			NumpadAlertClose ('gift_card_message', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Issue');
			});
		}
	})

	$(document).on("submit", "#gift_card_reload_datacap", function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow("close");
		var postdata ="ItemId=" + $("#gift_card_field2").val();
			postdata+="&QuantityBefore=0";
			postdata+="&Amount="+ $("#gift_card_amount2").text();
			postdata+="&AcctNo="+$("#gift_card_number2").val();
			postdata+="&Description="+encodeURIComponent(GiftCardArray[0].Description);
			postdata+="&Points="+GiftCardArray[0].Points;
			postdata+="&Cost="+GiftCardArray[0].Cost;
			postdata+="&Cost_Extra="+GiftCardArray[0].CostExtra;
			postdata+="&Cost_Freight="+GiftCardArray[0].CostFreight;
			postdata+="&Cost_Duty="+GiftCardArray[0].CostDuty;
			postdata+="&Custom1="+GiftCardArray[0].Custom1;
			postdata+="&Item="+GiftCardArray[0].Item;
			postdata+="&EBT="+GiftCardArray[0].EBT;
			postdata+="&Price1="+GiftCardArray[0].Price1;
			postdata+="&ListPrice="+GiftCardArray[0].ListPrice;
		posData.AddItem(postdata)
		.success(function(data){
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Gift Card Reload processing please wait...' });

			postdata+="&ReceiptDetailsUnique="+data.ReceiptDetailsUnique;
			postdata+="&ReceiptHeaderUnique="+data.ReceiptHeaderUnique;
			postdata+="&CustomerUnique="+GlobalCustomer;
			posData.GiftCardDatacapReload(postdata)
			.success(function(gcReloadRes){
				setTimeout($.unblockUI, 100); 
				if(gcReloadRes.CmdStatus == 'Approved'){
					var msg = gcReloadRes.Status+"<br/>";
						msg+= gcReloadRes.msg+"<br/>";
						msg+= gcReloadRes.Balance;
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Reload');
					});
					ReloadInformation();
					$scope.desc = gcReloadRes;

					//LoadOrderedItemList();
					//LoadTax();
					//LoadEBT();
					//LoadDiscount();
					//LoadPayments();
					//LoadChange();
					//ReceiptTaxChecker();
					//CheckReceiptStatus();
					GetCustomerSave(); //not disabled because there is no load_data process
					$scope.BtnPaymentWhen = false;
					//LoadTotals()
					//.then(function(){
					//	POSTotal()
					//	.then(function(){
							PoleDisplay(data.ReceiptDetailsUnique);
					//	});
					//})
					$("#barcode_search").attr("disabled", false);
					$("#barcode_search").focus();
					GlobalItemUnique.Unique = 0;
					BEFOREQUANTITY = 0;
				}else if(gcReloadRes.CmdStatus == 'Declined'){
					var msg = gcReloadRes.Status;
						msg+= gcReloadRes.msg
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Reload');
					});
				}else if(gcReloadRes.CmdStatus == 'Error'){
					var msg = gcReloadRes.Status;
						msg+= gcReloadRes.msg
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Reload');
					});
				}
			})
			$('#dialog-gift-card2').jqxWindow('close');
		})
	})

	$(document).on("submit", "#gift_card_return_datacap", function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow("close");
		var postdata ="ItemId=" + $("#gift_card_field2").val();
			postdata+="&QuantityBefore=0";
			postdata+="&Amount="+ $("#gift_card_amount2").text();
			postdata+="&AcctNo="+$("#gift_card_number2").val();
		posData.AddItem(postdata)
		.success(function(data){
			//$("body").block({message: 'Gift Card Refund processing please wait...'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Gift Card Refund processing please wait...' });
			postdata+="&ReceiptDetailsUnique="+data.ReceiptDetailsUnique;
			postdata+="&ReceiptHeaderUnique="+data.ReceiptHeaderUnique;
			postdata+="&CustomerUnique="+GlobalCustomer;
			posData.GiftCardRefund(postdata)
			.success(function(gcRefundRes){
				setTimeout($.unblockUI, 100); 
				//$("body").unblock();
				if(gcRefundRes.CmdStatus == 'Approved'){
					var msg = gcRefundRes.Status+"<br/>";
						msg+= gcRefundRes.msg+"<br/>";
						msg+= gcRefundRes.Balance;
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Refund');
					});
					load_data(gcRefundRes);
					$scope.desc = gcRefundRes;
					//LoadOrderedItemList();
					//LoadTax();
					//LoadEBT();
					//LoadDiscount();
					//LoadPayments();
					//LoadChange();
					//ReceiptTaxChecker();
					//CheckReceiptStatus();
					// GetCustomerSave();
					$scope.BtnPaymentWhen = false;
					//LoadTotals()
					//.then(function(){
					//	POSTotal()
					//	.then(function(){
							PoleDisplay(data.ReceiptDetailsUnique);
					//	});
					//})
					$("#barcode_search").attr("disabled", false);
					$("#barcode_search").focus();
					GlobalItemUnique.Unique = 0;
					BEFOREQUANTITY = 0;
				}else if(gcRefundRes.CmdStatus == 'Declined'){
					var msg = gcRefundRes.Status;
						msg+= gcRefundRes.msg
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Refund');
					});
				}else if(gcRefundRes.CmdStatus == 'Error'){
					var msg = gcRefundRes.Status;
						msg+= gcRefundRes.msg
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Refund');
					});
				}
			})
			$('#dialog-gift-card2').jqxWindow('close');
		})
	})

	var populateGCBalanceOption = function(form_name){
		var def = $.Deferred();
			$("#gc_balance_option").append('<div id="gc_balance_option_container" style="background: #144766;"></div>');
			$("#gc_balance_option_container").html('');
			posData.GCOption()
			.success(function(data){
				GCBalOptionID = data.Default;
				$("#gc_balance_option_container").append(data.html);
			}).then(function(){
				$("#gc_balance_option_container").append(
					'<form id="'+form_name+'">'+	
						'<input type="text" id="gc_balance_option_field" class="hdfield"  style="display:none;"/>'+
						'<div style="float:left; width: 450px;" id="gc_balance_option_fn" align="right"></div>'+
					'</form>'
				);
				def.resolve();
			})	
		return def.promise();
	}

	/*Gift Card Window popup*/
	var WindowPopupGiftCardBalOption = function(header_text){
		var def = $.Deferred();
		setTimeout(function(){
			$("#gc_balance_option").jqxWindow({
				height: 320,
				width: 480,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#gc_balance_option').jqxWindow('setTitle', header_text);
			$('#gc_balance_option').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var GiftCardBalOption = function(form){
		var def = $.Deferred();
		populateGCBalanceOption(form)
		.then(function(){
			$('#gc_balance_option_fn').hdgiftcard({
				layout: "giftcard_function2",
				input: $("#gc_balance_option_field")
			});
			def.resolve();
		});
		return def.promise();
	}

	$scope.GiftCardBalance = function(){
		GiftCardBalOption("giftcard_balance_option")
		.then(function(){
			WindowPopupGiftCardBalOption('Gift Card Balance Option')
		})
	}

	var GCBalOptionID = '';
	$(document).on('click', '.radiogcoption', function(){
		var id = $('input[type=radio][name=group1]:checked').attr('id');
		GCBalOptionID = id;
	});

	$(document).on("submit", "#giftcard_balance_option", function(e){
		e.preventDefault();
		if(GCBalOptionID == 'Swipe'){
			NumpadGiftCard("gc_bal_manual")
			.then(function(){
				WindowPopupGiftCard("Gift Card Balance")
				.then(function(){
					$("#card_field").focus();
				})
			})
		}else{
			//$("body").block({message: 'Please swipe the Gift Card'});
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px' 
			}, message: 'Please swipe the Gift Card' });

			var postdata ="CustomerUnique="+GlobalCustomer;
				postdata+="&AcctNo="+GCBalOptionID;
			posData.GiftCardBalance(postdata)
			.success(function(data){
				setTimeout($.unblockUI, 100);
				//$("body").unblock();
				if(data.CmdStatus == 'Approved'){
					var msg = data.Status+"<br/>";
						msg+= data.msg+"<br/>";
						msg+= data.Balance;
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Balance');
					});
				}else if(data.CmdStatus == 'Declined'){
					var msg = data.Status+"<br/>";
						msg+= data.msg;
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Balance');
					});
				}else if(data.CmdStatus == 'Error'){
					var msg = data.Status+"<br/>";
						msg+= data.msg;
					NumpadAlertClose ('gift_card_message', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Balance');
					});
				}
			})
		}
		$("#gc_balance_option").jqxWindow('close');
	})

	$(document).on("submit", "#gc_bal_manual", function(e){
		e.preventDefault();
		//$('body').block({message : 'Processing please wait...'});
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message : 'Processing please wait...' });

		var postdata ="CustomerUnique="+GlobalCustomer;
			postdata+="&AcctNo="+ $("#card_field").val();
		posData.GiftCardBalance(postdata)
		.success(function(data){
			//$("body").unblock();
			setTimeout($.unblockUI, 100); 
			if(data.CmdStatus == 'Approved'){
				var msg = data.Status+"<br/>";
					msg+= data.msg+"<br/>";
					msg+= data.Balance;
				NumpadAlertClose ('gift_card_message', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Balance');
				});
			}else if(data.CmdStatus == 'Declined'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertClose ('gift_card_message', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Balance');
				});
			}else if(data.CmdStatus == 'Error'){
				var msg = data.Status+"<br/>";
					msg+= data.msg;
				NumpadAlertClose ('gift_card_message', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span> Gift Card Balance');
				});
			}
		})
		$("#dialog-numpad-gift-card").jqxWindow("close");
	})

	var GiftCardBalanceAPI = function(cardno){
		var def = $.Deferred();
		var postdata ="CustomerUnique="+GlobalCustomer;
			postdata+="&AcctNo="+$('#gift_card_number2').val();
		posData.GiftCardBalance(postdata)
		.success(function(data){
			if(data.CmdStatus == 'Approved'){
				def.resolve(data.Balance, data.CmdStatus);
				$("#akgcbalance").val(data.AmountBalance);
				$("#gcbalprint2").show();
			}else if(data.CmdStatus == 'Declined'){
				def.resolve(data.msg, data.CmdStatus);
				$("#gcbalprint2").hide();
			}else if(data.CmdStatus == 'Error'){
				def.resolve(data.msg, data.CmdStatus);
				$("#gcbalprint2").hide();
			}
		})
		return def.promise();
	}

	$(document).on("click", "#gc_device", function(){

	})

	$(document).on("click", "#gc_device_prompt", function(){
		
	})

	$(document).on("click", "#sell_gift_card #gcbalprint", function(e){
		e.preventDefault();
		var GiftCardNo 	= $("#gift_card_number").val();
		var GCBalance 	= $("#akgcbalance").val();
		var postdata = "GiftCard="+GiftCardNo;
			postdata+= "&GiftCardBalance="+GCBalance; 
		posData.GiftCardPrintBalance(postdata)
		.success(function(data){
			
		})
	})

	$(document).on("click", "#sell_gift_card_datacap #gcbalprint2", function(e){
		e.preventDefault();
		var GiftCardNo 	= $("#gift_card_number2").val();
		var GCBalance 	= $("#akgcbalance").val();
		var postdata = "GiftCard="+GiftCardNo;
			postdata+= "&GiftCardBalance="+GCBalance; 
		posData.GiftCardPrintBalance(postdata)
		.success(function(data){
			
		})
	})

	$("#dialog-menu-selection").on("close", function(event){
		$("#menu_selection_container").html();
	}) 

	var populateMenuSelection = function(form_name){
		var def = $.Deferred();
			posData.POSMenu()
			.success(function(data){
				if(data.success){
					$("#dialog-menu-selection").append('<div id="menu_selection_container" style="background: #144766; color:#EEE;"></div>');
					$("#menu_selection_container").html('');
					$("#menu_selection_container").append('<h4 style="text-align:center;">Select POS MENU</h4>');
					$("#menu_selection_container").append(''+
					'<form id="'+form_name+'">'+
						data.html+
						'<input type="text" id="number_field" class="hdfield" style="color:#000; display: none;">'+
						'<div id="keboard_menu_selection"></div>'+
					'</form>');
					def.resolve();
				}
			})
		return def.promise();
	}
		
	var WindowPopupMenuSelection = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-menu-selection").jqxWindow({
				height: 490,
				width: 500,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-menu-selection').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var NumpadMenuSelection = function(form_name){
		var def = $.Deferred();
		populateMenuSelection(form_name)
		.then(function(){
			$('#keboard_menu_selection').hdkeyboard({
				layout: "custom4",
				input: $('#number_field')
			});
			setTimeout(function(){
				$("#number_field").focus();
				def.resolve();
			},100);
		});
		return def.promise();
	}

	$scope.POSMenu = function(){
		NumpadMenuSelection('pos_menu_selection')
		.then(function(){
			WindowPopupMenuSelection('POS Menu');
		})
	} 

	var POSMenuID = '';
	$(document).on('click', '.radio_posmenu', function(){
		var id = $('input[type=radio][name=group1]:checked').attr('id');
		POSMenuID = id;
	});

	$(document).on('click', "#pos_menu_selection .save_form", function(e){
		e.preventDefault();
		if(POSMenuID){
			var postdata = "POSMenuUnique="+POSMenuID;
			posData.UpdatePOSMenu(postdata)
			.success(function(data){
				if(data.success){
					$("#dialog-menu-selection").jqxWindow("close");
					setTimeout(function(){
						$window.location = base_url + "pos/pointofsale";
					},500);
				}
			})
		}else{
			$("#dialog-menu-selection").jqxWindow("close");
		}
	})

	$(document).on('click', '#pos_menu_selection .button_cancel', function(e){
		e.preventDefault();
		$("#dialog-menu-selection").jqxWindow('close');
	})

	$("#dialog-tax-list").on('close', function(event){
		$("#tax_list_container").html('');
	})

	var populateTaxSelection = function(form_name){
		var def = $.Deferred();
			posData.TaxList()
			.success(function(data){
				$("#dialog-tax-list").append('<div id="tax_list_container" style="background: #144766; color:#EEE;"></div>');
				$("#tax_list_container").html('');
				$("#tax_list_container").append('<h4 style="text-align:center;">Select Tax</h4>');
				$("#tax_list_container").append(''+
				'<form id="'+form_name+'">'+
					data.html+
					'<input type="text" id="number_field_tax" class="hdfield" style="color:#000; display: none;">'+
					'<div id="keboard_tax_selection"></div>'+
				'</form>');
				def.resolve();
			})
		return def.promise();
	}
		
	var WindowPopupTaxSelection = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-tax-list").jqxWindow({
				height: 490,
				width: 400,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-tax-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadTaxSelection = function(form_name){
		var def = $.Deferred();
		populateTaxSelection(form_name)
		.then(function(){
			$('#keboard_tax_selection').hdkeyboard({
				layout: "custom4",
				input: $('#number_field_tax')
			});
			def.resolve();
		});
		return def.promise();
	}

	$scope.ReceiptTaxList = function(){
		$("#ReceiptfnButtonfunction").attr("disabled", true);
		NumpadTaxSelection('receipt_tax_list')
		.then(function(){
			$("#ReceiptfnButtonfunction").attr("disabled", false);
			WindowPopupTaxSelection('Tax List')
		})
	}

	var populateItemTaxSelection = function(form_name, RDU){
		var def = $.Deferred();
			var postdata ="ReceiptDetailsUnique="+RDU;
			posData.ItemTaxList(postdata)
			.success(function(data){
				$("#dialog-tax-list").append('<div id="tax_list_container" style="background: #144766; color:#EEE;"></div>');
				$("#tax_list_container").html('');
				$("#tax_list_container").append('<h4 style="text-align:center;">Select Tax</h4>');
				$("#tax_list_container").append(''+
				'<form id="'+form_name+'">'+
					data.html+
					'<input type="text" id="number_field_tax" class="hdfield" style="color:#000; display: none;">'+
					'<div id="keboard_tax_selection"></div>'+
				'</form>');
				def.resolve();
			})
		return def.promise();
	}
		
	var WindowPopupItemTaxSelection = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#dialog-tax-list").jqxWindow({
				height: 490,
				width: 400,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#dialog-tax-list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadItemTaxSelection = function(form_name, unique){
		var def = $.Deferred();
		populateItemTaxSelection(form_name, unique)
		.then(function(){
			$('#keboard_tax_selection').hdkeyboard({
				layout: "custom4",
				input: $('#number_field_tax')
			});
			def.resolve();
		});
		return def.promise();
	}

	$scope.ItemTaxList = function(){
		var Unique = GlobalItemUnique.Unique;
		$("#ItemTaxListfnButtonfunction").attr("disabled", true);
		if(Unique){
			NumpadItemTaxSelection('item_tax_list', Unique)
			.then(function(){
				$("#ReceiptfnButtonfunction").attr("disabled", false);
				WindowPopupItemTaxSelection('Tax List')
				$("#ItemTaxListfnButtonfunction").attr("disabled", false);
			})
		}else{
			var msg ="Please select Item first";
			NumpadAlertClose('taxlist_failed', msg)
			.then(function(){
				WindowPopupAlert("Information")
				$("#ItemTaxListfnButtonfunction").attr("disabled", false);
			})	
		}
	}

	TaxSelected = [];
	var GetAllCheckTax = function(){
		var def = $.Deferred();
		$('input.receipt_tax_checked:checked').each(function() {
			TaxSelected.push($(this).attr('id'));	
		}).promise().done(function(){
			def.resolve()
		})
		return def.promise();
	}

	TaxNotSelected = [];
	var GetAllNotCheckTax = function(){
		var def = $.Deferred();
		$('input.receipt_tax_checked:not(:checked').each(function() {
			TaxNotSelected.push($(this).attr('id'));
		}).promise().done(function(){
			def.resolve()
		})
		return def.promise();
	}

	$(document).on("click", "#receipt_tax_list .save_form", function(e){
		e.preventDefault();
		GetAllCheckTax()
		.then(function(){
			GetAllNotCheckTax()
			.then(function(){
				var postdata ="TaxSelected="+TaxSelected;
					postdata+="&TaxNotSelected="+TaxNotSelected;
				posData.RemoveTaxSelectedList(postdata)
				.success(function(data){
					load_data(data);
					//LoadOrderedItemList();
					//LoadTax();
					//LoadEBT();
					//LoadDiscount();
					//LoadPayments();
					//LoadChange();
					//LoadTotals()
					//.then(function(){
					//	POSTotal()
					//	.then(function(){
							PoleDisplayTotal();
					//	});
					//});
					TaxSelected = [];
					TaxNotSelected = [];
					$('#dialog-tax-list').jqxWindow('close');
				})
			})
		})
	})

	$(document).on("click", "#receipt_tax_list .button_cancel", function(e){
		e.preventDefault();
		TaxSelected = [];
		$('#dialog-tax-list').jqxWindow('close');
	})

	$(document).on("click", "#item_tax_list .save_form", function(e){
		e.preventDefault();
		GetAllCheckTax()
		.then(function(){
			GetAllNotCheckTax()
			.then(function(){
				var Unique = GlobalItemUnique.Unique;
				var postdata ="TaxSelected="+TaxSelected;
					postdata+="&TaxNotSelected="+TaxNotSelected;
					postdata+="&ReceiptDetailsUnique="+Unique;
				posData.AddRemoveItemTaxSelectedList(postdata)
				.success(function(data){
					//LoadOrderedItemList();
					//LoadTax();
					//LoadEBT();
					//LoadDiscount();
					//LoadPayments();
					//LoadChange();
					//LoadTotals()
					//.then(function(){
					//	POSTotal()
					//	.then(function(){
							PoleDisplayTotal();
					//	});
					//});
					load_data(data);
					TaxSelected = [];
					TaxNotSelected = [];
					$('#dialog-tax-list').jqxWindow('close');
				})
			})
		})
	})

	$(document).on("click", "#item_tax_list .button_cancel", function(e){
		e.preventDefault();
		TaxSelected = [];
		$('#dialog-tax-list').jqxWindow('close');
	})

	/*
	|--------------------------------------------------------------------------|
	| When close Dine In window
	|--------------------------------------------------------------------------|
	*/
	$("#table_dine_in").on("close", function(e){
		//$window.location = base_url + 'pos/cashier';
	})


	/*
	|--------------------------------------------------------------------------|
	| Click Dine In button 													   |		
	|--------------------------------------------------------------------------|
	*/
	if($("#TableOrder").val() == 1){
		if($("#PoleDisplay").val() == 2){
			if(ConnectionPoleDisplay){
				var tableconn = new WebSocket(table_synchronize);
				tableconn.onopen = function(e) {};
			}
		}
	}
	
	var TableQID;
	$scope.Tables = function(){
		$("#POSDineInfunction").attr("disabled", true);
		posData.ReceiptForTableCheck()
		.success(function(res){
			TableQID = res.qdefault;
			if(res.CurrentStatus == 1){
				if(res.table == false){
					if(res.items){
						//Prompt message
						NumpadTableQuestion('table_question', res.question_list, res.question)
						.then(function(){
							WindowTableQuestion('Question')
						})
						// TableOnHoldSalePrintKitchenReceipt();
					}else{
						//--> Show Table Selection
						PopupWindowDineIn()
						.then(function(){
							WindowTableDineIn("Dine in Table"+ " | "+ $("#Server").val())
							.then(function(){
								//TableInactivity();
							})
						})
					}
				}else{
					if(res.items){
						//--> Check Receipt if Item(s) added
						posData.ReceiptForItemCheck()
						.success(function(res2){
							if(res2.items){
								TableOnHoldSalePrintKitchenReceipt();
							}
						})
					}else{
						//--> Show Table Selection
						//Prompt message
						// NumpadTableQuestion('table_question', res.question_list, res.question)
						// .then(function(){
						// 	WindowTableQuestion('Question')
						// })
						posData.TableUpdateReceiptStatus()
						.success(function(data){
							load_data(data);
						}).then(function(){
							PopupWindowDineIn()
							.then(function(){
								WindowTableDineIn("Dine in Table"+ " | "+ $("#Server").val())
								.then(function(){
									//TableInactivity();
								})
							})
						})
					}
				}
			}else{
				//-->Receipt Status completed
				var msg = 'This Receipt is completed, please click New Sale instead.';
				NumpadAlertClose('table_attempt_add_table', msg)
				.then(function(){
					WindowPopupAlert('Table Message');
				});
			}
		})

		setTimeout(function(){
			$("#POSDineInfunction").attr("disabled", false);
		},1000)
	}

	/*
	|-------------------------------------------------------------------------------|
	| Table refresh
	|-------------------------------------------------------------------------------|
	*/
	if($("#TableOrder").val() == 1){
		if($("#PoleDisplay").val() == 2){
			if(ConnectionPoleDisplay){
				tableconn.onmessage = function(e){
					var tableData = JSON.parse(e.data);
					if(tableData[0] == 'TableClickedAssigned'){
						var postdata = "SectionUnique="+LastSectionSelected;//tableData[1];
						posData.SelectSectionTable(postdata)
						.success(function(data){
							$("#dine-in-tables-panel").html('');
							$("#dine-in-tables-panel").append(data.html);
						})
					}
				}
			}
		}
	}

	/*
	|--------------------------------------------------------------------------|
	| On Hold and show table selection										   |	
	|--------------------------------------------------------------------------|
	*/
	var TableOnHoldSalePrintKitchenReceipt = function(){
		
		OnHold()
		.then(function(){
			PopupWindowDineIn()
			.then(function(){
				WindowTableDineIn("Dine in Table"+" | "+$("#Server").val())
			})
		})
			
	}

	/*
	|--------------------------------------------------------------------------|
	| Call Popup window with Table form										   |
	|--------------------------------------------------------------------------|
	*/
	var WindowTableDineIn = function($title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#table_dine_in").jqxWindow({
				minHeight: '100%',
				minWidth: '100%',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				draggable: false,
				Title: 'Dine in Table',
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$("#table_dine_in .jqx-window-header").css('display','none');
			$("#table_dine_in").jqxWindow('setTitle', $title);
			$('#table_dine_in').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	/*
	|---------------------------------------------------------------------------|
	| Create Table in a form							 					    |		
	|---------------------------------------------------------------------------|
	*/
	var LastSectionSelected = 1;
	var PopupWindowDineIn = function(){
		var def = $.Deferred();
		var postdata = "TableStatusMessage="+TableStatusMessage;
		posData.GetTables(postdata)
		.success(function(data){
			$("#table_dine_in").append('<div id="table_container" style="padding:0px; margin:0px; overflow:hidden; min-height:100% !important"></div>');
			$("#table_container").html('');
			$("#table_container").append($compile(data.html)($scope));
			posData.GetSectionList()
			.success(function(section){
				var source = {
					datatype: "json",
					datafields: [
						{ name: 'Unique' },
						{ name: 'Description' }
					],
					localdata: section
				};
				var dataAdapter = new $.jqx.dataAdapter(source);
				$("#dine-in-sections-list").jqxListBox({
					source: dataAdapter, displayMember: "Description", valueMember: "Unique", width: '100%', height: 350, itemHeight: 40
				})
				
				$('#dine-in-sections-list').on('select', function (event) {
					var args = event.args;
					if (args) {
						$("#dine-in-tables-panel").html('');
						var index = args.index;
						var item = args.item;
						var originalEvent = args.originalEvent;
						// get item's label and value.
						var label = item.label;
						var value = item.value;
						var type = args.type; // keyboard, mouse or null depending on how the item was selected.
						LastSectionSelected = value;
						$("#LastSectionSelected").val(value);
						var postdata = "SectionUnique="+value;
						posData.SelectSectionTable(postdata)
						.success(function(data){
							$("#dine-in-tables-panel").append(data.html);
						})
					}
				});
			}).then(function(){
				$("#dine-in-sections-list").jqxListBox('selectItem', data.DefaultSection);
			})

			def.resolve();
		})
		return def.promise();
	}

	/*
	|---------------------------------------------------------------------------
	| Click Assign Table Old
	|---------------------------------------------------------------------------
	*/
	DineTable = function(id, tableno){
		$http({
			method: 'get',
			url: base_url+'pos/pointofsale/tables/get-current-user'
		}).success(function(data){
			if(data.success){
				var TableCustomerNo = $("#TableCustomerNo").val();
				var postdata = "TableUnique="+id;
				if(TableCustomerNo == 0){
					posData.SelectTableWithoutCustomerNo(postdata)
					.success(function(data2){
						if(data2.table_assign){
							if($("#TableOrder").val() == 1){
								if($("#PoleDisplay").val() == 2){
									if(ConnectionPoleDisplay){
										if(tableconn){
											tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
										}
									}
								}
							}
							LoadHeaderInfo();
							$('#table_dine_in').jqxWindow('close');
						}else{
							var msg = 'Receipt '+data2.ReceiptNo+' assigned to '+data2.TableNoFrom+'<br/>';
								msg+= '<br/>';
								msg+= 'Transfer to '+data2.TableNoTo+'?';
							NumpadAlertYesNo('receipt_transfer_table_without_no_customer', msg)
							.then(function(){
								$("#use_value").val(id);
								WindowPopupAlertYesNo('Question');
							})
						}
					})
				}else{
					//--> Prompt No of Customer.
					posData.CheckReceiptTableExist(postdata)
					.success(function(data3){
						if(data3.table_exist == false){
							/*
							NumpadNoOfCustomer('select_table_with_customer_no')
							.then(function(){
								$("#no_of_customer_form_msg").text('Table '+data3.TableNoTo+' Enter # of Customers');
								$("#entertableno").val(id);
								WindowNoOfCustomer('No. of customer')
								.then(function(){
									$("#number_field").focus();
								})
							})
							*/
							NumpadCustomerCount('select_table_with_customer_no', 'Table '+data3.TableNoTo+' Enter # of Customers')
							.then(function(){
								TableId = id;
								WindowPopupCustomerCount()
								.then(function(){
									var ParentWidth = $("#dine-in-tables-panel").width();
									var ComputeWidth = (ParentWidth / 3);
									var UseWidth = (ComputeWidth);

									$("#customer_count_numpad").jqxWindow({position: { x: ComputeWidth, y: 50 }});

									$("#quantity_field").val( $("#customer_count").text() );
									$("#quantity_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#quantity_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										setTimeout(function(){
											$("#quantity_field input").select();
										},100);
									})
								})
							})

						}else{
							var msg = 'Receipt '+data3.ReceiptNo+' assigned to '+data3.TableNoFrom+'<br/>';
								msg+= '<br/>';
								msg+= 'Transfer to '+data3.TableNoTo+'?';
							NumpadAlertYesNo('receipt_transfer_table_with_no_customer', msg)
							.then(function(){
								$("#use_value").val(data3.TableNoTo);
								$("#use_value2").val(id);
								WindowPopupAlertYesNo('Question');
							})
						}	
					})
				}
			}else{
				TableId = id;
				NumpadPasscode('table_login_user_open_table')
				.then(function(){
					WindowPopupPasscode('User Passcode')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}
		})
	}

	/*
	|----------------------------------------------------------------------|
	| Click Edit Table
	|----------------------------------------------------------------------|
	*/
	var CurrentTableUnique;
	var TableReceiptHeaderUnique;
	var TableEditDine = function(){
		$(document).one('click', '.TableEditDineIn', function(e){
			e.preventDefault();
			var EditDineTableSplit = $(this).attr('id');
			var id = EditDineTableSplit.split("=")[0];
			var tableno = EditDineTableSplit.split("=")[1];
			var rdunique = EditDineTableSplit.split("=")[2];
			TableReceiptHeaderUnique = rdunique;
			TableId = id;
			$http({
				method: 'get',
				url: base_url+'pos/pointofsale/tables/get-current-user'
			}).success(function(data){
				if(data.success){
					//-->Check table if open
					var postdata ="ReceiptHeaderUnique="+rdunique;
						postdata+="&TableUnique="+id;
					posData.CheckTableEditing(postdata)
					.success(function(data){
						if(data.OnEdit == false){
							var postdata="receiptunique="+rdunique;
								postdata+="&TableUnique="+id;
							posData.CombineOrOpenReceipt(postdata)
							.success(function(data2){
								CurrentTableUnique = data2.CurrentTableUnique;
								if(data2.success == false){
									if(data2.promptQ){
										var msg = data2.msg;
										NumpadAlertYesNo('assign_receipt_totable', msg)
										.then(function(){
											$("#use_value").val(id);
											$("#use_value2").val(rdunique);
											WindowPopupAlertYesNo('Question');
										})
									}else{
										var postdata="ReceiptHeaderUnique="+rdunique;
											postdata+="&TableUnique="+id;
										posData.ClearAll(postdata)
										.success(function(data3){
											if(data3.count > 1){
												$window.location = base_url + "pos/pointofsale/split-check";
											}else{
												if( $("#TableSplitCheck").val() == 1 ){
													$window.location = base_url + "pos/pointofsale/split-check";
													return false;
												}

												load_data(data3);
												$("#table_dine_in").jqxWindow('close');
												// GetCustomerSave();
												$scope.BtnPaymentWhen = false;
												PoleDisplay(data.ReceiptDetailsUnique);
												$("#barcode_search").attr("disabled", false);
												$("#barcode_search").focus();
											}
										})
									}
								}else{
									var msg = data2.msg;
									NumpadAlertYesNo('combine_table', msg)
									.then(function(){
										$("#use_value").val(id);
										$("#use_value2").val(rdunique);
										WindowPopupAlertYesNo('Question');
									})
								}
							})
						}else{
							var msg = data.msg;
							NumpadAlertClose('table_attempt_add_table', msg)
							.then(function(){
								WindowPopupAlert('Alert Message');
							});
						}
						setTimeout(function(){
							TableEditDine();
						},1000);
					})
				}else{
					NumpadPasscode('table_login_user_edit_table')
					.then(function(){
						WindowPopupPasscode('User Passcode')
						.then(function(){
							setTimeout(function(){
								TableEditDine();
							},1000);
							$("#number_field").focus();
						})
					})
				}
			})
		})
	} 

	TableEditDine();

	/*
	|--------------------------------------------------------------------------|
	| On Hold and show table selection										   |	
	|--------------------------------------------------------------------------|
	*/
	$(document).on('submit', '#combine_table', function(e){
		e.preventDefault();
		KitchenPrintReceipt("TableOnHoldPrinterStatus2")
		.then(function(){
			var TableUnique 		= $("#use_value").val();
			var ReceiptHeaderUnique = $("#use_value2").val();
			var postdata ="ReceiptHeaderUnique="+ReceiptHeaderUnique;
				postdata+="&TableUnique="+TableUnique;
				postdata+="&CurrentTableUnique="+CurrentTableUnique;
			posData.CombineReceipt(postdata)
			.success(function(data){
				posData.ClearAll(postdata)
				.success(function(data2){
					// $window.location = base_url + "pos/pointofsale/tables/split";
					$window.location = base_url + 'pos/pointofsale/split-check';
				})
			})
		})
	})

	/*
	|----------------------------------------------------------------------|
	| Table Login and edit table
	|----------------------------------------------------------------------|
	*/
	$(document).on("submit", "#table_login_user_edit_table_old", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
			$http({
				method:'post',
				url: base_url+'pos/pointofsale/tables/login',
				data: postdata,
				headers: {'Content-Type': 'application/x-www-form-urlencoded'}
			}).success(function(data){
				if(data.success){
					var postdata="receiptunique="+TableReceiptHeaderUnique;
						postdata+="&TableUnique="+TableId;
					posData.CombineOrOpenReceipt(postdata)
					.success(function(data2){
						if(data2.success == false){
							var postdata="ReceiptHeaderUnique="+TableReceiptHeaderUnique;
								postdata+="&TableUnique="+TableId;
							posData.ClearAll(postdata)
							.success(function(data3){
								if(data3.count > 0){
									$window.location = base_url + "pos/pointofsale/split-check";
								}else{
									load_data(data);
									// GetCustomerSave();
									$scope.BtnPaymentWhen = false;
									PoleDisplay(data.ReceiptDetailsUnique);
									$("#barcode_search").attr("disabled", false);
									$("#barcode_search").focus();
								}
							})
						}
					})
				}else{
					var msg = data.msg;
					NumpadAlertClose('table_login_invalid', msg)
					.then(function(){
						WindowPopupAlert('Invalid code');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		}
	})


	/*
	|----------------------------------------------------------------------|
	| Table Login and edit table
	|----------------------------------------------------------------------|
	*/
	$(document).on("submit", "#table_login_user_edit_table", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var security = ['Tables'];
            var passcode = CRP.converted;
            var hashpasscode = CryptoJS.MD5(passcode);
            var postdata ="Passcode="+hashpasscode;
                postdata+="&FunctionButton="+JSON.stringify(security);
                postdata+="&Passcode="+hashpasscode; 
			posData.CheckUserSecurity(postdata)
			.success(function(data){
				if(data.validuser){
					if(data.cashin){
						if(data.countposition > 0){
							var postdata ="user_unique="+data.UserUnique;
								postdata+="&status=1";
							posData.TimeClockCheck(postdata)
							.success(function(timeclockcheck){
								if(timeclockcheck.status == 0){
									$("#dialog-numpad-passcode").jqxWindow('close');
									if($scope.ClockInCheck == 1){
										$("#dialog-numpad-passcode").jqxWindow('close');	
										var msg = 'Please Clock In first';	
										NumpadAlertClose('clock_in_first', msg)
										.then(function(){
											WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
										})
									}else{
										var postdata="receiptunique="+TableReceiptHeaderUnique;
											postdata+="&TableUnique="+TableId;
										posData.CombineOrOpenReceipt(postdata)
										.success(function(data2){
											if(data2.success == false){
												var postdata="ReceiptHeaderUnique="+TableReceiptHeaderUnique;
													postdata+="&TableUnique="+TableId;
												posData.ClearAll(postdata)
												.success(function(data3){
													if(data3.count > 0){
														$window.location = base_url + "pos/pointofsale/split-check";
													}else{
														load_data(data);
														// GetCustomerSave();
														$scope.BtnPaymentWhen = false;
														PoleDisplay(data.ReceiptDetailsUnique);
														$("#barcode_search").attr("disabled", false);
														$("#barcode_search").focus();
													}
												})
											}
										})
									}
								}else{
									var postdata="receiptunique="+TableReceiptHeaderUnique;
										postdata+="&TableUnique="+TableId;
									posData.CombineOrOpenReceipt(postdata)
									.success(function(data2){
										if(data2.success == false){
											var postdata="ReceiptHeaderUnique="+TableReceiptHeaderUnique;
												postdata+="&TableUnique="+TableId;
											posData.ClearAll(postdata)
											.success(function(data3){
												if(data3.count > 0){
													$window.location = base_url + "pos/pointofsale/split-check";
												}else{
													load_data(data);
													// GetCustomerSave();
													$scope.BtnPaymentWhen = false;
													PoleDisplay(data.ReceiptDetailsUnique);
													$("#barcode_search").attr("disabled", false);
													$("#barcode_search").focus();
												}
											})
										}
									})
								}
							})
						}else{
							$("#dialog-numpad-passcode").jqxWindow("close");
							var msg = "Sorry, you don't have permission";
							NumpadAlertClose('invalid_cashout_server_code', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
							});
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertClose('no_cashin', data.msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
						}); 
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Passcode";
					NumpadAlertClose('invalid_cashout_server_code', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		}
	})

	/*
	|----------------------------------------------------------------------|
	| Table Login and open table immediately old 						
	|----------------------------------------------------------------------|
	*/
	$(document).on('submit', '#table_login_user_open_table_old', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
			$http({
				method:'post',
				url: base_url+'pos/pointofsale/tables/login',
				data: postdata,
				headers: {'Content-Type': 'application/x-www-form-urlencoded'}
			}).success(function(data){
				if(data.success){
					$("#dialog-numpad-passcode").jqxWindow('close');
					$("#table_logout").removeClass('table-login');
					$("#table_logout").addClass('table-logout').text(data.UserName);
					$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
					LoadHeaderInfo();
					var TableCustomerNo = $("#TableCustomerNo").val();
					var postdata = "TableUnique="+TableId;
					if(TableCustomerNo == 0){
						posData.SelectTableWithoutCustomerNo(postdata)
						.success(function(data){
							if(data.table_assign){
								if($("#TableOrder").val() == 1){
									if($("#PoleDisplay").val() == 2){
										if(ConnectionPoleDisplay){
											if(tableconn){
												tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
											}
										}
									}
								}
								LoadHeaderInfo();
								$('#table_dine_in').jqxWindow('close');
							}else{
								var msg = 'Receipt '+data.ReceiptNo+' assigned to '+data.TableNoFrom+'<br/>';
									msg+= '<br/>';
									msg+= 'Transfer to '+data.TableNoTo+'?';
								NumpadAlertYesNo('receipt_transfer_table_without_no_customer', msg)
								.then(function(){
									$("#use_value").val(id);
									WindowPopupAlertYesNo('Question');
								})
							}
						})
					}else{
						//--> Prompt No of Customer.
						posData.CheckReceiptTableExist(postdata)
						.success(function(data){
							if(data.table_exist == false){
								NumpadCustomerCount('select_table_with_customer_no', 'Enter # of Customer')
								.then(function(){
									WindowPopupCustomerCount()
									.then(function(){
										$("#quantity_field").val( $("#customer_count").text() );
										$("#quantity_field").jqxNumberInput('focus');
										setTimeout(function(){
											var input = $('#quantity_field input')[0];
											if('selectionStart' in input) {
												input.setSelectionRange(0, 0);
											}else{
												var range = input.createTextRange();
												range.collapse(true);
												range.moveEnd('character', 0);
												range.moveStart('character', 0);
												range.select();
											}
											setTimeout(function(){
												$("#quantity_field input").select();
											},100);
										})
									})
								})
							}else{
								var msg = 'Receipt '+data.ReceiptNo+' assigned to '+data.TableNoFrom+'<br/>';
									msg+= '<br/>';
									msg+= 'Transfer to '+data.TableNoTo+'?';
								NumpadAlertYesNo('receipt_transfer_table_with_no_customer', msg)
								.then(function(){
									$("#use_value").val(data.TableNoTo);
									$("#use_value2").val(TableId);
									WindowPopupAlertYesNo('Question');
								})
							}	
						})
					}
				}else{
					var msg = data.msg;
					NumpadAlertClose('table_login_invalid', msg)
					.then(function(){
						WindowPopupAlert('Invalid code');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		}
	})


	/*
	|----------------------------------------------------------------------|
	| Table Login and open table immediately 							   |
	|----------------------------------------------------------------------|
	*/
	$(document).on('submit', '#table_login_user_open_table', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var security = ['Tables'];
            var passcode = CRP.converted;
            var hashpasscode = CryptoJS.MD5(passcode);
            var postdata ="Passcode="+hashpasscode;
                postdata+="&FunctionButton="+JSON.stringify(security);
                postdata+="&Passcode="+hashpasscode; 
			posData.CheckUserSecurity(postdata)
			.success(function(data){
				if(data.validuser){
					if(data.cashin){
						if(data.countposition > 0){
							var postdata ="user_unique="+data.UserUnique;
								postdata+="&status=1";
							posData.TimeClockCheck(postdata)
							.success(function(timeclockcheck){
								if(timeclockcheck.status == 0){
									$("#dialog-numpad-passcode").jqxWindow('close');
									if($scope.ClockInCheck == 1){
										$("#dialog-numpad-passcode").jqxWindow('close');	
										var msg = 'Please Clock In first';	
										NumpadAlertClose('clock_in_first', msg)
										.then(function(){
											WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
										})
									}else{
										$("#dialog-numpad-passcode").jqxWindow('close');
										$("#table_logout").removeClass('table-login');
										$("#table_logout").addClass('table-logout').text(data.UserName);
										$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
										LoadHeaderInfo();
										var TableCustomerNo = $("#TableCustomerNo").val();
										var postdata = "TableUnique="+TableId;
										if(TableCustomerNo == 0){
											posData.SelectTableWithoutCustomerNo(postdata)
											.success(function(data){
												if(data.table_assign){
													if($("#TableOrder").val() == 1){
														if($("#PoleDisplay").val() == 2){
															if(ConnectionPoleDisplay){
																if(tableconn){
																	tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
																}
															}
														}
													}
													LoadHeaderInfo();
													$('#table_dine_in').jqxWindow('close');
												}else{
													var msg = 'Receipt '+data.ReceiptNo+' assigned to '+data.TableNoFrom+'<br/>';
														msg+= '<br/>';
														msg+= 'Transfer to '+data.TableNoTo+'?';
													NumpadAlertYesNo('receipt_transfer_table_without_no_customer', msg)
													.then(function(){
														$("#use_value").val(id);
														WindowPopupAlertYesNo('Question');
													})
												}
											})
										}else{
											//--> Prompt No of Customer.
											posData.CheckReceiptTableExist(postdata)
											.success(function(data){
												if(data.table_exist == false){
													NumpadCustomerCount('select_table_with_customer_no', 'Enter # of Customer')
													.then(function(){
														WindowPopupCustomerCount()
														.then(function(){
															$("#quantity_field").val( $("#customer_count").text() );
															$("#quantity_field").jqxNumberInput('focus');
															setTimeout(function(){
																var input = $('#quantity_field input')[0];
																if('selectionStart' in input) {
																	input.setSelectionRange(0, 0);
																}else{
																	var range = input.createTextRange();
																	range.collapse(true);
																	range.moveEnd('character', 0);
																	range.moveStart('character', 0);
																	range.select();
																}
																setTimeout(function(){
																	$("#quantity_field input").select();
																},100);
															})
														})
													})
												}else{
													var msg = 'Receipt '+data.ReceiptNo+' assigned to '+data.TableNoFrom+'<br/>';
														msg+= '<br/>';
														msg+= 'Transfer to '+data.TableNoTo+'?';
													NumpadAlertYesNo('receipt_transfer_table_with_no_customer', msg)
													.then(function(){
														$("#use_value").val(data.TableNoTo);
														$("#use_value2").val(TableId);
														WindowPopupAlertYesNo('Question');
													})
												}	
											})
										}
									}
								}else{
									$("#dialog-numpad-passcode").jqxWindow('close');
									$("#table_logout").removeClass('table-login');
									$("#table_logout").addClass('table-logout').text(data.UserName);
									$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
									LoadHeaderInfo();
									var TableCustomerNo = $("#TableCustomerNo").val();
									var postdata = "TableUnique="+TableId;
									if(TableCustomerNo == 0){
										posData.SelectTableWithoutCustomerNo(postdata)
										.success(function(data){
											if(data.table_assign){
												if($("#TableOrder").val() == 1){
													if($("#PoleDisplay").val() == 2){
														if(ConnectionPoleDisplay){
															if(tableconn){
																tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
															}
														}
													}
												}
												LoadHeaderInfo();
												$('#table_dine_in').jqxWindow('close');
											}else{
												var msg = 'Receipt '+data.ReceiptNo+' assigned to '+data.TableNoFrom+'<br/>';
													msg+= '<br/>';
													msg+= 'Transfer to '+data.TableNoTo+'?';
												NumpadAlertYesNo('receipt_transfer_table_without_no_customer', msg)
												.then(function(){
													$("#use_value").val(id);
													WindowPopupAlertYesNo('Question');
												})
											}
										})
									}else{
										//--> Prompt No of Customer.
										posData.CheckReceiptTableExist(postdata)
										.success(function(data){
											if(data.table_exist == false){
												NumpadCustomerCount('select_table_with_customer_no', 'Enter # of Customer')
												.then(function(){
													WindowPopupCustomerCount()
													.then(function(){
														$("#quantity_field").val( $("#customer_count").text() );
														$("#quantity_field").jqxNumberInput('focus');
														setTimeout(function(){
															var input = $('#quantity_field input')[0];
															if('selectionStart' in input) {
																input.setSelectionRange(0, 0);
															}else{
																var range = input.createTextRange();
																range.collapse(true);
																range.moveEnd('character', 0);
																range.moveStart('character', 0);
																range.select();
															}
															setTimeout(function(){
																$("#quantity_field input").select();
															},100);
														})
													})
												})
											}else{
												var msg = 'Receipt '+data.ReceiptNo+' assigned to '+data.TableNoFrom+'<br/>';
													msg+= '<br/>';
													msg+= 'Transfer to '+data.TableNoTo+'?';
												NumpadAlertYesNo('receipt_transfer_table_with_no_customer', msg)
												.then(function(){
													$("#use_value").val(data.TableNoTo);
													$("#use_value2").val(TableId);
													WindowPopupAlertYesNo('Question');
												})
											}	
										})
									}
								}
							})
						}else{
							$("#dialog-numpad-passcode").jqxWindow("close");
							var msg = "Sorry, you don't have permission";
							NumpadAlertClose('invalid_cashout_server_code', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
							});
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertClose('no_cashin', data.msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
						});  
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Passcode";
					NumpadAlertClose('invalid_cashout_server_code', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		}
	})

	/*
	|---------------------------------------------------------------------------
	| Transfer Table to another Ok
	|---------------------------------------------------------------------------
	*/
	$(document).on('submit', '#receipt_transfer_table_without_no_customer', function(e){
		e.preventDefault();
		var postdata ="TableUnique="+$("#use_value").val();
			postdata+="&CurrentTableUnique="+CurrentTableUnique;
		posData.TransferTableWithoutNoOfCustomer(postdata)
		.success(function(data){
			if(data.success){
				//LoadHeaderInfo();
				load_data(data);
				$('#dialog-numpad-alert').jqxWindow('close');
				$('#table_dine_in').jqxWindow('close');
			}
		})
	})

	/*
	|----------------------------------------------------------------------------
	| Transfer Table to another Cancel
	|----------------------------------------------------------------------------
	*/
	$(document).on('click', '#receipt_transfer_table_without_no_customer .alert_no', function(e){
		e.preventDefault();
		$('#dialog-numpad-alert').jqxWindow('close');
	})

	/*
	|----------------------------------------------------------------------------
	| Numpad No. of Customer
	|----------------------------------------------------------------------------
	*/
	var populateNoOfCustomer = function(form){
		var def = $.Deferred();
		setTimeout(function(){
			$("#table_no_of_customer").append('<div id="table_no_of_customer_container" style="background: #144766; color:#EEE; overflow:hidden !important;"></div>');
			$("#table_no_of_customer_container").html('');
			$("#table_no_of_customer_container").append(
				'<h4 id="no_of_customer_form_msg"></h4>'
			);
			$("#table_no_of_customer_container").append(
				'<form id="'+form+'">'+
					'<input type="text" id="number_field" class="hdfield" maxlength="'+NumpadPriceInputLimit+'" style="color:#000">'+
					'<div id="NoOfCustomerkeyboard"></div>'+
					'<input type="hidden" id="entertableno"/>'+
					'<input type="hidden" id="enterrdunique"/>'+
				'</form>'
			);
			def.resolve();
		}, 100);
		return def.promise();
	}

	var WindowNoOfCustomer = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#table_no_of_customer").jqxWindow({
				height: 460,
				minWidth: 290,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#table_no_of_customer').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
		
	var NumpadNoOfCustomer = function(form_name){
		var def = $.Deferred();
		populateNoOfCustomer(form_name)
		.then(function(){
			$('#NoOfCustomerkeyboard').hdkeyboard({
				layout: "numbers_only",
				input: $('#number_field')
			});
			setTimeout(function(){
				$("#number_field").focus();
				def.resolve();
			},100);
		});
		return def.promise();
	}

	$("#table_no_of_customer").on('close', function(e){
		e.preventDefault();
		$("#table_no_of_customer_container").html('');
	})

	/*
	|----------------------------------------------------------------------------
	| Enter No. of Customer
	|----------------------------------------------------------------------------
	*/
	$(document).on('submit', '#select_table_with_customer_no', function(e){
			e.preventDefault();
			var CustomerQuantity = $("#quantity_field").val();
			if(CustomerQuantity > 2999){
					var msg = "Customer Count can be up to 2999.";
					NumpadAlertClose('customer_count_error', msg)
					.then(function(){
							WindowPopupAlert ('Customer Count Info');
					})
			}else{
					var no_customer = $("#quantity_field").val();
					if(no_customer){
							var postdata ="TableUnique="+TableId;
									postdata+="&no_of_customer="+no_customer; 
							posData.SelectTableWithCustomerNo(postdata)
							.success(function(data){
									if(data.table_assign){
											load_data(data);
											//LoadHeaderInfo();
											if($("#TableOrder").val() == 1){
												if($("#PoleDisplay").val() == 2){
													if(ConnectionPoleDisplay){
														if(tableconn){
															tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
														}
													}
												}
											}
											$("#customer_count_numpad").jqxWindow('close');
											$('#table_dine_in').jqxWindow('close');
									}
							})
					}else{
							var postdata ="TableUnique="+TableId;
									postdata+="&no_of_customer=1"; 
							posData.SelectTableWithCustomerNo(postdata)
							.success(function(data){
									if(data.table_assign){
											//LoadHeaderInfo();
											load_data(data);
											if($("#TableOrder").val() == 1){
												if($("#PoleDisplay").val() == 2){
													if(ConnectionPoleDisplay){
														if(tableconn){
															tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
														}
													}
												}
											}
											$("#customer_count_numpad").jqxWindow('close');
											$('#table_dine_in').jqxWindow('close');
									}
							})

							$("#customer_count_numpad").jqxWindow('close');
							$('#table_dine_in').jqxWindow('close');
					}
			}
			TableStatusMessage = '';
			TableId = 0;
	})

	/*
	|----------------------------------------------------------------------------
	| Transfer table to another with no. of customer
	|----------------------------------------------------------------------------
	*/
	$(document).on('submit', '#receipt_transfer_table_with_no_customer', function(e){
		e.preventDefault();
		var TableCustomerNo = $("#TableCustomerNo").val();
		if(TableCustomerNo == 0){
			var postdata = "TableUnique="+$("#use_value").val();
			posData.TransferTableWithoutNoOfCustomer(postdata)
			.success(function(data){
				if(data.success){
					LoadHeaderInfo();

					$('#dialog-numpad-alert').jqxWindow('close');
					$('#table_dine_in').jqxWindow('close');
				}
			})
		}else{
			//--> Prompt No of Customer.
			/*
			var tableno 	= $("#use_value").val();
			var tableunique = $("#use_value2").val();
			NumpadNoOfCustomer('select_table_with_customer_no')
			.then(function(){
				$("#no_of_customer_form_msg").text('Table '+tableno+' Enter # of Customers');
				$("#entertableno").val(tableunique);
				WindowNoOfCustomer('No. of customer')
				.then(function(){
					$("#number_field").focus();
				})
			})
			*/
			var tableno 	= $("#use_value").val();
			var tableunique = $("#use_value2").val();
			var title = 'Table '+tableno+' Enter # of Customers';
			NumpadCustomerCount('select_table_with_customer_no', title)
			.then(function(){
				TableId = tableunique;
				WindowPopupCustomerCount()
				.then(function(){
					$("#quantity_field").val( $("#customer_count").text() );
					$("#quantity_field").jqxNumberInput('focus');
					setTimeout(function(){
						var input = $('#quantity_field input')[0];
						if('selectionStart' in input) {
							input.setSelectionRange(0, 0);
						}else{
							var range = input.createTextRange();
							range.collapse(true);
							range.moveEnd('character', 0);
							range.moveStart('character', 0);
							range.select();
						}
						setTimeout(function(){
							$("#quantity_field input").select();
						},100);
					})
				})
			})
			$('#dialog-numpad-alert').jqxWindow('close');
		}	
		TableStatusMessage = '';		
	})
	/*
	|----------------------------------------------------------------------------|
	| Table Time Out 															 |
	|----------------------------------------------------------------------------|
	*/
	var idleTime = 0;
	var TableInactivity = function(){
		if($("#TableTimeOut").val() > 0){
			if(idleTime == 0){
				//Increment the idle time counter every minute.
				var idleInterval = setInterval(timerIncrement, $("#TableTimeOut").val()); // 1 minute
				//Zero the idle timer on mouse movement.
				$('#table_dine_in').mousemove(function (e){
					idleTime = 0;
				});
				$('#table_dine_in').keypress(function (e){
					idleTime = 0;
				});
			}	
		}
	};

	var timerIncrement = function(){
		idleTime = idleTime + 1;
		if(idleTime > 0) { // 1 minute
			/*
			$http({
				method: 'get',
				url: base_url + 'pos/pointofsale/tables/sessionexpire',
			}).success(function(data){
				if(data.success){
					alert("session expired");
					TableInactivity();
				}
			})
			*/
		}
	}

	/*
	|------------------------------------------------------------------------------|
	| Table Logout user															   |
	|------------------------------------------------------------------------------|
	*/
	$(document).on("click", ".table-logout", function(e){
		e.preventDefault();
		$http({
			method: 'get',
			url: base_url + 'pos/pointofsale/tables/logout',
		}).success(function(data){
			if(data.success){
				$("#table_dine_in").jqxWindow('setTitle', 'Dine in Table');
				$("#table_logout").removeClass('table-logout');
				$("#table_logout").addClass("table-login").text('Login');
				var postdata ="SectionUnique="+LastSectionSelected;
				$("#dine-in-tables-panel").html('');
				posData.SelectSectionTable(postdata)
				.success(function(data){
						$("#dine-in-tables-panel").append(data.html);
				})
				LoadHeaderInfo();
				/*
				NumpadPasscode('table_logout_user')
				.then(function(){
					WindowPopupPasscode('User Passcode')
					.then(function(){
						$("#number_field").focus();
					})
				})
				*/
			}
		})
	})

	/*
	|------------------------------------------------------------------------------|
	| Table login window popup security
	|------------------------------------------------------------------------------|
	*/
	$(document).on("click", ".table-login", function(){
		$("#table_logout").attr("disabled", true);
		NumpadPasscode('table_login_user')
		.then(function(){
			WindowPopupPasscode('User Passcode')
			.then(function(){
				$("#number_field").focus();
			})
		})
		setTimeout(function(){
			$("#table_logout").attr('disabled', false);
		},1000);
	})

	/*
	|------------------------------------------------------------------------------|
	| Table login function old
	|------------------------------------------------------------------------------|
	*/
	$(document).on('submit', '#table_login_user_old', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
			$http({
				method:'post',
				url: base_url+'pos/pointofsale/tables/login',
				data: postdata,
				headers: {'Content-Type': 'application/x-www-form-urlencoded'}
			}).success(function(data){
				if(data.success){
					$("#dialog-numpad-passcode").jqxWindow('close');
					$("#table_logout").removeClass('table-login');
					$("#table_logout").addClass('table-logout').text(data.UserName);
					$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
					var postdata = "SectionUnique="+LastSectionSelected;
					$("#dine-in-tables-panel").html('');
					posData.SelectSectionTable(postdata)
					.success(function(data){
						$("#dine-in-tables-panel").append(data.html);
					})
					LoadHeaderInfo();
				}else{
					var msg = data.msg;
					NumpadAlertClose('table_login_invalid', msg)
					.then(function(){
						WindowPopupAlert('Invalid code');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		} 
	})

	/*
	|------------------------------------------------------------------------------|
	| Table login function
	|------------------------------------------------------------------------------|
	*/
	$(document).on('submit', '#table_login_user', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var security = ['Tables'];
            var passcode = CRP.converted;
            var hashpasscode = CryptoJS.MD5(passcode);
            var postdata ="Passcode="+hashpasscode;
                postdata+="&FunctionButton="+JSON.stringify(security);
                postdata+="&Passcode="+hashpasscode; 
			posData.CheckUserSecurity(postdata)
			.success(function(data){
				if(data.validuser){
					if(data.cashin){
						if(data.countposition > 0){
							var postdata ="user_unique="+data.UserUnique;
								postdata+="&status=1";
							posData.TimeClockCheck(postdata)
							.success(function(timeclockcheck){
								if(timeclockcheck.status == 0){
									$("#dialog-numpad-passcode").jqxWindow('close');
									if($scope.ClockInCheck == 1){
										$("#dialog-numpad-passcode").jqxWindow('close');	
										var msg = 'Please Clock In first';	
										NumpadAlertClose('clock_in_first', msg)
										.then(function(){
											WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
										})
									}else{
										var postdata ="passcode="+hashpasscode;
										$http({
											method:'post',
											url: base_url+'pos/pointofsale/tables/login',
											data: postdata,
											headers: {'Content-Type': 'application/x-www-form-urlencoded'}
										}).success(function(data){
											if(data.success){
												$("#dialog-numpad-passcode").jqxWindow('close');
												$("#table_logout").removeClass('table-login');
												$("#table_logout").addClass('table-logout').text(data.UserName);
												$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
												var postdata = "SectionUnique="+LastSectionSelected;
												$("#dine-in-tables-panel").html('');
												posData.SelectSectionTable(postdata)
												.success(function(data){
													$("#dine-in-tables-panel").append(data.html);
												})
												LoadHeaderInfo();
											}else{
												var msg = data.msg;
												NumpadAlertClose('table_login_invalid', msg)
												.then(function(){
													WindowPopupAlert('Invalid code');
												});
											}
										})
									}
								}else{
									var postdata ="passcode="+hashpasscode;
									$http({
										method:'post',
										url: base_url+'pos/pointofsale/tables/login',
										data: postdata,
										headers: {'Content-Type': 'application/x-www-form-urlencoded'}
									}).success(function(data){
										if(data.success){
											$("#dialog-numpad-passcode").jqxWindow('close');
											$("#table_logout").removeClass('table-login');
											$("#table_logout").addClass('table-logout').text(data.UserName);
											$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
											var postdata = "SectionUnique="+LastSectionSelected;
											$("#dine-in-tables-panel").html('');
											posData.SelectSectionTable(postdata)
											.success(function(data){
												$("#dine-in-tables-panel").append(data.html);
											})
											LoadHeaderInfo();
										}else{
											var msg = data.msg;
											NumpadAlertClose('table_login_invalid', msg)
											.then(function(){
												WindowPopupAlert('Invalid code');
											});
										}
									})
								}
							})
						}else{
							$("#dialog-numpad-passcode").jqxWindow("close");
							var msg = "Sorry, you don't have permission";
							NumpadAlertClose('invalid_cashout_server_code', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
							});
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertClose('no_cashin', data.msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
						});  
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Passcode";
					NumpadAlertClose('invalid_cashout_server_code', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		} 
	})

	/*
	|------------------------------------------------------------------------------|
	| Table logout function and clear 
	|------------------------------------------------------------------------------|
	*/
	$(document).on('submit', '#table_logout_user', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
			$http({
				method:'post',
				url: base_url+'pos/pointofsale/tables/login',
				data: postdata,
				headers: {'Content-Type': 'application/x-www-form-urlencoded'}
			}).success(function(data){
				if(data.success){
					$("#dialog-numpad-passcode").jqxWindow('close');
					$(".table_logout_container").show();
					$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
					LoadHeaderInfo();
				}else{
					var msg = data.msg;
					NumpadAlertClose('table_login_invalid', msg)
					.then(function(){
						WindowPopupAlert('Invalid code');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid code');
			});
		}  
	})

	/*
	|-------------------------------------------------------------------------------|
	| Alert close
	|-------------------------------------------------------------------------------|
	*/
	$(document).on('click', '#table_login_invalid .alert_close', function(){
		$("#number_field").val('');
		setTimeout(function(){
			$("#number_field").focus();
		},100)
	})

	/*
	|-------------------------------------------------------------------------------|
	| Table Back button
	|-------------------------------------------------------------------------------|
	*/
	$(document).on('click', '#table_back_pos_main', function(){
			if( $("#TableStatusMessage").text() == '' ){
				posData.EmptyTransaction()
				.success(function(data){
						$window.location = base_url + 'pos/cashier';
				})
			}else{
					$http({
							method: 'get',
							url: base_url+'pos/pointofsale/tables/get-current-user'
					}).success(function(data){
							if(data.success){
									TableStatusMessage = '';
									$("#table_dine_in").jqxWindow('close');	
							}else{
									NumpadPasscode('table_login_user_close_dine_table')
									.then(function(){
											WindowPopupPasscode('User Passcode')
											.then(function(){
												setTimeout(function(){
													TableEditDine();
												},1000);
												$("#number_field").focus();
											})
									})
							}
					})
			}
	})

	$(document).on('submit', '#table_login_user_close_dine_table', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var security = ['Tables'];
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="Passcode="+hashpasscode;
					postdata+="&FunctionButton="+JSON.stringify(security);
					postdata+="&Passcode="+hashpasscode; 
			posData.CheckUserSecurity(postdata)
			.success(function(data){
				if(data.validuser){
					if(data.cashin){
						if(data.countposition > 0){
							var postdata ="user_unique="+data.UserUnique;
								postdata+="&status=1";
							posData.TimeClockCheck(postdata)
							.success(function(timeclockcheck){
								if(timeclockcheck.status == 0){
									$("#dialog-numpad-passcode").jqxWindow('close');
									if($scope.ClockInCheck == 1){
										$("#dialog-numpad-passcode").jqxWindow('close');	
										var msg = 'Please Clock In first';	
										NumpadAlertClose('clock_in_first', msg)
										.then(function(){
											WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
										})
									}else{
										var postdata ="passcode="+hashpasscode;
										$http({
											method:'post',
											url: base_url+'pos/pointofsale/tables/login',
											data: postdata,
											headers: {'Content-Type': 'application/x-www-form-urlencoded'}
										}).success(function(data){
											if(data.success){
												$("#dialog-numpad-passcode").jqxWindow('close');
												$("#table_logout").removeClass('table-login');
												$("#table_logout").addClass('table-logout').text(data.UserName);
												$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
												var postdata = "SectionUnique="+LastSectionSelected;
												$("#dine-in-tables-panel").html('');
												posData.SelectSectionTable(postdata)
												.success(function(data){
													$("#dine-in-tables-panel").append(data.html);
												})
												LoadEverything();
												TableStatusMessage = '';
												$("#table_dine_in").jqxWindow('close');
											}else{
												var msg = data.msg;
												NumpadAlertClose('table_login_invalid', msg)
												.then(function(){
													WindowPopupAlert('Invalid code');
												});
											}
										})
									}
								}else{
									var postdata ="passcode="+hashpasscode;
									$http({
										method:'post',
										url: base_url+'pos/pointofsale/tables/login',
										data: postdata,
										headers: {'Content-Type': 'application/x-www-form-urlencoded'}
									}).success(function(data){
										if(data.success){
											$("#dialog-numpad-passcode").jqxWindow('close');
											$("#table_logout").removeClass('table-login');
											$("#table_logout").addClass('table-logout').text(data.UserName);
											$("#table_dine_in").jqxWindow('setTitle', data.setTitle);
											var postdata = "SectionUnique="+LastSectionSelected;
											$("#dine-in-tables-panel").html('');
											posData.SelectSectionTable(postdata)
											.success(function(data){
												$("#dine-in-tables-panel").append(data.html);
											})
											LoadEverything();
											TableStatusMessage = '';
											$("#table_dine_in").jqxWindow('close');
										}else{
											var msg = data.msg;
											NumpadAlertClose('table_login_invalid', msg)
											.then(function(){
												WindowPopupAlert('Invalid code');
											});
										}
									})
								}
							})
						}else{
							$("#dialog-numpad-passcode").jqxWindow("close");
							var msg = "Sorry, you don't have permission";
							NumpadAlertClose('invalid_cashout_server_code', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
							});
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertClose('no_cashin', data.msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
						});  
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Passcode";
					NumpadAlertClose('invalid_cashout_server_code', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
					});
				}
			})
		}else{
			var msg = "Passcode cannot be empty";
			NumpadAlertClose('table_login_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			});
		} 
	})

	/*
	|-------------------------------------------------------------------------------|
	| Before Quantity
	|-------------------------------------------------------------------------------|
	*/
	/*Popup Quantity*/
	var populateNumpadBeforeQuantity = function(form_name, msg){
		var def = $.Deferred();
		setTimeout(function(){
			$("#before_quantity_numpad").append('<div id="quantity_before_container" style="background: #144766; color:#EEE;"></div>');
			$("#quantity_before_container").html('');
			$("#quantity_before_container").append('<h4 style="text-align:center;">'+msg+'</h4>');
			$("#quantity_before_container").append(
				'<form id="'+form_name+'">'+
					'<div id="before_quantity_field"></div>'+
					'<div id="quantity_before_numpad"></div>'+
				'</form>'
			);
			$("#before_quantity_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsQuantity").val() })
			/*
			$('#before_quantity_field').on('change', function (event) 
			{
				var value = event.args.value;
				var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
				myNumber = value;
			}); 
			*/
			def.resolve();
		},100);
		return def.promise();
	}
	var WindowPopupBeforeQuantity = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var ParentWidth = $("#wrapper").width();
			var ComputeWidth = (ParentWidth / 2);
			var UseWidth = (ComputeWidth);
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#before_quantity_numpad").jqxWindow({
				title: "Before Quantity",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
			});

			if(OrderListWidth < 350){
				$("#before_quantity_numpad").jqxWindow({
					position: { x: OrderListWidth, y: 50 }
				})
			}

			$('#before_quantity_numpad').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	var NumpadBeforeQuantity = function(form_name, msg){
		var def = $.Deferred();
		populateNumpadBeforeQuantity(form_name, msg)
		.then(function(){
			$('#quantity_before_numpad').numeric_numpad({
				layout: "numeric",
				input: $('#before_quantity_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	/*
	|-----------------------------------------------------------------------------|
	| Table Questions
	|-----------------------------------------------------------------------------|
	*/
	var populateTableQuestion = function(form_name, html, question){
		var def = $.Deferred();
		setTimeout(function(){	
			$("#table_questionaire").append('<div id="table_questionaire_container" style="background: #144766; color:#EEE;"></div>');
			$("#table_questionaire_container").html('');
			$("#table_questionaire_container").append('<h4 style="text-align:center;">'+question+'</h4>');
			$("#table_questionaire_container").append(''+
			'<form id="'+form_name+'">'+
				html+
				'<input type="text" id="number_field" class="hdfield" style="color:#000; display: none;">'+
				'<div id="keboard_table_question_selection"></div>'+
			'</form>');
			def.resolve();
		},100);		
		return def.promise();
	}
	
	var WindowTableQuestion = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#table_questionaire").jqxWindow({
				height: 290,
				width: 650,
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }	
			});
			$('#table_questionaire').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var NumpadTableQuestion = function(form_name, html, question){
		var def = $.Deferred();
		populateTableQuestion(form_name, html, question)
		.then(function(){
			$('#keboard_table_question_selection').hdkeyboard({
				layout: "custom11",
				input: $('#number_field')
			});
			setTimeout(function(){
				$("#number_field").focus();
				def.resolve();
			},100);
		});
		return def.promise();
	}

	$("#table_questionaire").on("close", function(e){
		e.preventDefault();
		$("#table_questionaire_container").html('');
	})

	/*
	|-----------------------------------------------------------------------|
	| Table Select question 
	|-----------------------------------------------------------------------|
	*/
	$(document).on('click', '.radio_tableq', function(){
		var id = $('input[type=radio][name=tableQ]:checked').attr('id');
		TableQID = id;
	});
	
	var TableStatusMessage='';
	$(document).on("click", "#table_question .alert_okay", function(e){
		e.preventDefault();
		if(TableQID){
			switch(TableQID){
				case 'frm_q1':
					TableStatusMessage = 'Assign this order to a table';
				break;

				// case 'frm_q2':
				// 	TableStatusMessage = 'Start new table';
				// break;

				case 'frm_q5':
					TableStatusMessage = 'Transfer table to another';
				break;
			}

			if(TableQID == 'frm_q1'){
				//--> Show Table Selection
				PopupWindowDineIn()
				.then(function(){
					WindowTableDineIn("Dine in Table"+ " | "+ $("#Server").val())
					.then(function(){
						//TableInactivity();
					})
				})
			}else if(TableQID == 'frm_q2'){
				TableOnHoldSalePrintKitchenReceipt();
			}else if(TableQID == 'frm_q3'){
				//do nothing
			}else if(TableQID == 'frm_q4'){
				TableQuestionCancelSale()
				.then(function(){
					if($("#TableOrder").val() == 1){
						if($("#PoleDisplay").val() == 2){
							if(ConnectionPoleDisplay){
								if(tableconn){
									tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
								}
							}
						}
					}
					PopupWindowDineIn()
					.then(function(){
						WindowTableDineIn("Dine in Table"+ " | "+ $("#Server").val())
					})
				})
			}else if(TableQID == 'frm_q5'){
				PopupWindowDineIn()
				.then(function(){
					WindowTableDineIn("Dine in Table"+ " | "+ $("#Server").val())
					.then(function(){
						//TableInactivity();
					})
				})
			}
			$('#table_questionaire').jqxWindow('close');
		}else{
			var msg = 'Chose one question';
			NumpadAlertClose('table_question_failed', msg)
			.then(function(){
				WindowPopupAlert('Question failed');
			});
		}
	})

	$(document).on("click", "#table_question .button_cancel", function(e){
		e.preventDefault();
		$('#table_questionaire').jqxWindow('close');
	})

	var blink_text = function() {
		$('#TableStatusMessage').fadeOut(500);
		$('#TableStatusMessage').fadeIn(500);
	}

	setInterval(blink_text, 2000);

	/*
	|-----------------------------------------------------------------------------|
	| Cancel sale with table aissigned
	|-----------------------------------------------------------------------------|
	*/
	var TableQuestionCancelSale = function(){
		var def = $.Deferred();
		//posData.CancelSale()
		posData.TableCancelSale()
		.success(function(data){
			load_data(data);
			EnableDisablePayment();
			GlobalCustomer = null;
			$scope.customer = {
				selected: 'Guest',
				id: ''
			}
			PoleDisplayReset();
			$scope.RemoveCustomerWhen = false;
			ItemsCategoryView();
			def.resolve();
		})
		return def.promise();
	}

	/*
	|-----------------------------------------------------------------------------|
	| Table with AkamaiPOS logo clickable and redirect to Cashier page.
	|-----------------------------------------------------------------------------|
	*/
	$scope.TableRedirectDashboard = function(){
		posData.ReceiptForTableCheck()
		.success(function(res){
			if(res.table){
				if(res.items){
					//-->On hold
					TableOnHoldSalePrintKitchenReceipt2()
					.then(function(){
						$("#table_dine_in").jqxWindow("close");
						$window.location = base_url + 'pos/cashier';
					})
					
				}else{
					var msg = 'Please click back button and start add item(s)';
					NumpadAlertClose('table_forgot_assign', msg)
					.then(function(){
						WindowPopupAlert('Table message');
					});
				}
			}else{
				/*
				var msg = 'Please assign Receipt '+res.ReceiptNumber+' to a table first';
				NumpadAlertClose('table_forgot_assign', msg)
				.then(function(){
					WindowPopupAlert('Table message');
				});
				*/
				GotoCashierMenu = true;
				posData.EmptyTransaction()
				.success(function(data){
					if(data.success == true){
						$window.location.href = 'cashier';
					}
				})
			}
		})
	}

	/*
	|--------------------------------------------------------------------------|
	| On Hold and close table selection										   |	
	|--------------------------------------------------------------------------|
	*/
	var TableOnHoldSalePrintKitchenReceipt2 = function(){
		var def = $.Deferred();
		KitchenPrintReceipt("RecallOnHoldPrinterStatus")
		.then(function(){
			setTimeout(function(){
				TableQuickOnHold()
				.then(function(){
					def.resolve();
				})
			},100);
		})
		return def.promise();
	}

	/*
	|---------------------------------------------------------------------------|
	| Pay Out
	|---------------------------------------------------------------------------|
	*/
	$scope.PayOut = function(){	
		$("#Payoutfunction").attr("disabled", true);

		var postdata ="FunctionButton=PayOut";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'PayOut';
				NumpadPasscode('EnterPasscodePayOut')	
				.then(function(){
					WindowPopupPasscode('Pay Out | Enter Passcode')
					.then(function(){
						$("#number_field").focus();
					});
					setTimeout(function(){
						$(".newsale").attr({"disabled":false});
					},1000);    
				});
			}else{
				var postdata ="UserId=null";
				posData.CheckCashDrawerMutiplePayOut(postdata)
				.success(function(result2){
					if(result2.Setting){
						if(result2.CashDrawerSetup){
							PayOutViewPage('payout_reason')
							.then(function(){
								PayOutWindowProperties()
								.then(function(){
									$("#payout_number_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#payout_number_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#payout_number_field input").select();
									},100);
									//$("#payout_number_field").focus();
									//setTimeout(function(){
									//	$("#payout_number_field").select();
									//})
								})
							})
						}else{
							var postdata ="UserId="+PayOutUserUnique;
							posData.CashDrawerOptionPayOut(postdata)
							.success(function(result3){
								CashierDrawerView('cash_drawer_by_payout', result3.html)
								.then(function(){
									WindowPopupCashierDrawer('Cash Drawer');
								})
							})
						}
					}else{
						PayOutViewPage('payout_reason')
						.then(function(){
							PayOutWindowProperties()
							.then(function(){
								$("#payout_number_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#payout_number_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#payout_number_field input").select();
								},100);
								/*
								$("#payout_number_field").focus();
								setTimeout(function(){
									$("#payout_number_field").select();
								})
								*/
							})
						})
					}
				})
			}
		})

		setTimeout(function(){
			$("#Payoutfunction").attr("disabled", false);
		},1000)
	}

	/*
	|---------------------------------------------------------------------------|
	| Pay out view
	|---------------------------------------------------------------------------|
	*/
	var PopulatePayOutView = function(form_name){
		var def = $.Deferred();
		setTimeout(function(){
			$("#payout-view").append('<div id="payout-view-container" style="background: #144766; color:#EEE;"></div>');
			$("#payout-view-container").html('');
			$("#payout-view-container").append(
				'<div id="PayoutSelList" style="float:left; width:45%; margin:10px; color: #000;"></div>'+
				'<div id="payout-numpad-container" style="float:left; width:50%; margin:10px;">'+
				'	<fieldset>'+
				'	<legend style="margin-bottom:0 !important;">Amount</legend>'+
				'		<form id="'+form_name+'">'+
				'			<div id="payout_number_field" class="hdfield"></div>'+
				'   		<div id="payout-numpad"></div>'+
				'		</form>'+
				'	</field>'+
				'</div>'
			);

			$("#payout_number_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val()})
			$('#payout_number_field').on('change', function (event) 
			{
				var value = event.args.value;
				var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
				myNumber = value;
			}); 

			$("#payout-numpad-container").append(
				DisplayNumpadPayout()
			);
			
			posData.PayoutSelectionList()
			.success(function(data){
				$("#PayoutSelList").append(data.html);
				$("#PayoutSelList").append(
					'<br/>'+
					'<div id="payout_note" style="float:left; width:100%;">'+
					'	<fieldset>'+
					'		<legend style="margin-bottom:0 !important;">Note</legend>'+
					'		<textarea id="payout_note_input" style="color:#000; width: 100%; height: 120px;" row="80"></textarea>'+
					'	</fieldset>'+
					'</div>'
				);
			})

			$("#payout-view-container").append(
				'<div id="payout_function_container" style="float:left; width:100%;">'+
				'<form id="'+form_name+'">'+
					'<input type="text" id="number_field" class="hdfield" style="display:none;">'+
					'<div id="payout_function"></div>'+
				'</form>'+
				'</div>'
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var PayOutWindowProperties = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("#payout-view").jqxWindow({
				/*
				height: 760,
				width: '100%',
				*/
				title: 'PayOut',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: 0, y: 0 }
			});
			$('#payout-view').jqxWindow('open');
			def.resolve();
		},100);
		return def.promise();
	}

	var DisplayNumpadPayout = function(){
		var def = $.Deferred();
		$('#payout-numpad').numeric_numpad({
			layout: "numeric",
			input: $('#payout_number_field')
		});
		setTimeout(function(){
			def.resolve();
		},100);
		return def.promise();
	}

	var DisplayKeyboardPayout = function(){
		var def = $.Deferred();
		$('#payout-keyboard').jkeyboard({
			layout: "english",
			input: $('#search_field')
		});
		setTimeout(function(){
			def.resolve();
		},100);
		return def.promise();
	}

	var PayOutViewPage = function(form_name){
		var def = $.Deferred();
		PopulatePayOutView(form_name)
		.then(function(){
			$('#payout_function').numeric_numpad({
				layout: "PayOut",
				input: $('#number_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	var populateCashDrawerOption = function(form_name, html){
        var def = $.Deferred();
        setTimeout(function(){
            $("#dialog-cash-drawer").append('<div id="cash-drawer-container" style="background: #144766; color:#EEE;"></div>');
            $("#cash-drawer-container").html('');
            $("#cash-drawer-container").append(''+
            '<h4 style="text-align:center;">CASH DRAWER</h4>');
            $("#cash-drawer-container").append(html);
            $("#cash-drawer-container").append(''+
            '<form id="'+form_name+'">'+
                '<input type="text" id="cash_drawer_field" class="hdfield" style="color:#000; display:none;">'+
                '<div id="keyboard_cashdrawer"></div>'+
            '</form>');
            def.resolve();
        },100);
        return def.promise();
    }

    var WindowPopupCashierDrawer = function(header_text){
        var def = $.Deferred();
        setTimeout(function(){
            $("#dialog-cash-drawer").jqxWindow({
                height: 500,
                width: 480,
                isModal: true,
                theme: 'darkblue',
                showCloseButton: true,
                resizable: false,
                draggable: false,
                showAnimationDuration: 0,
                closeAnimationDuration: 0
            });
            $('#dialog-cash-drawer').jqxWindow('setTitle', header_text);
            $('#dialog-cash-drawer').jqxWindow('open');
            def.resolve();	
        },100);
        return def.promise();
    }
    
    var CashierDrawerView = function(form, html){
        var def = $.Deferred();
        populateCashDrawerOption(form, html)
        .then(function(){
            $('#keyboard_cashdrawer').hdkeyboard({
                layout: "item_reason",
                input: $("#cash_drawer_field")
            });
            def.resolve();
        });
        return def.promise();
    }

	var PayOutUserUnique = 0;
	$(document).on('submit', "#EnterPasscodePayOut", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata="passcode="+hashpasscode;
				postdata+="&cashtype=3";
				postdata+="&FunctionButton="+$scope.FunctionButton; 
			posData.RestrictionPasscodePayout(postdata)
			.success(function(restrict){
				$("#dialog-numpad-passcode").jqxWindow('close');
				if(restrict.success == true){
					if(restrict.login == true){
						PayOutUserUnique = restrict.userid;
						var postdata ="UserId="+PayOutUserUnique;
						posData.CheckCashDrawerMutiplePayOut(postdata)
						.success(function(result2){
							if(result2.Setting){
								if(result2.CashDrawerSetup){
									PayOutViewPage('payout_reason')
									.then(function(){
										PayOutWindowProperties()
										.then(function(){
											$("#payout_number_field").focus();
											setTimeout(function(){
												$("#payout_number_field").select();
											})
										})
									})
								}else{
									var postdata ="UserId="+PayOutUserUnique;
									posData.CashDrawerOptionPayOut(postdata)
									.success(function(result3){
										CashierDrawerView('cash_drawer_by_payout', result3.html)
										.then(function(){
											WindowPopupCashierDrawer('Cash Drawer');
										})
									})
								}
							}else{
								PayOutViewPage('payout_reason')
								.then(function(){
									PayOutWindowProperties()
									.then(function(){
										$("#payout_number_field").focus();
										setTimeout(function(){
											$("#payout_number_field").select();
										})
									})
								})
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');	
						var msg = restrict.msg;	
						NumpadAlertOk('invalid_passcode', msg)
						.then(function(){
							WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
						})  
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');	
					var msg = 'Invalid code';	
					NumpadAlertOk('invalid_passcode', msg)
					.then(function(){
						WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
					})
				} 
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');	
			var msg = 'Passcode cannot be empty';	
			NumpadAlertOk('invalid_passcode', msg)
			.then(function(){
				WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign"></span>');	
			})
		}
	})

	$(document).on("click", "#cash_drawer_by_payout .button_q_cancel", function(e){
		e.preventDefault();
		$("#dialog-cash-drawer").jqxWindow("close");
	})

	$(document).on("click", "#cash_drawer_by_payout .button_proceed", function(e){
		e.preventDefault();
		var DrawerSelected = $('input[type=radio][name=group1]:checked').attr('id');
		if(DrawerSelected){
			var postdata="CashDrawerOption="+DrawerSelected;
				postdata+="&UserId="+PayOutUserUnique;
			posData.SelectedCashDrawerPayOut(postdata)
			.success(function(result){
				$('#dialog-cash-drawer').jqxWindow('close');
				PayOutViewPage('payout_reason')
				.then(function(){
					PayOutWindowProperties()
					.then(function(){
						$("#payout_number_field").focus();
						setTimeout(function(){
							$("#payout_number_field").select();
						})
					})
				})
			})
		}else{
			var msg = "Select Cash Drawer first";	
            NumpadAlertOk('no_cashdrawer_selected', msg)
            .then(function(){
                WindowPopupAlert ('<span class="glyphicon glyphicon-info-sign">Information</span>');	
            })
		}
	})

	$(document).on("submit", "#payout_reason", function(e){
		e.preventDefault();
		var PayOutSel   = $('input[type=radio][name=group1]:checked').attr('id');
		var PRUnique    = PayOutSel.split('=')[0];
		var PRType      = PayOutSel.split('=')[1];
		var postdata ="Amount="+$("#payout_number_field").val();
			postdata+="&Note="+$("#payout_note_input").val();
			postdata+="&PRUnique="+PRUnique;
			postdata+="&Type="+PRType;
			postdata+="&UserId="+PayOutUserUnique;   
		posData.PayOut(postdata)
		.success(function(data){
			if(data.success){
				GetPrinterDefault()
				.then(function(result){
					if(result[0]){
						if(result[1] > 0){
							CheckPrinterStatus(result[2], result[3], result[4])
							.then(function(result){
								if(result){
									//-->Print
									var postdata ="StationPayOutUnique="+data.StationPayOutUnique;
										postdata+="&StationCashierUnique="+data.StationCashierUnique;
										postdata+="&UserId="+PayOutUserUnique;
									posData.PrintPayOutReceipt(postdata)
									.success(function(printed){
										PayOutUserUnique = 0;
									})
								}else{
									PrinterProblemDefaultMessage('printer_check');
									setTimeout($.unblockUI, 100); 
									$('#dialog-process').jqxWindow('close');
								}
							})
						}else{
							var postdata ="StationPayOutUnique="+data.StationPayOutUnique;
								postdata+="&StationCashierUnique="+data.StationCashierUnique;
								postdata+="&UserId="+PayOutUserUnique;
							posData.PrintPayOutReceipt(postdata)
							.success(function(printed){
								PayOutUserUnique = 0;
							})
						}
					}else{
						var msg = "No Default printer set.";
						NumpadAlertOk('print_check_notify', msg)
						.then(function(){
							WindowPopupAlert('Print Check');
						})
						setTimeout($.unblockUI, 100); 
						$('#dialog-process').jqxWindow('close');
					}
				})
				$("#payout-view").jqxWindow('close');
			}
		})
		myNumber = '';
		$("#payout-view").jqxWindow('close'); 
	})

	$(document).on("click", "#payout_reason .payout_okay", function(e){
		e.preventDefault();
		var PayOutSel   = $('input[type=radio][name=group1]:checked').attr('id');
		var PRUnique    = PayOutSel.split('=')[0];
		var PRType      = PayOutSel.split('=')[1];
		var postdata ="Amount="+$("#payout_number_field").val();
			postdata+="&Note="+$("#payout_note_input").val();
			postdata+="&PRUnique="+PRUnique;
			postdata+="&Type="+PRType;
			postdata+="&UserId="+PayOutUserUnique;   
		posData.PayOut(postdata)
		.success(function(data){
			if(data.success){
				GetPrinterDefault()
				.then(function(result){
					if(result[0]){
						if(result[1] > 0){
							CheckPrinterStatus(result[2], result[3], result[4])
							.then(function(result){
								if(result){
									//-->Print
									var postdata ="StationPayOutUnique="+data.StationPayOutUnique;
										postdata+="&StationCashierUnique="+data.StationCashierUnique;
										postdata+="&UserId="+PayOutUserUnique;
									posData.PrintPayOutReceipt(postdata)
									.success(function(printed){
										PayOutUserUnique = 0;
									})
								}else{
									PrinterProblemDefaultMessage('printer_check');
									setTimeout($.unblockUI, 100); 
									$('#dialog-process').jqxWindow('close');
								}
							})
						}else{
							var postdata ="StationPayOutUnique="+data.StationPayOutUnique;
								postdata+="&StationCashierUnique="+data.StationCashierUnique;
								postdata+="&UserId="+PayOutUserUnique;
							posData.PrintPayOutReceipt(postdata)
							.success(function(printed){
								PayOutUserUnique = 0;
							})
						}
					}else{
						var msg = "No Default printer set.";
						NumpadAlertOk('print_check_notify', msg)
						.then(function(){
							WindowPopupAlert('Print Check');
						})
						setTimeout($.unblockUI, 100); 
						$('#dialog-process').jqxWindow('close');
					}
				})
				$("#payout-view").jqxWindow('close');
			}
		})
		myNumber = '';
		$("#payout-view").jqxWindow('close'); 
	})

	$(document).on("click", "#payout_reason .payout_cancel", function(e){
		e.preventDefault();
		$("#payout-view").jqxWindow('close');
		myNumber = '';
	})

	$(document).on("click", "#payout_note_input", function(){
		if($("#POSVirtualKeyboard").val() == 1 ){
			NumpadKeyboard('pay_out_note')
			.then(function(){
				WindowPopupKeyboard('Pay Out Note')
				.then(function(){
					$("#keyboard_header").text("Pay Out Note");
					$("#search_field").val($("#payout_note_input").val());
					$("#search_field").focus();
				});
			});   
		}
	})

	$(document).on("submit", "#pay_out_note", function(e){
		e.preventDefault();
		$("#payout_note_input").val($("#search_field").val())
		$("#dialog-numpad-keyboard").jqxWindow("close");
	})

	/*
	|------------------------------------------------------------------------|
	| Re-Order Item(s)
	|------------------------------------------------------------------------|
	*/
	$scope.Reorder = function(){
		$("#ReorderDollarfunction").attr("disabled", true);
		var ReceiptDetailsUnique = GlobalItemUnique.Unique;
		if(ReceiptDetailsUnique){
			var postdata ="ReceiptDetailsUnique="+ReceiptDetailsUnique;
			posData.ReOrderItem(postdata)
			.success(function(data){
				if(data.reorder){
					$scope.desc = data;
					load_data(data);
					PoleDisplay(data.ReceiptDetailsUnique);
					$("#barcode_search").attr("disabled", false);
					$("#barcode_search").focus();
					GlobalItemUnique.Unique = 0;
					BEFOREQUANTITY = 0;
				}
			})
		}else{
			var msg = 'Select Item first';
			NumpadAlertOk('item_not_selected', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
			})
		}
		
		setTimeout(function(){
			$("#ReorderDollarfunction").attr("disabled", false);
		},1000)
	}

	var populateSeverCashInList = function(form_name, html){
		var def = $.Deferred();
		setTimeout(function(){
			$("#quick_recall_cashin").append('<div id="quick_recall_cashin_container" style="background: #004a73"></div>');
			$("#quick_recall_cashin_container").html('');
			$("#quick_recall_cashin_container").append(html);
			$("#quick_recall_cashin_container").append(""+
			'<form id="'+form_name+'">'+
				'<input type="text" id="text_field" class="hdfield" style="color:#000; display:none;">'+
				'<div id="keyboard_server_cashin"></div>'+
			'</form>'+
			"");
			def.resolve();
		},100);
		return def.promise();
	}
	
	var WindowServerCashInList = function(header_title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#quick_recall_cashin").jqxWindow({
				width: '50%', 
				height: '50%',
				title: header_title,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#quick_recall_cashin').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}
	
	var ServerCashInListView = function(form_name, html){
		var def = $.Deferred();
		populateSeverCashInList(form_name, html)
		.then(function(){
			$('#keyboard_server_cashin').hdkeyboard({
				layout: "item_reason",
				input: $('#text_field')
			});
			setTimeout(function(){
				def.resolve();
			},100);
		});
		return def.promise();
	}

	$("#messageNotification").jqxNotification({
		width: 150, position: "top-right", opacity: 0.9,
		autoOpen: false, animationOpenDelay: 10, autoClose: false, template: "warning"
	});

	/*
	|--------------------------------------------------------------------|
	| Quick Recall Show Server Cash In
	|--------------------------------------------------------------------|
	*/
	var quick_recall_sel_rows = [];
	$(document).on('click', '#btn-assign', function(){
		posData.CashInServerCheckByUserId()
		.success(function(result){
			if(result.cashin){
				var selectionmode = $('#listOnHoldSale').jqxGrid('selectionmode');
				if(selectionmode == 'singlerow'){
					$("#messageNotification").html('');
					$('#listOnHoldSale').jqxGrid('clearselection');
					$("#btn-use-receipt").text('Receipt');
					$("#btn-use-receipt").val('');
					$(".listitems").html('');
					$(".OHSlistitemsTotal").html('');
					$("#listOnHoldSale").jqxGrid('selectionmode', 'multiplerows');
					$("#messageNotification").append('<div style="color: #000;">To assign to new User, please select one or more receipts below</br>then press Assign button again.</div>')
					$("#messageNotification").jqxNotification("open");
				}else{
					var postdata ="FunctionButton=AssignNewUser";
					posData.CheckUserManagerCookie(postdata)
					.success(function(data){
						if(data.prompt){
							$scope.FunctionButton = 'AssignNewUser';
							NumpadPasscode('assign_receipts_enter_passcode')
							.then(function(){
									WindowPopupPasscode('Assign')
									.then(function(){
											$("#number_field").focus();
									})
							})
							$("#messageNotification").jqxNotification("closeAll");
						}else{
							var selectedRowReceiptUnique = [];
							var getselectedrowindexes = $('#listOnHoldSale').jqxGrid('getselectedrowindexes');
							for(var i=0; i < getselectedrowindexes.length; i++){
									var rowindex = $('#listOnHoldSale').jqxGrid('getselectedrowindex');
									var rowid = $('#listOnHoldSale').jqxGrid('getrowid', i);
									var rowdata = $("#listOnHoldSale").jqxGrid('getrowdatabyid', rowid);

									selectedRowReceiptUnique.push({"ReceiptHeaderUnique" : rowdata.Unique});
							}

							var postdata="ReceiptHeaderUniques="+JSON.stringify(selectedRowReceiptUnique);
							posData.AssignCheckReceipt(postdata)
							.success(function(data){
								console.log('AssignCheckReceipt',data);
							})

							quick_recall_sel_rows = [];
							var rowindexes = $("#listOnHoldSale").jqxGrid('getselectedrowindexes');
							if(rowindexes.length > 0){
								$.each(rowindexes, function(index, value){
										var row = $("#listOnHoldSale").jqxGrid('getrowdata', value);
										quick_recall_sel_rows.push(row.Unique);
								})
								posData.QuickRecallServerCashIn()
								.success(function(data){
										ServerCashInListView('assign_receipts', data.html)
										.then(function(){
												WindowServerCashInList('Assign Receipt To');
										})
								})
								$("#messageNotification").jqxNotification("closeAll");
							}else{
								$("#dialog-numpad-passcode").jqxWindow("close");
								var msg = "Please select one or more receipts to Assign";
								NumpadAlertOk('assign_receipt_not_selected', msg)
								.then(function(){
										WindowPopupAlert('Message');
								})
							}
						}
					})
				}
			}else{
				var msg = result.msg;
				NumpadAlertOk('assign_receipt_not_selected', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-info-sign"></span>');
				})
			}
		})
	})

	$(document).on('submit', '#assign_receipts_enter_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var password = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(password);
			var postdata="passcode="+hashpasscode;
				postdata+="&FunctionButton=AssignNewUser";
			posData.EnterPassCodeQuickRecallAssign(postdata)
			.success(function(data){
				if(data.success){
					if(data.login){
						$("#dialog-numpad-passcode").jqxWindow('close');
						quick_recall_sel_rows = [];
						var rowindexes = $("#listOnHoldSale").jqxGrid('getselectedrowindexes');
						if(rowindexes.length > 0){
							$.each(rowindexes, function(index, value){
								var row = $("#listOnHoldSale").jqxGrid('getrowdata', value);
								quick_recall_sel_rows.push(row.Unique);
							})
							posData.QuickRecallServerCashIn()
							.success(function(data){
								ServerCashInListView('assign_receipts', data.html)
								.then(function(){
									WindowServerCashInList('Assign Receipt To');
								})
							})
						}else{
							$("#dialog-numpad-passcode").jqxWindow("close");
							var msg = "Please select one or more receipts to Assign";
							NumpadAlertOk('assign_receipt_not_selected', msg)
							.then(function(){
								WindowPopupAlert('Message');
							})
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertOk('assign_no_permission', data.msg)
						.then(function(){
							WindowPopupAlert('Message');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Password";
					NumpadAlertOk('qc_invalid', msg)
					.then(function(){
						WindowPopupAlert('Invalid Passcode');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow("close");
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('qc_invalid', msg)
			.then(function(){
				WindowPopupAlert('Invalid');
			})
		}
	})

	/*
	|---------------------------------------------------------------------|
	| Quick Recall Assign Multiple Receipts Proceed
	|---------------------------------------------------------------------|
	*/
	$(document).on('click', '#assign_receipts .button_proceed', function(){
		var ServerId = $('input[type=radio][name=group1]:checked').attr('id');
		if(ServerId){
			var rows = JSON.stringify(quick_recall_sel_rows);
			var postdata ="ReceiptHeaderUniques="+rows;
				postdata+="&Server="+ServerId;
			posData.QuickRecallUpdateReceiptsServer(postdata)
			.success(function(data){
				if(data.success){
					posData.LoadOnHoldSale()
					.success(function(recdata){
						var source = {
							datatype: "json",
							localdata: recdata
						}
						var dataAdapter = new $.jqx.dataAdapter(source);
						$("#listOnHoldSale").jqxGrid({
							source: dataAdapter
						})
					})
					$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
					$('#listOnHoldSale').jqxGrid('selectrow', 0);
					$('#quick_recall_cashin').jqxWindow('close');
				}
			})
		}else{
			var msg = 'Please select Assign';
			NumpadAlertClose('qrec_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	})
	/*
	|---------------------------------------------------------------------|
	| Quick Recall Assign Multiple Receipts Cancel
	|---------------------------------------------------------------------|
	*/
	$(document).on('click', '#assign_receipts .button_q_cancel', function(){
		$('#quick_recall_cashin').jqxWindow('close');
		$("#listOnHoldSale").jqxGrid('selectionmode', 'singlerow');
		$('#listOnHoldSale').jqxGrid('selectrow', 0);
	})	
	/*
	|---------------------------------------------------------------------|
	| Quick Recall Assign Multiple Receipts Close Window
	|---------------------------------------------------------------------|
	*/
	$(document).on('close', "#quick_recall_cashin", function(){
		$("#quick_recall_cashin").html('');
	})

	/*
	|---------------------------------------------------------------------|
	| Display Points
	|---------------------------------------------------------------------|
	*/
	var ShowPoints = function(){
		posData.GetPoints()
		.success(function(data){
			if(data.Points > 0){
				if(data.CustomerPoints > 0){
					$("#points").text('Pts '+data.Points);
					$("#points").append(' | ');
					$("#points").append(data.CustomerPoints);
				}else{
					$("#points").text('Pts '+data.Points);
				}
			}else{
				$("#points").text('');
			}
		})
	}
	//ShowPoints();

	/*
	|---------------------------------------------------------------------|
	| Apply Reward
	|---------------------------------------------------------------------|
	*/
	$(document).on('click', '#reward_yes', function(e){
		var RewardTotal, AmountTotal = 0;
		$('input[type=checkbox][name=group1]:checked').each(function(){
			var RewardSelect = $(this).attr('id');
			RewardTotal = $("#rewardstotal").val(RewardSelect.split('=')[1]);
			AmountTotal = $("#amountdue_total").val();
		})
		if(RewardTotal > AmountTotal){
			var msg = "Reward cannot be greater than to total Amount due";
			NumpadAlertClose('reward_failed', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}else{
			$RPointUniqueArr = [];
			$('input[type=checkbox][name=group1]:checked').each(function(){
				var RewardSel = $(this).attr('id');
					RewardItemUnique = RewardSel.split('=')[0];
					RewardItemPrice  = RewardSel.split('=')[1];
					RewardType	   	 = RewardSel.split('=')[2];
					RewardName	   	 = RewardSel.split('=')[3];
					RewardUnique	 = RewardSel.split('=')[4];
					RewardDesc 		 = RewardSel.split('=')[5];
					RewardPointUnique= RewardSel.split('=')[6];
					RewardAmount 	 = RewardSel.split('=')[7];
					RPointUnique	 = RewardSel.split('=')[8];

				if(RewardSel){
					
					var postdata ="ItemUnique="+RewardItemUnique;
						postdata+="&Price="+RewardItemPrice;
						postdata+="&Type="+RewardType;
						postdata+="&Name="+RewardName;
						postdata+="&Unique="+RewardUnique;
						postdata+="&Description="+RewardDesc;
						postdata+="&PointsUnique="+RewardPointUnique;
						postdata+="&Amount="+RewardAmount;
						postdata+="&ReceiptPointsUnique="+RPointUnique;
					
					posData.SaveReward(postdata)
					.success(function(data){
						if(data.success){
							load_data(data);
							setTimeout(function(){
								GetSelectedCustomer();
							},500);
							$scope.BtnPaymentWhen = false;
							PoleDisplayTotal();
							Qquestion = 0;
							$("#rewards_notification").jqxWindow('close');
						}else{
							var msg = data.msg;
							NumpadAlertClose('set_discount_from_list', msg)
							.then(function(){
								WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
								.then(function(){
									$(".alert_close").focus();
								})
							})
						}
					})
				}
			})
		}
	})

	/*
	|---------------------------------------------------------------------|
	| Cancel Reward
	|---------------------------------------------------------------------|
	*/
	$(document).on('click', '#reward_cancel', function(e){
		$("#rewards_notification").jqxWindow('close');
	})

	/*
	|---------------------------------------------------------------------|
	| Reload Information
	|---------------------------------------------------------------------|
	*/
	var ReloadInformation = function() {
		posData.ReloadInformation()
		.success(function(data){
			load_data(data);
		})
	}

	/*
	|---------------------------------------------------------------------|
	| Restrict Input
	|---------------------------------------------------------------------|
	
	$(document).on('click', '.restrict', function(e){
		e.preventDefault();
		NumpadPasscode('restrict_input')
		.then(function(){
			var WindowPopupName = $(".editrestrict").text();
			WindowPopupPasscode(WindowPopupName)
		})
	})
	*/

	/*
	|---------------------------------------------------------------------|
	| Download PDF Receipt from Email
	|---------------------------------------------------------------------|
	*/
	$(document).on('click', '#DownloadEmail', function(e){
		e.preventDefault();
		posData.CreateFile()
		.success(function(data){
			window.location.href =  '../assets/download/'+data.filename;
		})
	})
	
	/* 
	|---------------------------------------------------------------------|
	|Print Gift Card Receipt Old
	|---------------------------------------------------------------------|
	*/
	$scope.GiftReceipt_Old = function(){
		$("#GiftReceiptfunction").attr("disabled",true);
		posData.PrintGiftReceipt()
		.success(function(data){
			setTimeout(function(){
				$("#GiftReceiptfunction").attr("disabled",false);
			},1000);
		})
	}
	/*
	|----------------------------------------------------------------------|
	|Remove Multiple Items
	|----------------------------------------------------------------------|
	*/
	var populateRemoveItemMultiple = function(){
		var def = $.Deferred();
		$("#remove_multiple").append('<div id="remove_multiple_container" style="background: #144766; color:#EEE; margin:0; padding:0;"></div>');
		$("#remove_multiple_container").html('');
		posData.RemoveMultipleItemList()
		.success(function(data){
			$("#remove_multiple_container").append(data.html);
			def.resolve();
		})
		return def.promise();
	}

	// var overlap = !(rect1.right < rect2.left || 
	// 	rect1.left > rect2.right || 
	// 	rect1.bottom < rect2.top || 
	// 	rect1.top > rect2.bottom)

	var WindowPopupRemoveItemMultiple = function(header_text){
		var def = $.Deferred();
		var ResoWidth 	        = $("#fakeheight2").width();
		var ResoHeight 	        = $("#fakeheight2").height();
		var ComputeHeight		= ResoHeight - 160;
		var POSMain 			= ComputeHeight - 40;
		var UseHeight			= POSMain;

		var OrderListHeight= ($("#remove_multiple").height() - 31);
		var OrderListWidth = ($(".orderedlist").width() + 10);
		if(CheckLeftPanelSize < 350){
			$('#remove_multiple').jqxWindow({ position: { x: OrderListWidth, y: 50 }}); 
		}

		setTimeout(function(){
			$("#remove_multiple").jqxWindow({
				/*
				maxHeight: UseHeight,
				minWidth: '10%',
				height: UseHeight,
				width: '37%',
				*/
				isModal: true,
				theme: 'darkblue',
				showCloseButton: false,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				title: 'REMOVE MULTIPLE ITEMS',
				zIndex: 100
			});
			$('#remove_multiple').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var CheckLeftPanelSize = '';
	$scope.RemoveMultiple = function(){
		CheckLeftPanelSize = $(".leftpanel").width();
		console.log(CheckLeftPanelSize);
		$("#RemoveMultiplefunction").attr("disabled", true);
		populateRemoveItemMultiple()
		.then(function(){
			WindowPopupRemoveItemMultiple()
			.then(function(){
				var OrderListHeight = ($('#remove_multiple').height() - 31);
				$(".remove_multiple_item_list").attr('style', 'height: '+OrderListHeight+'px !important');
				$("#RemoveMultiplefunction").attr("disabled", false);
			})
		})
	}

	/*
	|-----------------------------------------------------------------|
	|Close Remove Multiple Item window
	|-----------------------------------------------------------------|
	*/
	$(document).on('click', '#remove_item_multiple_close', function(){
		var RemoveMultipleCheckBox = 0;
		$('input[type=checkbox][name=grouprem]:checked').each(function(){
			RemoveMultipleCheckBox++;
			
		})
		if(RemoveMultipleCheckBox > 0){
			var msg = "Remove Selected Lines?";
			NumpadAlertYesNo('remove_item_before_close', msg)
			.then(function(){
				WindowPopupAlertYesNo('Info');
			})
			return false;
		}
		$('#remove_multiple').jqxWindow('close');
	})
	
	/**
	 * Remove Item Before close Yes
	 */
	$(document).on('submit', '#remove_item_before_close', function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow('close');
		$("#remove_item_multiple_remove").trigger('click');
		$("#remove_multiple").jqxWindow('close');
	})

	/**
	 * Remove Item Before close No
	 */
	$(document).on('click', '#remove_item_before_close .alert_no', function(e){
		e.preventDefault();
		$("#dialog-numpad-alert").jqxWindow('close');
		$("#remove_multiple").jqxWindow('close');
	})

	/*
	|-------------------------------------------------------------------------
	|Remove Multiple Item CheckBox
	|-------------------------------------------------------------------------
	*/
	$(document).on('click', '.rem', function(){
		var checkboxChecked = $('input[type=checkbox][name=grouprem]:checked').length;
		if(checkboxChecked > 0){
			var id = $('input[type=checkbox][name=grouprem]:checked').attr('id');
			var parentid = $('input[type=checkbox][name=grouprem]:checked').attr('class').split(' ')[2];
			if(id == parentid){
				if($(this).attr('id') != id){
					$('#'+id).prop('checked', false);
				}else{
					$('.'+id).prop('checked', true);
				}
			}
		}
	});
	/*
	|-----------------------------------------------------------------|
	|Remove Single or Multiple Item Original
	|-----------------------------------------------------------------|
	*/
	var RemoveMultiItemArray = [];
	$(document).on('click', "#remove_item_multiple_remove_original", function(){
		RemoveMultiItemArray = [];
		$(".remove_item_multiple_fn").attr("disabled", true);
		$('input[type=checkbox][name=grouprem]:checked').each(function(){
			var Param = $(this).attr('id');
			var ParamRDUnique = Param.split('=')[0];
			var ParamItemUnique = Param.split('=')[1];
			var ParamQuantity = Param.split('=')[2];
			var ParamRemove = Param.split('=')[3];
			var ParamCompleted = Param.split('=')[4];
			var ParamListPrice = Param.split('=')[5];
			var ParamSellPrice = Param.split('=')[6];
			var ParamDiscount = Param.split('=')[7];

			RemoveMultiItemArray.push({
				"Unique" 	: ParamRDUnique, 
				"ItemUnique": ParamItemUnique, 
				"Quantity" 	: ParamQuantity,
				"Remove" 	: ParamRemove,
				"Completed" : ParamCompleted,
				"ListPrice" : ParamListPrice,
				"SellPrice" : ParamSellPrice,
				"Discount" 	: ParamDiscount
			});
		})

		
		if(RemoveMultiItemArray.length > 0){
			

			var postdata ="remove_q_items="+JSON.stringify(RemoveMultiItemArray);
			posData.RemoveMultipleItemProcess(postdata)
			.success(function(data){
				load_data(data);
				posData.LoadAfterRemoveMultipleItem()
				.success(function(data2){
					if(data2.items = false){
						$("#remove_multiple").jqxWindow('close');
					}
					$(".remove_multiple_item_list").html('');
					$(".remove_multiple_item_list").append(data2.html);
					$(".remove_item_multiple_fn").attr("disabled", false);
					RemoveMultiItemArray = [];
				})
			})
		}else{
			var msg = 'Please select item(s) first';
			NumpadAlertClose('cannot_perform_task', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
				$(".remove_item_multiple_fn").attr("disabled", false);
			})
		}
	})

	/*
	|-----------------------------------------------------------------|
	|Remove Single or Multiple Item
	|-----------------------------------------------------------------|
	*/
	var RemoveMultipleItemNotPrintedArray = [];
	$(document).on('click', "#remove_item_multiple_remove", function(){
		$(".remove_item_multiple_fn").attr("disabled", true);
		var ItemRemovedCheckArr = [];
		var GiftCardItemCheckArr = [];
		var CheckBoxChecked = 0;

		var ParamRDUnique = '';
		var ParamItemUnique = '';
		var ParamQuantity = '';
		var ParamRemove = '';
		var ParamCompleted = '';
		var ParamListPrice = '';
		var ParamSellPrice = '';
		var ParamDiscount = '';
		var ParamGiftCardCheck = false; //Boolean
		var ParamGCRemove = false; //Boolean
		var ParamTranCode = '';
		var ParamGiftCardAmount = '';
		var ParamRemoveItemCheck = '';
		var ParamGiftCardNumber = '';
		var ParamReturnReceiptDetailsUnique = '';

		$('input[type=checkbox][name=grouprem]:checked').each(function(){
			var Param = $(this).attr('id');
			ParamRDUnique = Param.split('=')[0];
			ParamItemUnique = Param.split('=')[1];
			ParamQuantity = Param.split('=')[2];
			ParamRemove = Param.split('=')[3];
			ParamCompleted = Param.split('=')[4];
			ParamListPrice = Param.split('=')[5];
			ParamSellPrice = Param.split('=')[6];
			ParamDiscount = Param.split('=')[7];
			ParamGiftCardCheck = Param.split('=')[8]; //Boolean
			ParamGCRemove = Param.split('=')[9]; //Boolean
			ParamTranCode = Param.split('=')[10];
			ParamGiftCardAmount = Param.split('=')[11];
			ParamRemoveItemCheck = Param.split('=')[12];
			ParamGiftCardNumber = Param.split('=')[13];
			ParamReturnReceiptDetailsUnique = Param.split('=')[14];

			if(ParamReturnReceiptDetailsUnique){
				for(var i=0; i < ReturnItemArr.length; i++){
					if(ParamReturnReceiptDetailsUnique == ReturnItemArr[i]){
						delete ReturnItemArr[i];
					}
				}
			}

			if(ParamRemove){
				ItemRemovedCheckArr.push(ParamRemove);
			}

			if(ParamGiftCardCheck){
				GiftCardItemCheckArr.push(ParamGiftCardCheck);
			}else{
				if(ParamRemove > 0){
					RemoveMultiItemArray.push({
						"Unique" 	: ParamRDUnique, 
						"ItemUnique": ParamItemUnique, 
						"Quantity" 	: ParamQuantity,
						"Remove" 	: ParamRemove,
						"Completed" : ParamCompleted,
						"ListPrice" : ParamListPrice,
						"SellPrice" : ParamSellPrice,
						"Discount" 	: ParamDiscount
					})
				}else{
					RemoveMultipleItemNotPrintedArray.push({
						"Unique" 	: ParamRDUnique, 
						"ItemUnique": ParamItemUnique, 
						"Quantity" 	: ParamQuantity,
						"Remove" 	: ParamRemove,
						"ListPrice" : ParamListPrice,
						"SellPrice" : ParamSellPrice,
						"Discount" 	: ParamDiscount
					});
				}
			}
			CheckBoxChecked++;
		})

		if(CheckBoxChecked == 0){
			var msg = 'Please check item(s) to remove.';
			NumpadAlertClose('remove_multiple_item_failed', msg)
			.then(function(){
				WindowPopupAlert('Remove Multiple Items')
			})
			setTimeout(function(){
				$(".remove_item_multiple_fn").attr("disabled", false);
			},1000)
			return false;
		}

		// if ItemRemovedCheck > 0 Check security.
		// if GiftCardItemCheckArr > 0 popup message gift card refund instead.

		if(GiftCardItemCheckArr.length > 0){
			GiftCardRemoveQ.push(ParamGCRemove, ParamRemoveItemCheck);
			if(ParamTranCode == 'Issue'){ //When Issue then Void Issue
				var msg = 'Void Issue Gift Card '+ParamGiftCardNumber+'<br/>'; 
					msg+= 'Amount '+ParamGiftCardAmount+'<br/>';
					msg+= '</br>Are you sure?';
				NumpadAlertYesNo('void_issue_gift_card', msg, ParamRDUnique)
				.then(function(){
					WindowPopupAlertYesNo('Void Issue Gift Card')
					.then(function(){
						$("#use_value").val(ParamRDUnique);
					});
				})
			}else if(ParamTranCode == 'Reload'){ //When Reload then Void Reload
				var msg = 'Void Reload Gift Card '+ParamGiftCardNumber+'<br/>'; 
					msg+= 'Amount '+ParamGiftCardAmount+'<br/>';
					msg+= '</br>Are you sure?';
				NumpadAlertYesNo('void_reload_gift_card', msg, ParamRDUnique)
				.then(function(){
					WindowPopupAlertYesNo('Void Reload Gift Card')
					.then(function(){
						$("#use_value").val(ParamRDUnique);
					});
				})
			}else if(ParamTranCode == 'Return'){ //When Return then Void Return
				var msg = 'Void Return Gift Card '+ParamGiftCardNumber+'<br/>'; 
					msg+= 'Amount '+ParamGiftCardAmount+'<br/>';
					msg+= '</br>Are you sure?';
				NumpadAlertYesNo('void_return_gift_card', msg, ParamRDUnique)
				.then(function(){
					WindowPopupAlertYesNo('Void Return Gift Card')
					.then(function(){
						$("#use_value").val(ParamRDUnique);
					});
				})
			}
			return false;
		}

		if(ItemRemovedCheckArr.length > 0){
			if($("#RemoveItemCheck").val() == 1){
				// Remove multiple item void
				var postdata ="FunctionButton=RemoveItem";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					if(data.prompt){
						$scope.FunctionButton = 'RemoveItem';
						NumpadPasscode('remove_multiple_item_void_passcode')
						.then(function(){
							WindowPopupPasscode('Remove Item')
							.then(function(){
								$("#number_field").focus();
							})
						})

						$(".remove_item_multiple_fn").attr("disabled", false);
					}else{
						// Remove Multiple Item without Passcode
						if( $("#RemoveItemCheckReasons").val() == 1){
							ViewReasonMultipleItemList('remove_multiple_item_accept')
							.then(function(){
								WindowPopupReason();
								$("#dialog-numpad-passcode").jqxWindow('close');
							})
						}else{
							var postdata ="RemoveItemSelected="+JSON.stringify(RemoveMultiItemArray);
							posData.RemoveMultipleItemFunction(postdata)
							.success(function(data){
								load_data(data);
							})
						}
						$("#remove_multiple").jqxWindow('close');
					}
				})

				return false;
			}else{
				// Remove multiple item set Status = 0
				var postdata ="FunctionButton=RemoveItem";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					if(data.prompt){
						$scope.FunctionButton = 'RemoveItem';
						NumpadPasscode('remove_multiple_item_status_passcode')
						.then(function(){
							WindowPopupPasscode('Remove Item')
							.then(function(){
								$("#number_field").focus();
							})
						})
					}else{
						$.blockUI({ css: { 
							border: '2px solid #fff',
							padding: '15px', 
							backgroundColor: '#210e66', 
							'-webkit-border-radius': '10px', 
							'-moz-border-radius': '10px', 
							opacity: 1, 
							color: '#fff',
							fontSize: '20px',
						}, message: 'Please wait while removing items',
							baseZ: 99999,   
						});
						var postdata ="RemoveItemSelected="+JSON.stringify(RemoveMultiItemArray);
						posData.RemoveMultipleItemFunction(postdata)
						.success(function(data){
							setTimeout($.unblockUI, 100); 
							load_data(data);
						})
						$("#remove_multiple").jqxWindow('close');
					}
				})
			}
		}else{
			$.blockUI({ css: { 
				border: '2px solid #fff',
				padding: '15px', 
				backgroundColor: '#210e66', 
				'-webkit-border-radius': '10px', 
				'-moz-border-radius': '10px', 
				opacity: 1, 
				color: '#fff',
				fontSize: '20px', 
			}, message: 'Please wait while removing items',
				baseZ: 99999  
			});
			var postdata ="RemoveItemSelected="+JSON.stringify(RemoveMultipleItemNotPrintedArray);
			posData.RemoveMultipleItemFunction(postdata)
			.success(function(data){ 
				load_data(data);
				posData.LoadAfterRemoveMultipleItem()
				.success(function(data2){
					setTimeout($.unblockUI, 100);
					$("#remove_multiple").jqxWindow('close');
					$(".remove_multiple_item_list").html('');
					$(".remove_multiple_item_list").append(data2.html);
					$(".remove_item_multiple_fn").attr("disabled", false);
					RemoveMultiItemArray = [];
					PoleDisplayTotal();
				})
			})
		}

		$("#remove_multiple_check_all").prop("checked", false);		
		setTimeout(function(){
			$(".remove_item_multiple_fn").attr("disabled", false);
		},1000);
	})

	$(document).on('submit', '#remove_multiple_item_status_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						$.blockUI({ css: { 
							border: '2px solid #fff',
							padding: '15px', 
							backgroundColor: '#210e66', 
							'-webkit-border-radius': '10px', 
							'-moz-border-radius': '10px', 
							opacity: 1, 
							color: '#fff',
							fontSize: '20px', 
						}, message: 'Please wait while removing items',
							baseZ: 99999,
						});

						var postdata ="RemoveItemSelected="+JSON.stringify(RemoveMultiItemArray);
						posData.RemoveMultipleItemFunction(postdata)
						.success(function(data){
							setTimeout($.unblockUI, 100); 
							load_data(data);
						})
						$("#remove_multiple").jqxWindow('close');
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	/*
	|-----------------------------------------------------------------|
	|Reduce Single or Multiple Item
	|-----------------------------------------------------------------|
	*/
	$(document).on('click', '#remove_item_multiple_reduce', function(e){
			e.preventDefault();
			RemoveMultiItemArray = [];
			$(".remove_item_multiple_fn").attr("disabled", true);
			$('input[type=checkbox][name=grouprem]:checked').each(function(){
					var Param = $(this).attr('id');
					var ParamRDUnique = Param.split('=')[0];
					var ParamItemUnique = Param.split('=')[1];
					var ParamQuantity = Param.split('=')[2];
					var ParamRemove = Param.split('=')[3];
					var ParamCompleted = Param.split('=')[4];
					var ParamListPrice = Param.split('=')[5];
					var ParamSellPrice = Param.split('=')[6];
					var ParamDiscount = Param.split('=')[7];
					RemoveMultiItemArray.push({
							"Unique" 			: ParamRDUnique, 
							"ItemUnique" 	: ParamItemUnique, 
							"Quantity" 		: ParamQuantity,
							"Remove" 			: ParamRemove,
							"Completed" 	: ParamCompleted,
							"ListPrice" 	: ParamListPrice,
							"SellPrice" 	: ParamSellPrice,
							"Discount" 		: ParamDiscount
					});
			})
		
			if(RemoveMultiItemArray.length > 0){
					var postdata ="FunctionButton=RemoveItem";
					posData.CheckUserManagerCookie(postdata)
					.success(function(data){
							if(data.prompt){
									$scope.FunctionButton = 'RemoveItem';
									NumpadPasscode('remove_multiple_item_reduce_passcode')
									.then(function(){
											WindowPopupPasscode('Remove Item')
											.then(function(){
													$("#number_field").focus();
													$(".remove_item_multiple_fn").attr("disabled", false);
											})
									})
							}else{
									var postdata ="remove_q_items="+JSON.stringify(RemoveMultiItemArray);
									posData.ReduceMultipleItemProcess(postdata)
									.success(function(data){
											load_data(data);
											posData.LoadAfterRemoveMultipleItem()
											.success(function(data2){
													if(data2.items = false){
															$("#remove_multiple").jqxWindow('close');
													}
													$(".remove_multiple_item_list").html('');
													$(".remove_multiple_item_list").append(data2.html);
													$(".remove_item_multiple_fn").attr("disabled", false);
													RemoveMultiItemArray = [];
											})
											$(".remove_item_multiple_fn").attr("disabled", false);
									})
							}	
					})
			}else{
					var msg = 'Please select item(s) reduce';
					NumpadAlertClose('cannot_perform_task', msg)
					.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
							$(".remove_item_multiple_fn").attr("disabled", false);
					})
			}
	})


	$(document).on('submit', '#remove_multiple_item_reduce_passcode', function(e){
			e.preventDefault();
			var CardRead = $("#number_field").val();
			var CRP = new CardReaderParser(CardRead);
			if(CRP.converted){
					var passcode = CRP.converted;
					var hashpasscode = CryptoJS.MD5(passcode);
					var postdata ="passcode="+hashpasscode;
							postdata+="&FunctionButton=RemoveItem";
					posData.EnterPassCode(postdata)
					.success(function(data){
							if(data.success == true){
									if(data.login == true){
											$('input[type=checkbox][name=grouprem]:checked').each(function(){
													var Param = $(this).attr('id');
													var ParamRDUnique = Param.split('=')[0];
													var ParamItemUnique = Param.split('=')[1];
													var ParamQuantity = Param.split('=')[2];
													var ParamRemove = Param.split('=')[3];
													var ParamCompleted = Param.split('=')[4];
													var ParamListPrice = Param.split('=')[5];
													var ParamSellPrice = Param.split('=')[6];
													var ParamDiscount = Param.split('=')[7];
													RemoveMultiItemArray.push({
															"Unique" 			: ParamRDUnique, 
															"ItemUnique" 	: ParamItemUnique, 
															"Quantity" 		: ParamQuantity,
															"Remove" 			: ParamRemove,
															"Completed" 	: ParamCompleted,
															"ListPrice" 	: ParamListPrice,
															"SellPrice" 	: ParamSellPrice,
															"Discount" 		: ParamDiscount
													});
											})
											var postdata ="remove_q_items="+JSON.stringify(RemoveMultiItemArray);
											posData.ReduceMultipleItemProcess(postdata)
											.success(function(data){
													load_data(data);
													posData.LoadAfterRemoveMultipleItem()
													.success(function(data2){
															if(data2.items = false){
																	$("#remove_multiple").jqxWindow('close');
															}
															$(".remove_multiple_item_list").html('');
															$(".remove_multiple_item_list").append(data2.html);
															$(".remove_item_multiple_fn").attr("disabled", false);
															RemoveMultiItemArray = [];
													})
											})
									}else{
											NumpadAlertClose ('invalid_credentials', data.msg)
											.then(function(){
													WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
											});	
									}
							}else{
									NumpadAlertClose ('invalid_credentials', data.msg)
									.then(function(){
											WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
									});	
							}

							$("#dialog-numpad-passcode").jqxWindow('close');
					})
			}
	})

	$(document).on('submit', '#remove_mutiple_item_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){

					}else{
						var msg = "Test";
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}	
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			
		}
	})

	$rootScope.$on("CallParentMethod", function(){
		$scope.parentmethod();
	});

	$scope.parentmethod = function() {
		// task
		posData.NewSale()
		.success(function(data){
			if(data.success == true){
				$scope.newsaleid = data.NewSaleId;
				$scope.showModal = false;
				load_data(data);
				// GetCustomerSave();
				PoleDisplayReset();
				setTimeout(function(){
					GetSelectedCustomer();
				},500)
				$("#barcode_search").focus();
				ItemsCategoryView();
				ordertype();
				if($("#TableOrder").val() == 1){
					if($("#PoleDisplay").val() == 2){
						if(ConnectionPoleDisplay){
							if(tableconn){
								tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
							}
						}
					}
				}
			}
		});
	}

	$rootScope.$on("CallEmptyTranscationFunction", function(){
		$scope.emptyTransaction();
	})

	$scope.emptyTransaction = function(){
		posData.EmptyTransaction()
		.success(function(data){
			if(data.success == true){
				$window.location.href = 'cashier';
			}
		})
	}

	$rootScope.$on("CallFinishTransaction", function(){
		$scope.FinishTransaction();
	})

	$scope.FinishTransaction = function(){
		LoadEverything()
		.then(function(){ 
			posData.NewSale()
			.success(function(data){
				if(data.success == true){
					$scope.newsaleid = data.NewSaleId;
					$scope.showModal = false;
					load_data(data);
					// GetCustomerSave();
					PoleDisplayReset();
					setTimeout(function(){
						GetSelectedCustomer();
					},500)
					$("#barcode_search").focus();
					ItemsCategoryView();
					$scope.Tables();
					if($("#TableOrder").val() == 1){
						if($("#PoleDisplay").val() == 2){
							if(ConnectionPoleDisplay){
								if(tableconn){
									tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
								}
							}
						}
					}
				}
			})
		})
	}

	$rootScope.$on("CallPrintReceiptFunction", function(){
		$scope.changeScreenRePrint();
	})

	$scope.changeScreenRePrint = function(){
		var printmsg = "Printing receipt..."+"<br/>";
		$.blockUI({ css: { 
			border: '2px solid #fff',
			padding: '15px', 
			backgroundColor: '#210e66', 
			'-webkit-border-radius': '10px', 
			'-moz-border-radius': '10px', 
			opacity: 1, 
			color: '#fff',
			fontSize: '20px' 
		}, message: printmsg,
			baseZ: 99999 
		}); 

		ProcessPrintReceipt()
		.then(function(){
			setTimeout($.unblockUI, 100); 
			$('#dialog-process').jqxWindow('close');
		})
	}
	/*
	|-----------------------------------------------------------|
	| INVENTORY SEARCH DYNAMIC COLUMNS
	|-----------------------------------------------------------|
	*/
	var InventorySearchColumns = [];
	var InventorySearchTypes = [];
	var InventoryVisibleColumns = function(){
		var def = $.Deferred();
		posData.GetInventorySearchColumns()
		.success(function(data){
			$.each(data.gridcols, function(index, value){
				if(value.aggregates == 1){
					InventorySearchColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, cellsalign: value.cellsalign, cellsformat: value.cellsformat, aggregates: [{
							'Total': function (aggregatedValue, currentValue, column, record) {
								var total = currentValue;
								var returnTotal = 0;
								returnTotal = aggregatedValue + total;
								return returnTotal;
							}
						}],
						aggregatesRenderer: function (aggregates, column, element) {
							var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
							var Total=parseFloat(0).toFixed(2);
							if(aggregates.Total){
								Total = aggregates.Total;
							}
							renderString +=  Total + "</div>";
							return renderString;
						} 
					})
				}else{
					InventorySearchColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, cellsalign: value.cellsalign, cellsformat: value.cellsformat})
				}
			})
			InventorySearchTypes.push(data.gridtype);
			def.resolve();
		})
		return def.promise();
	}

	//-->Using chooser plugin
	// var AllData = [];
  // var ColumnsListData = [];
	// var InventoryVisibleColumns = function(){
	// 		var def = $.Deferred();
	// 		var postdata ="Form=ItemSearch";
	// 		$.ajax({
	// 				type: 'POST',
	// 				url: base_url + 'backoffice_inventory/grid/columns',
	// 				dataType: 'json',
	// 				data: postdata,
	// 				success: function(data){
	// 						def.resolve(data);
	// 				}
	// 		})
	// 		return def.promise();
	// }

	InventoryVisibleColumns()
	.then(function(){
			$("#inventory-search").jqxGrid({ columns: InventorySearchColumns });
	})

	//-->Using chooser plugin
	// InventoryVisibleColumns()
	// .then(function(data){
	// 		AllData = data;
	// 		ColumnsListData  = new GridColsField(data);
	// 		CustomerGridDisplay(ColumnsListData);
	// 		// $("#inventory-search").jqxGrid({ columns: InventorySearchColumns });
	// })

	/*
	|-----------------------------------------------------------|
	| Popup Window Minimum Age
	|-----------------------------------------------------------|
	*/

	var AgeVerifyTempArr = [];
	var populatePOSAgeNotification = function(age){
		var def = $.Deferred();
		var buttons = [
			[0,1,2,3,4],
			[5,6,7,8,9]
		]

		var htmlButtons = '';
		for(var i=0; i < buttons.length; i++){
			var btn = buttons[i];
			htmlButtons+='<ul class="age_verify_buttons">';
			for(var b=0; b < btn.length; b++){
				htmlButtons+='<li><button type="button" class="btn btn-default btn-lg agebuttons" id="agebutton_'+btn[b]+'" onclick="agetype_verify('+btn[b]+')">'+btn[b]+'</button></li>';
			}
			htmlButtons+='</ul>';
		}

		setTimeout(function(){
			$("body").append('<div id="pos_age_verification" style="display:none; background: #144766; color: #EEE; box-shadow: 5px 5px 10px #000;"></div>')
			$("#pos_age_verification").append('<div id="pos_age_verification_container" style="background: #144766; color:#EEE; margin:0 !important; padding:0 !important;"></div>');
			$("#pos_age_verification_container").html('');
			$("#pos_age_verification_container").append('<div style="text-align: center;"><h4>ENTER BIRTHDAY</h4></div>');
			$("#pos_age_verification_container").append(
				'<form id="age_verify_form">'+
					'<div id="age_field"></div>'+
					'<div id="age_verify_keyboard">'+
						htmlButtons+
					'</div>'+
					'<div style="width: 100%; margin:0 auto; text-align: center;">'+
						'<button type="button" id="age_verify_cancel" class="btn btn-danger btn-lg">CANCEL</button>&nbsp;&nbsp;'+
						'<button type="button" id="age_verify_clear" class="btn btn-warning btn-lg">CLEAR</button>&nbsp;&nbsp;'+
						'<button type="submit" class="btn btn-primary btn-lg">ENTER</button>&nbsp;&nbsp;'+
					'</div>'+
				'</form>'
			);

			$("#age_field").jqxMaskedInput({ width: '150px', height: '35px', mask: "##/##/####", textAlign: 'right'});
			$("#age_field").jqxMaskedInput('clear');
			var input = $('#age_field input')[0];
			input.setSelectionRange(0, 0);
			$("#age_field").jqxMaskedInput('focus'); 	

			$("#age_verify_cancel").on('click', function(e){
				e.preventDefault();
				$("#pos_age_verification").jqxWindow('close');
			})

			$("#age_verify_clear").on('click', function(e){
				e.preventDefault();
				$("#age_field").jqxMaskedInput('clear');

				var input = $('#age_field input')[0];
				input.setSelectionRange(0, 0);
				$("#age_field").jqxMaskedInput('focus');

			})

			var ageverifyKeycode = {
				0 : '96',
				1 : '97',
				2 : '98',
				3 : '99',
				4 : '100',
				5 : '101',
				6 : '102',
				7 : '103',
				8 : '104',
				9 : '105'
			}

			agetype_verify = (number) => {
				$("#age_field").jqxMaskedInput('focus'); 
				var e = jQuery.Event("keydown", { keyCode: ageverifyKeycode[number] });
				$("#age_field input").trigger(e);
			}

			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupAgeNotification = function(){
		var def = $.Deferred();
		
		var ResoWidth 	        = $("#right_panel_width").width();
		var ResoHeight 	        = $("#right_panel_width").height();
		var UseWidth 			= ResoWidth - 260;
		var UseHeight 			= ResoHeight + 350;
		var OrderListWidth 		= ($(".orderedlist").width() + 3);
		$("#pos_age_verification").jqxWindow({
			height: UseHeight,
			width: UseWidth,
			title: 'Verification',
			isModal: true,
			theme: 'darkblue',
			showCloseButton: true,
			resizable: false,
			draggable: false,
			showAnimationDuration: 0,
			closeAnimationDuration: 0,
			position: { x: OrderListWidth, y: 50 }
		});

		setTimeout(function(){
			$('#pos_age_verification').jqxWindow('open');
			$("#age_field input").focus();
			$('#pos_age_verification').on('close', function(e){
				e.preventDefault();
				$("#pos_age_verification").remove();
			})

			def.resolve();	
		},100);
		return def.promise();
	}

	var NumpadAgeVerify = function(age){
		var def = $.Deferred();
		populatePOSAgeNotification(age)
		.then(function(){
			$('#keyboard_age_verify').hdkeyboard({
			  layout: "age_verify",
			  input: $('#age_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	/*
	|-----------------------------------------------------------|
	| Popup window Age verified result
	|-----------------------------------------------------------|
	*/
	var populatePOSVerifiedAge = function(html){
		var def = $.Deferred();
		setTimeout(function(){
			$("#pos_age_verification").append('<div id="pos_age_verification_container" style="background: #144766; color:#EEE; margin:0 !important; padding:0 !important;"></div>');
			$("#pos_age_verification_container").html('');
			$("#pos_age_verification_container").append(html);
			def.resolve();
		},100);
		return def.promise();
	}

	var NumpadAgeVerified = function(age){
		var def = $.Deferred();
		populatePOSVerifiedAge(age)
		.then(function(){
			def.resolve();
		});
		return def.promise();
	}

	/*
	|-----------------------------------------------------------|
	| Age Verify Submit Information
	|-----------------------------------------------------------|
	*/
	$(document).on('submit', '#age_verify_form', function(e){
		e.preventDefault();
		var ageverifyBirthDate = $("#age_field").val();
		ageverifyBirthDate = ageverifyBirthDate.replace("__","");
		ageverifyBirthDate = ageverifyBirthDate.replace("____","");
		ageverifyBirthDate = ageverifyBirthDate.replace("_","");
		
		if(ageverifyBirthDate.length < 10){
			var msg = 'Invalid date please try again.';
			NumpadAlertOk('invalid_date_format', msg)
			.then(function(){
				WindowPopupAlert('Message');
			})
			return false;
		}

		var postdata ="BirthDate="+ageverifyBirthDate;
			postdata+="&ItemMinimumAge="+AgeVerifyTempArr[18];
		posData.EnterVerifyAge(postdata)
		.success(function(data){
			NumpadAgeVerified(data.html)
			.then(function(){
				WindowPopupAgeNotification();
			})
		})
	})
	/*
	|-----------------------------------------------------------|
	| Age Verify Skip Button
	|-----------------------------------------------------------|
	*/
	$(document).on('click', '#age_verify_form .skip_button', function(e){
		e.preventDefault();
		posData.SetAgeVerified()
		.success(function(data){
			AgeVerifiedAcceptedAddItem();
			$('#pos_age_verification').jqxWindow('close');
		})
		
	})

	$(document).on('click', '#age_verified_accepted_okay', function(e){
		e.preventDefault();
		posData.SetAgeVerified()
		.success(function(data){
			AgeVerifiedAcceptedAddItem();
		})
	})

	$(document).on('click', '#age_verify_form .button_cancel', function(e){
		e.preventDefault();
		$('#pos_age_verification').jqxWindow('close');
	})

	$(document).on('click', '#age_verified_close', function(e){
		$('#pos_age_verification').jqxWindow('close');
	})

	var AgeVerifiedAcceptedAddItem = function(){
		var ageverifyItemUnique = AgeVerifyTempArr[0];
		var ageverifyPromptDesc = AgeVerifyTempArr[1];
		var ageverifyPromptPrice= AgeVerifyTempArr[2];
		var ageverifyItem 		= AgeVerifyTempArr[3];
		var ageverifyPart 		= AgeVerifyTempArr[4];
		var ageverifyDescription= AgeVerifyTempArr[5];
		var ageverifyPrice 		= AgeVerifyTempArr[6];
		var ageverifyWeight 	= AgeVerifyTempArr[7];
		var ageverifyPoints		= AgeVerifyTempArr[8];
		var ageverifyCost 		= AgeVerifyTempArr[9];
		var ageverifyCostExtra 	= AgeVerifyTempArr[10];
		var ageverifyCostFreight= AgeVerifyTempArr[11];
		var ageverifyCostDuty 	= AgeVerifyTempArr[12];
		var ageverifyCustom1 	= AgeVerifyTempArr[13];
		var ageverifyItemNo 	= AgeVerifyTempArr[14];
		var ageverifyEBT 		= AgeVerifyTempArr[15];
		var ageverifyPrice1 	= AgeVerifyTempArr[16];
		var ageverifyListPrice 	= AgeVerifyTempArr[17];
		var ageverifyMinimumAge	= AgeVerifyTempArr[18];
		ProcessAddItemMenu(
			ageverifyItemUnique, 
			ageverifyPromptDesc,
			ageverifyPromptPrice,
			ageverifyItem,
			ageverifyPart,
			ageverifyDescription,
			ageverifyPrice,
			ageverifyWeight,
			ageverifyPoints,
			ageverifyCost,
			ageverifyCostExtra,
			ageverifyCostFreight,
			ageverifyCostDuty,
			ageverifyCustom1,
			ageverifyItemNo,
			ageverifyEBT,
			ageverifyPrice1,
			ageverifyListPrice,
			ageverifyMinimumAge
		);
		$('#pos_age_verification').jqxWindow('close');
	}
	/*
	|-----------------------------------------------------------|
	| AGE VERIFIED REJECTED OKAY BUTTON
	|-----------------------------------------------------------|
	*/
	$(document).on('click', '#age_verified_rejected_okay', function(e){
		e.preventDefault();
		$('#pos_age_verification').jqxWindow('close');
	})
	/*
	|-----------------------------------------------------------|
	| AGE VERIFIED REJECTED CANCEL BUTTON
	|-----------------------------------------------------------|
	*/
	$(document).on('click', '#age_verified_rejected_cancel', function(e){
		e.preventDefault();
		$('#pos_age_verification').jqxWindow('close');
	})
	/*
	|-----------------------------------------------------------|
	| AGE VERIFIED ACCEPTED CANCEL BUTTON
	|-----------------------------------------------------------|
	*/
	$(document).on('click', '#age_verified_accepted_cancel', function(e){
		e.preventDefault();
		$('#pos_age_verification').jqxWindow('close');
	})
	/*
	|-----------------------------------------------------------|
	| ADD NEW INVENTORY ITEM BUTTON
	|-----------------------------------------------------------|
	*/
	$("#pos_add_item_form").on('close', function(e){
		e.preventDefault();
		$("#pos_add_item_form_container").html('');
	})
	var populateAddItemInventory = function(){
		$("#pos_add_item_form").append('<div id="pos_add_item_form_container" style="background: #144766; color:#EEE; margin:0 !important; padding:0 !important;"></div>');
		$("#pos_add_item_form_container").html('');
		posData.POSAddInventoryForm()
		.success(function(data){

		})
	}
	/*
	|-----------------------------------------------------------|
	| ITEM LINE DISCOUNT LIST POPUP WINDOW
	|-----------------------------------------------------------|
	*/
	$scope.DiscountSecurityAmount;
	$scope.ItemInlineDiscountList = function(){
		$("#ItemInlineDiscountListfunction").attr("disabled", true);
		var Unique = GlobalItemUnique.Unique;
		if(Unique > 0){
			var postdata ="FunctionButton=DiscountItem";
			posData.CheckUserManagerCookie(postdata)
			.success(function(data){
				if(data.prompt){
					$scope.FunctionButton = 'DiscountItem';
					NumpadPasscode('discount_item_passcode')
					.then(function(){
						WindowPopupPasscode('Discount Item')
						.then(function(){
							$("#number_field").focus();
						})
					})
				}else{
					var ItemSelInfo 	= $(".selected").attr('id');
					var ItemCanDiscount = ItemSelInfo.split("=")[12];
					var ItemDescription = ItemSelInfo.split("=")[13];
					if(ItemCanDiscount == 0){
						var msg = ItemDescription+ " cannot be discounted";
						NumpadAlertOk('discount_item_failed', msg)
						.then(function(){
							WindowPopupAlert('Info');
							$("#ItemInlineDiscountListfunction").attr("disabled", false);
						})

						return;
					}

					$scope.DiscountSecurityAmount = data.Limit;
					discount_item_line_process();
				}
				$scope.DiscountSecurityAmount = data.Limit;
			})
		}else{
			var msg = 'Please select Item first.';
			NumpadAlertClose('set_discount_from_list', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
		setTimeout(function(){
			$("#ItemInlineDiscountListfunction").attr("disabled", false);
		},1000);
	}
	/*
	|-----------------------------------------------------------|
	| ITEM LINE DISCOUNT LIST
	|-----------------------------------------------------------|
	*/
	var discount_item_line_process = function(){
		var Unique = GlobalItemUnique.Unique;
		var Header  = $scope.ReceiptDetailsUnique +" "+ $scope.SelectedDescription +" "+  "Price: "+$scope.SelectedSellPrice;
		var postdata ="Display=4";
			postdata+="&ReceiptDetailsUnique="+Unique;
		posData.LoadDiscountList(postdata)
		.success(function(data){
			if(data.success == true){
				// DiscountListView('item_line_discount_list', data.html)
				// .then(function(){
				// 	WindowDiscountList(Header);
				// })

				DiscountListView('item_line_discount_list', data.html)
				.then(function(){
					WindowDiscountList(Header);
				})
			}else{
				var msg = data.msg;
				NumpadAlertClose('set_discount_from_list', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
					.then(function(){
						$(".alert_close").focus();
					})
				})
			}
			$("#dialog-numpad-passcode").jqxWindow('close');
		})
	}

	var DiscountItemWithBelowCostHoldFunction = () => {
		var Unique = GlobalItemUnique.Unique;
		var DiscSel = $('input[type=radio][name=group1]:checked').attr('id');
			DiscountUnique 	   = DiscSel.split('=')[0];
			DiscountItemPrice  = DiscSel.split('=')[1];
			DiscountType	   = DiscSel.split('=')[2];
			DiscountName	   = DiscSel.split('=')[3];

		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+parseFloat(DiscountItemPrice).toFixed(2);
			postdata+="&DiscountType="+DiscountType;
			postdata+="&DiscountApply="+(DiscountType == 'Percent' ? "Yes" : "No");
		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				if(DiscountType == 'Percent'){
					NewOptionDiscount = 1;
				}else if(DiscountType == 'Dollar'){
					NewOptionDiscount = 2;
				}
				
				NewDiscountAmount = DiscountItemPrice;
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
					$("#dialog-discount-list").jqxWindow('close');
				})
				
			}else{
				var DiscountAmount = DiscountItemPrice
				var postDataDiscountSave = '';
				
				if(DiscountType == 'Percent'){
					postDataDiscountSave = "optiondiscount=" + 1;
						
				}else if(DiscountType == 'Dollar'){
					postDataDiscountSave="optiondiscount=" + 2;
				}

				postDataDiscountSave+="&discountamount="+DiscountAmount;
				postDataDiscountSave+="&unique="+Unique;
				postDataDiscountSave+="&discountunique="+DiscountUnique;
				postDataDiscountSave+="&discountname="+DiscountName;
				postDataDiscountSave+="&DiscountApply=Yes";
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close'); 
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_percent_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Percent')
						});
					}
					$("#barcode_search").focus();
				})
				$("#dialog-discount-list").jqxWindow('close');
			}
		})
	}

	$scope.DiscountInfoSelected;
	$(document).on('click', '#item_line_discount_list .button_proceed', function(e){
		e.preventDefault();

		var Unique = GlobalItemUnique.Unique;
		var DiscSel = $('input[type=radio][name=group1]:checked').attr('id');
			DiscountUnique 	   = DiscSel.split('=')[0];
			DiscountItemPrice  = DiscSel.split('=')[1];
			DiscountType	   = DiscSel.split('=')[2];
			DiscountName	   = DiscSel.split('=')[3];

		$scope.DiscountInfoSelected = DiscSel;

		$scope.DiscountAmountField = DiscountItemPrice;

		var ExistingDiscount = 0;

		var ItemInfoDisc = $(".selected").find('.line2disc').text();
		ExistingDiscount = ItemInfoDisc;
		
		if(DiscountItemPrice != ''){
		
			if($scope.getItemDiscount > 0){

				var itemInfo = $(".selected").prop('id');
				var ConvertDiscountAmount = DiscountItemPrice / 100;
				var itemListPrice = itemInfo.split("=")[11];
				var itemDiscount = (ConvertDiscountAmount * itemListPrice);				

				if(DiscountType == 'Percent'){
					DiscountApply = "Yes";
				}else{
					DiscountApply = "No";
					itemDiscount = DiscountItemPrice;
				}
				
				$scope.FunctionButton = 'DiscountItemPercent';
				var postdata ="FunctionButton=DiscountItemPercent";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					$scope.DiscountSecurityAmount = data.Limit;
					AccessToOpenDiscountContent("item_line_discount_"+(DiscountType == "Percent" ? "percent" : "dollar")+"_form_two", "Discount item percent", (DiscountType == 'Percent' ? parseInt(DiscountItemPrice) : parseFloat(DiscountItemPrice).toFixed(2)) , (DiscountType == 'Percent' ? "percent" : "dollar"));
				})


				$("#dialog-discount-list").jqxWindow("close");
				return; 
			}

			if(DiscountType == "Percent"){
				var itemInfo = $(".selected").prop('id');
				var ConvertDiscountAmount = DiscountItemPrice / 100;
				var itemListPrice = itemInfo.split("=")[11];
				var itemDiscount = (ConvertDiscountAmount * itemListPrice);
				// var itemDiscountAmount = parseFloat(DiscountItemPrice);

				$scope.FunctionButton = 'DiscountItemPercent';
				var postdata ="FunctionButton=DiscountItemPercent";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					if(data.prompt){ 
						NumpadPasscode('discount_item_security_direct_passcode')
						.then(function(){
							WindowPopupPasscode('Discount Item Percent Security')
							.then(function(){
								$("#number_field").focus();
							})
						})
						$("#dialog-discount-list").jqxWindow('close');
						return;
					}else{
						if(parseFloat(itemDiscount) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							NumpadPasscode('discount_item_security_direct_passcode')
							.then(function(){
								WindowPopupPasscode('Discount Item Percent ' + (data.Limit ? '| Limit '+data.Limit : ''))
								.then(function(){
									$("#number_field").focus();
								})
							})
							$("#dialog-discount-list").jqxWindow('close');
							
							return;
						}
					}

					DiscountItemWithBelowCostHoldFunction();
				})

			}else{
			
				var itemInfo = $(".selected").prop('id');
				var itemDiscountAmount = parseFloat(DiscountItemPrice);
				var itemListPrice = itemInfo.split("=")[11];

				$scope.FunctionButton = 'DiscountItemDollar';

				var postdata ="FunctionButton=DiscountItemDollar";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					if(data.prompt){ 
						NumpadPasscode('discount_item_security_direct_passcode')
						.then(function(){
							WindowPopupPasscode('Discount Item Dollar Security')
							.then(function(){
								$("#number_field").focus();
							})
						})
						$("#dialog-discount-list").jqxWindow('close');
						return;
					}else{
						if(parseFloat(itemDiscountAmount) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							
							NumpadPasscode('discount_item_security_direct_passcode')
							.then(function(){
								WindowPopupPasscode('Discount Item Dollar '+(data.Limit ? "| Limit "+ data.Limit : '') )
								.then(function(){
									$("#number_field").focus();
								})
							})
							$("#dialog-discount-list").jqxWindow('close');
							
							return;
						}
					}

					DiscountItemWithBelowCostHoldFunction();
				})
			}

		}else{
			console.log("asdfjskfj", DiscountType);

			if(DiscountType == "Dollar"){
				var postdata ="FunctionButton=DiscountItemDollar";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					$scope.DiscountSecurityAmount = data.Limit;
					if(data.prompt){
						$scope.FunctionButton = 'DiscountItemDollar';
						NumpadPasscode('discount_item_line_dollar_passcode')
						.then(function(){
							WindowPopupPasscode('Discount Item Dollar Security')
							.then(function(){
								$("#number_field").focus();
							})
						})
					}else{
						var postDataItemInfo = "Unique="+Unique;
						posData.ItemInfo(postDataItemInfo)
						.success(function(data){
							$scope.iteminfo = data;
							$scope.itemno = data.Item;
							$scope.itemdesc = data.Description;
							NumpadDiscount('item_line_discount_dollar_form', true)
							.then(function(){
								WindowPopupDiscount('Discount Item Dollar')
								.then(function(){
									$("#discount_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#discount_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#discount_field input").select();
									},100)
								})
							})
						})
					}
					$("#dialog-discount-list").jqxWindow('close');
				})
			}else if(DiscountType == "Percent"){
				var postdata ="FunctionButton=DiscountItemPercent";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					$scope.DiscountSecurityAmount = data.Limit;
					if(data.prompt){
						$scope.FunctionButton = 'DiscountItemPercent';
						NumpadPasscode('discount_item_line_percent_passcode')
						.then(function(){
							WindowPopupPasscode('Discount Item Percent Security')
							.then(function(){
								$("#number_field").focus();
							})
						})
					}else{
						var postDataItemInfo = "Unique="+Unique;
						posData.ItemInfo(postDataItemInfo)
						.success(function(data){
							$scope.iteminfo = data;
							$scope.itemno = data.Item;
							$scope.itemdesc = data.Description;
							NumpadDiscount('item_discount_percent_form', true)
							.then(function(){
								WindowPopupDiscount('Discount Item Percent')
								.then(function(){
									$("#discount_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#discount_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#discount_field input").select();
									},100)
								})
							})
						})
					}
					$("#dialog-discount-list").jqxWindow('close');
				})
			}
		}
	})

	$(document).on("submit", "#discount_item_line_percent_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						console.log("hey here!");
						$("#dialog-numpad-passcode").jqxWindow('close');
						var SelectedItem = GlobalItemUnique.Unique;
						var postDataItemInfo="Unique="+SelectedItem;
						posData.ItemInfo(postDataItemInfo)
						.success(function(data){
							$scope.iteminfo = "Discount Percent";
							NumpadDiscount('item_line_discount_percent_form', true)
							.then(function(){
								WindowPopupDiscount('Discount Item Percent')
								.then(function(){
									$("#discount_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#discount_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#discount_field input").select();
									},100)
								})
							})
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#item_line_discount_percent_form', function(e){
		e.preventDefault();
		if($("#discount_field").val() >= 0){
			
			var Unique = GlobalItemUnique.Unique;
			var EnterDiscountAmount = $("#discount_field").val();
			if(EnterDiscountAmount == ''){
				EnterDiscountAmount = 0.00;
			}

			var ExistingDiscount = 0;

			var itemInfo = $(".selected").prop('id');
			console.log(itemInfo);
			var ConvertDiscountAmount = EnterDiscountAmount / 100;
			var itemListPrice = itemInfo.split("=")[11];
			var itemDiscount = (ConvertDiscountAmount * itemListPrice);
			
			var ItemInfoDisc = $(".selected").find('.line2disc').text();
			ExistingDiscount = ItemInfoDisc;

			$scope.DiscountAmountField = itemDiscount;
			
			var NewItemDiscount = parseFloat(itemDiscount) + parseFloat(ExistingDiscount);

			if($scope.getItemDiscount > 0){
				if(parseFloat(NewItemDiscount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
					$scope.DiscountAmountField = EnterDiscountAmount;
					$scope.FunctionButton = 'DiscountItemPercent';
					NumpadPasscode('rediscount_item_security_passcode')
					.then(function(){
						WindowPopupPasscode('Discount Item Percent | New Discount '+parseFloat(NewItemDiscount).toFixed(2) + ($scope.DiscountSecurityAmount ? '| Limit '+ $scope.DiscountSecurityAmount : ''))
						.then(function(){
							$("#number_field").focus();
						})
					})
					$("#dialog-numpad-discount").jqxWindow('close');
	
					return;
				}

				AccessToOpenDiscountContent("item_line_discount_percent_form_two", "Discount item percent", EnterDiscountAmount, 'percent');

				$("#dialog-numpad-discount").jqxWindow('close');

				return;
			}
			
			if(parseFloat(itemDiscount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
				NumpadPasscode('discount_item_security_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Item Percent ' + ($scope.DiscountSecurityAmount ? '| Limit '+$scope.DiscountSecurityAmount : ''))
					.then(function(){
						$("#number_field").focus();
					})
				})

				$("#dialog-numpad-discount").jqxWindow('close');

				return;
			}

			NewDiscountAmount = EnterDiscountAmount;
			NewOptionDiscount = 1;
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
				postdata+="&DiscountType=Percent";
			posData.DiscountBelowCostPage2(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var DiscountAmount = EnterDiscountAmount
					var postDataDiscountSave="optiondiscount="+1;
						postDataDiscountSave+="&discountamount="+DiscountAmount;
						postDataDiscountSave+="&unique="+Unique;
						postDataDiscountSave+="&discountunique="+DiscountUnique;
						postDataDiscountSave+="&discountname="+DiscountName;
					posData.DiscountItem(postDataDiscountSave)
					.success(function(data){
						if(data.success == true){
							load_data(data);
							$("#dialog-numpad-discount").jqxWindow('close');
							GlobalItemUnique = {};
							PoleDisplay(Unique);
						}else{
							$("#dialog-numpad-discount").jqxWindow('close'); 
							var msg = "Discount must be less than the item amount";
							NumpadAlertClose('discount_item_percent_alert', msg)
							.then(function(){
								WindowPopupAlert('Discount Item Percent')
							});
						}
						$("#barcode_search").focus();
					})
				}
				$("#dialog-numpad-discount").jqxWindow('close');
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close'); 
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_item_percent_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Percent')
			});
		}
	})


	$(document).on('submit', '#item_line_discount_percent_form_two', function(e){
		e.preventDefault();
		var Unique = GlobalItemUnique.Unique;
		var EnterDiscountAmount = $("#typed_discount_value").val();
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}

		$scope.DiscountAmountField = EnterDiscountAmount;

		var ConvertDiscountAmount = EnterDiscountAmount / 100;
		var itemInfo = $(".selected").prop('id');
		var itemListPrice = itemInfo.split("=")[11];
		var itemDiscount = (ConvertDiscountAmount * itemListPrice);	

		if(parseFloat(itemDiscount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('change_discount_percent_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Item | New Discount '+ parseFloat(itemDiscount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}

		console.log("EnterDiscountAmount",EnterDiscountAmount);
		
		DiscountApply = "Yes";
		NewDiscountAmount = EnterDiscountAmount;
		NewOptionDiscount = 1;
		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+parseFloat( EnterDiscountAmount ).toFixed(2);
			postdata+="&DiscountType=Percent";
			postdata+="&DiscountApply=Yes";

		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
			}else{
				var DiscountAmount = EnterDiscountAmount
				var postDataDiscountSave="optiondiscount="+1;
					postDataDiscountSave+="&discountamount="+DiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
					postDataDiscountSave+="&discountunique="+DiscountUnique;
					postDataDiscountSave+="&discountname="+DiscountName;
					postDataDiscountSave+="&DiscountApply=Yes";
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						$("#dialog-numpad-discount").jqxWindow('close');
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close'); 
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_percent_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Percent')
						});
					}
					$("#barcode_search").focus();
				})
			}
			$("#discount_content").jqxWindow('close');
		})
	})

	$(document).on('click', '#item_line_discount_percent_form_three #_discount_content_sell_price', function(e){
		e.preventDefault();
		
		// var currentPercentDiscount = (parseFloat(getItemInformation[3]) / parseFloat(getItemInformation[1]) * 100);
		// console.log(currentPercentDiscount);
		// var NewAddDiscountPercent = parseFloat($scope.DiscountAmountField) + parseFloat(currentPercentDiscount);

		EnterDiscountAmount = $scope.DiscountAmountField;
		var ConvertDiscountAmount = EnterDiscountAmount / 100;
		// var itemInfo = $(".selected").prop('id');
		// var itemListPrice = itemInfo.split("=")[11];
		var itemcurDisc = $(".selected").find('.line2disc').text();
		var itemListPrice = $(".selected").find('.line2sell').text();
		var itemDiscount = (ConvertDiscountAmount * itemListPrice);
		
		itemDiscount = parseFloat(itemDiscount) + parseFloat(itemcurDisc);

		if(parseFloat(itemDiscount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			
			$scope.FunctionButton = 'DiscountItemPercent';
			NumpadPasscode('add_another_discount_percent_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Item | New Discount '+ parseFloat(itemDiscount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}

		var Unique = GlobalItemUnique.Unique;
		NewDiscountAmount = EnterDiscountAmount;
		NewOptionDiscount = 1;
		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+EnterDiscountAmount;
			postdata+="&DiscountType=Percent";
			postdata+="&DiscountApply=No";

		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
			}else{
				var DiscountAmount = EnterDiscountAmount
				var postDataDiscountSave="optiondiscount="+1;
					postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
					postDataDiscountSave+="&discountunique="+DiscountUnique;
					postDataDiscountSave+="&discountname="+DiscountName;
					postDataDiscountSave+="&DiscountApply=No";
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						$("#dialog-numpad-discount").jqxWindow('close');
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close'); 
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_percent_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Percent')
						});
					}
					$("#barcode_search").focus();
				})
			}
			$("#discount_content").jqxWindow('close');
		})
	})

	$(document).on('submit', '#item_line_discount_percent_form_three', function(e){
		e.preventDefault();

		console.log("hey here");

		var Unique = GlobalItemUnique.Unique;
		
		EnterDiscountAmount = $scope.DiscountAmountField; 
		NewDiscountAmount = EnterDiscountAmount;
		NewOptionDiscount = 1;
		
		var ItemSelInfo 	= $(".selected").attr('id');
		// var ItemSelInfoPrice = $(".selected").find('.line2sell').text(); //testing
		var ItemSelInfoPrice= ItemSelInfo.split('=')[11];

		var ConverDiscountPercent = EnterDiscountAmount / 100;
		var DiscountPercentDollar = (ConverDiscountPercent * ItemSelInfoPrice);

		$scope.DiscountAmountField = DiscountPercentDollar;

		if( parseFloat(DiscountPercentDollar) > $scope.DiscountSecurityAmount && EnterDiscountAmount != 0 && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.DiscountAmountField = EnterDiscountAmount;
			$scope.FunctionButton = 'DiscountItemPercent';
			NumpadPasscode('discount_item_security_percent_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Item')
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}

		$scope.DiscountAmountField = 0;

		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice=" + EnterDiscountAmount;
			postdata+="&DiscountType=Percent";
		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
			}else{
				var DiscountAmount = EnterDiscountAmount
				var postDataDiscountSave="optiondiscount="+1;
					postDataDiscountSave+="&discountamount="+DiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_percent_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Percent')
						});
					}
					$("#barcode_search").focus();
				})
			}
			$("#discount_content").jqxWindow('close');
		})
	})

	$(document).on('submit', '#change_discount_percent_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){

						if($scope.DiscountAmountField > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						var Unique = GlobalItemUnique.Unique;
						DiscountApply = "Yes";
						NewDiscountAmount = $scope.DiscountAmountField;
						NewOptionDiscount = 1;
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+parseFloat( $scope.DiscountAmountField ).toFixed(2);
							postdata+="&DiscountType=Percent";
							postdata+="&DiscountApply=Yes";

						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
							}else{
								var DiscountAmount = $scope.DiscountAmountField;
								var postDataDiscountSave="optiondiscount="+1;
									postDataDiscountSave+="&discountamount="+DiscountAmount;
									postDataDiscountSave+="&unique="+Unique;
									postDataDiscountSave+="&discountunique="+DiscountUnique;
									postDataDiscountSave+="&discountname="+DiscountName;
									postDataDiscountSave+="&DiscountApply=Yes";
								posData.DiscountItem(postDataDiscountSave)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										$("#dialog-numpad-discount").jqxWindow('close');
										GlobalItemUnique = {};
										PoleDisplay(Unique);
									}else{
										$("#dialog-numpad-discount").jqxWindow('close'); 
										var msg = "Discount must be less than the item amount";
										NumpadAlertClose('discount_item_percent_alert', msg)
										.then(function(){
											WindowPopupAlert('Discount Item Percent')
										});
									}
									$("#barcode_search").focus();
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
						
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})	
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#add_another_discount_percent_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var getdiscount = $(".selected").find('.line2disc').text();

						var ConvertDiscountAmount = $scope.DiscountAmountField / 100;
						var itemInfo = $(".selected").prop('id');
						var itemListPrice = itemInfo.split("=")[11];
						var itemDiscount = (ConvertDiscountAmount * itemListPrice);	

						var NewDiscount = parseFloat(itemDiscount) + parseFloat(getdiscount);

						if(NewDiscount > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						var Unique = GlobalItemUnique.Unique;
						NewDiscountAmount = $scope.DiscountAmountField;
						NewOptionDiscount = 1;
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+parseFloat( $scope.DiscountAmountField ).toFixed(2);
							postdata+="&DiscountType=Percent";
							postdata+="&DiscountApply=No";

						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
							}else{
								var DiscountAmount = $scope.DiscountAmountField
								var postDataDiscountSave="optiondiscount="+1;
									postDataDiscountSave+="&discountamount="+$scope.DiscountAmountField;
									postDataDiscountSave+="&unique="+Unique;
									postDataDiscountSave+="&discountunique="+DiscountUnique;
									postDataDiscountSave+="&discountname="+DiscountName;
									postDataDiscountSave+="&DiscountApply=No";
								posData.DiscountItem(postDataDiscountSave)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										$("#dialog-numpad-discount").jqxWindow('close');
										GlobalItemUnique = {};
										PoleDisplay(Unique);
									}else{
										$("#dialog-numpad-discount").jqxWindow('close'); 
										var msg = "Discount must be less than the item amount";
										NumpadAlertClose('discount_item_percent_alert', msg)
										.then(function(){
											WindowPopupAlert('Discount Item Percent')
										});
									}
									$("#barcode_search").focus();
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})	
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})


	$(document).on('click', '#item_line_discount_percent_form_two #_discount_content_sell_price', function(e){
		e.preventDefault();
		var Unique = GlobalItemUnique.Unique;
		var EnterDiscountAmount = $("#typed_discount_value").val();
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}
		
		$scope.DiscountAmountField = EnterDiscountAmount;

		var ConvertDiscountAmount = EnterDiscountAmount / 100;
		// var itemInfo = $(".selected").prop('id');
		// var itemListPrice = itemInfo.split("=")[11];
		var itemcurDisc = $(".selected").find('.line2disc').text();
		var itemListPrice = $(".selected").find('.line2sell').text();
		var itemDiscount = (ConvertDiscountAmount * itemListPrice);	

		itemDiscount = parseFloat(itemDiscount) + parseFloat(itemcurDisc);

		if(parseFloat(itemDiscount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('add_another_discount_percent_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Item | New Discount '+ parseFloat(itemDiscount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}
		console.log("went thru here", EnterDiscountAmount);
		NewDiscountAmount = EnterDiscountAmount;
		NewOptionDiscount = 1;
		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+EnterDiscountAmount;
			postdata+="&DiscountType=Percent";
			postdata+="&DiscountApply=No";

		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
			}else{
				var DiscountAmount = EnterDiscountAmount
				var postDataDiscountSave="optiondiscount="+1;
					postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
					postDataDiscountSave+="&discountunique="+DiscountUnique;
					postDataDiscountSave+="&discountname="+DiscountName;
					postDataDiscountSave+="&DiscountApply=No";
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						$("#dialog-numpad-discount").jqxWindow('close');
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close'); 
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_percent_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Percent')
						});
					}
					$("#barcode_search").focus();
				})
			}
			$("#discount_content").jqxWindow('close');
		})
	})

	$(document).on("submit", "#discount_item_line_dollar_passcode", function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var SelectedItem = GlobalItemUnique.Unique;
						$("#dialog-numpad-passcode").jqxWindow('close');
						var postDataItemInfo = "Unique="+SelectedItem;
						posData.ItemInfo(postDataItemInfo)
						.success(function(data){
							$scope.iteminfo = data;
							$scope.itemno = data.Item;
							$scope.itemdesc = data.Description;
							NumpadDiscount('item_line_discount_dollar_form', true)
							.then(function(){
								WindowPopupDiscount('Discount Item Dollar')
								.then(function(){
									$("#discount_field").jqxNumberInput('focus');
									setTimeout(function(){
										var input = $('#discount_field input')[0];
										if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
										}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
										}
										$("#discount_field input").select();
									},100)
								})
							})
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on("submit", "#item_line_discount_dollar_form", function(e){
		e.preventDefault();
		if($("#discount_field").val() >= 0){
			var Unique = GlobalItemUnique.Unique;
			var EnterDiscountAmount = parseFloat($("#discount_field").val()).toFixed(2);
			if(EnterDiscountAmount == ''){
				EnterDiscountAmount = 0.00;
			}
			var ExistingDiscount = 0;

			var ItemInfoDisc = $(".selected").find('.line2disc').text();
			ExistingDiscount = ItemInfoDisc;

			$scope.DiscountAmountField = EnterDiscountAmount;

			if($scope.getItemDiscount > 0){
				
				AccessToOpenDiscountContent("item_line_discount_dollar_form_two", "Discount item dollar", EnterDiscountAmount, 'dollar');

				$("#dialog-numpad-discount").jqxWindow('close');

				return;
			}

			//-->Global NewDiscountAmount
			NewDiscountAmount = EnterDiscountAmount;
			//--Global NewOptionDiscount
			NewOptionDiscount = 2;	

			if(parseFloat(EnterDiscountAmount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
				$scope.FunctionButton = 'DiscountItemDollar';
				NumpadPasscode('discount_item_security_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Item Dollar ' + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#dialog-numpad-discount").jqxWindow('close');

				return;
			}

			$scope.DiscountAmountField = 0;

			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+EnterDiscountAmount;
				postdata+="&DiscountType=Dollar";
			posData.DiscountBelowCostPage2(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var postDataDiscountSave="optiondiscount="+2;
						postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
						postDataDiscountSave+="&unique="+Unique;
						postDataDiscountSave+="&discountunique="+DiscountUnique;
						postDataDiscountSave+="&discountname="+DiscountName;
					posData.DiscountItem(postDataDiscountSave)
					.success(function(data){
						if(data.success == true){
							load_data(data);
							$("#dialog-numpad-discount").jqxWindow('close');
							GlobalItemUnique = {};
							PoleDisplay(Unique);
						}else{
							$("#dialog-numpad-discount").jqxWindow('close');
							var msg = "Discount must be less than the item amount";
							NumpadAlertClose('discount_item_dollar_alert', msg)
							.then(function(){
								WindowPopupAlert('Discount Item Dollar')
							});
						}
					}).then(function(){
						$('#barcode_search').focus();
					})
				}
				$("#dialog-numpad-discount").jqxWindow('close');
			})
		}else{
			$("#dialog-numpad-discount").jqxWindow('close');
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_item_dollar_alert', msg)
			.then(function(){
				WindowPopupAlert('Discount Item Dollar')
			});
		}
	})

	$(document).on('submit', '#item_line_discount_dollar_form_two', function(e){
		e.preventDefault();
		var Unique = GlobalItemUnique.Unique;
		var EnterDiscountAmount = parseFloat( $("#typed_discount_value").val() ).toFixed(2);
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}

		$scope.DiscountAmountField = EnterDiscountAmount;

		if(parseFloat(EnterDiscountAmount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('change_discount_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Item | New Discount '+ parseFloat(EnterDiscountAmount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}

		//-->Global NewDiscountAmount
		NewDiscountAmount = EnterDiscountAmount;
		//--Global NewOptionDiscount
		NewOptionDiscount = 2;	

		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+EnterDiscountAmount;
			postdata+="&DiscountType=Dollar";
			postdata+="&DiscountApply=Yes";
		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
			}else{
				var postDataDiscountSave="optiondiscount="+2;
					postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
					postDataDiscountSave+="&discountunique="+DiscountUnique;
					postDataDiscountSave+="&discountname="+DiscountName;
					postDataDiscountSave+="&DiscountApply=Yes";
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						$("#dialog-numpad-discount").jqxWindow('close');
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close');
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_dollar_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Dollar')
						});
					}
				}).then(function(){
					$('#barcode_search').focus();
				})
			}
			$("#discount_content").jqxWindow('close');
		})
	})

	$(document).on('click', '#item_line_discount_dollar_form_two #_discount_content_sell_price', function(e){
		e.preventDefault();
		var getaddedDiscount = $(".selected").find('.line2disc').text();
		var NewDiscount = parseFloat($scope.DiscountAmountField) + parseFloat(getaddedDiscount);
	
		if(NewDiscount > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('add_another_discount_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Item | New Discount '+ parseFloat(NewDiscount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}

		var Unique = GlobalItemUnique.Unique;
		var EnterDiscountAmount = parseFloat( $("#typed_discount_value").val() ).toFixed(2);
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}

		DiscountApply = "No"

		//-->Global NewDiscountAmount
		NewDiscountAmount = EnterDiscountAmount;
		//--Global NewOptionDiscount
		NewOptionDiscount = 2;	

		var postdata ="ReceiptDetailsUnique="+Unique;
			postdata+="&NewPrice="+EnterDiscountAmount;
			postdata+="&DiscountType=Dollar";
			postdata+="&DiscountApply=No";
		posData.DiscountBelowCostPage2(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
			}else{
				var postDataDiscountSave="optiondiscount="+2;
					postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
					postDataDiscountSave+="&unique="+Unique;
					postDataDiscountSave+="&discountunique="+DiscountUnique;
					postDataDiscountSave+="&discountname="+DiscountName;
					postDataDiscountSave+="&DiscountApply=No";
				posData.DiscountItem(postDataDiscountSave)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						$("#dialog-numpad-discount").jqxWindow('close');
						GlobalItemUnique = {};
						PoleDisplay(Unique);
					}else{
						$("#dialog-numpad-discount").jqxWindow('close');
						var msg = "Discount must be less than the item amount";
						NumpadAlertClose('discount_item_dollar_alert', msg)
						.then(function(){
							WindowPopupAlert('Discount Item Dollar')
						});
					}
				}).then(function(){
					$('#barcode_search').focus();
				})
			}
			$("#discount_content").jqxWindow('close');
		})
	})

	$(document).on('submit', '#change_discount_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){

						if($scope.DiscountAmountField > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						//-->Global NewDiscountAmount
						NewDiscountAmount = $scope.DiscountAmountField;
						//--Global NewOptionDiscount
						NewOptionDiscount = 2;	
						var Unique = GlobalItemUnique.Unique;
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+NewDiscountAmount;
							postdata+="&DiscountType=Dollar";
							postdata+="&DiscountApply=Yes";
						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
							}else{
								var postDataDiscountSave="optiondiscount="+2;
									postDataDiscountSave+="&discountamount="+$scope.DiscountAmountField;
									postDataDiscountSave+="&unique="+Unique;
									postDataDiscountSave+="&discountunique="+DiscountUnique;
									postDataDiscountSave+="&discountname="+DiscountName;
									postDataDiscountSave+="&DiscountApply=Yes";
								posData.DiscountItem(postDataDiscountSave)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										$("#dialog-numpad-discount").jqxWindow('close');
										GlobalItemUnique = {};
										PoleDisplay(Unique);
									}else{
										$("#dialog-numpad-discount").jqxWindow('close');
										var msg = "Discount must be less than the item amount";
										NumpadAlertClose('discount_item_dollar_alert', msg)
										.then(function(){
											WindowPopupAlert('Discount Item Dollar')
										});
									}
								}).then(function(){
									$('#barcode_search').focus();
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})	
		}
	})

	$(document).on('submit', '#add_another_discount_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						
						if($scope.DiscountAmountField > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						var Unique = GlobalItemUnique.Unique;
						var EnterDiscountAmount = parseFloat( $scope.DiscountAmountField ).toFixed(2);
						if(EnterDiscountAmount == ''){
							EnterDiscountAmount = 0.00;
						}

						DiscountApply = "No"

						//-->Global NewDiscountAmount
						NewDiscountAmount = EnterDiscountAmount;
						//--Global NewOptionDiscount
						NewOptionDiscount = 2;	

						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+EnterDiscountAmount;
							postdata+="&DiscountType=Dollar";
							postdata+="&DiscountApply=No";
						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
							}else{
								var postDataDiscountSave="optiondiscount="+2;
									postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
									postDataDiscountSave+="&unique="+Unique;
									postDataDiscountSave+="&discountunique="+DiscountUnique;
									postDataDiscountSave+="&discountname="+DiscountName;
									postDataDiscountSave+="&DiscountApply=No";
								posData.DiscountItem(postDataDiscountSave)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										$("#dialog-numpad-discount").jqxWindow('close');
										GlobalItemUnique = {};
										PoleDisplay(Unique);
									}else{
										$("#dialog-numpad-discount").jqxWindow('close');
										var msg = "Discount must be less than the item amount";
										NumpadAlertClose('discount_item_dollar_alert', msg)
										.then(function(){
											WindowPopupAlert('Discount Item Dollar')
										});
									}
								}).then(function(){
									$('#barcode_search').focus();
								})
							}
						})
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})	
		}
	})

	$(document).on("click", "#item_line_discount_list .button_q_cancel", function(e){
		e.preventDefault();
		$("#dialog-discount-list").jqxWindow("close");
	})

	$scope.ReceiptInlineDiscountList = function(){
		$("#ReceiptInlineDiscountListfunction").attr("disabled", true);
		var postdata ="FunctionButton=DiscountReceipt";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			$scope.DiscountSecurityAmount = data.Limit;
			if(data.prompt){
				$scope.FunctionButton = 'DiscountReceipt';
				NumpadPasscode('discount_receipt_line_passcode')
				.then(function(){
					WindowPopupPasscode('Discount Receipt')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				discount_receipt_line_process();
			}
		})
	
		setTimeout(function(){
			$("#ReceiptInlineDiscountListfunction").attr("disabled", false);
		},1000)
	}

	$(document).on('click', '#discount_item_line_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						discount_receipt_line_process();
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
	/*
	|-----------------------------------------------------------|
	| RECEIPT LINE DISCOUNT LIST
	|-----------------------------------------------------------|
	*/
	var ReceiptDiscountSubTotal = 0;
	var discount_receipt_line_process = function(){
		var DisplayHeader;
		var postdata ="Display=5";
		posData.LoadDiscountList(postdata)
		.success(function(data){
			ReceiptDiscountSubTotal = data.SubTotal;
			DisplayHeader = "Receipt# "+data.ReceiptNumber +" "+ "SubTotal: "+data.SubTotal;
			DiscountListView('receipt_line_discount_list', data.html)
			.then(function(){
				WindowDiscountList(DisplayHeader);
			})
			$("#dialog-numpad-passcode").jqxWindow('close');
		})
	}
	/*
	|-----------------------------------------------------------|
	| RECEIPT LINE DISCOUNT LIST OK BUTTON
	|-----------------------------------------------------------|
	*/
	$(document).on('click', '#receipt_line_discount_list .button_proceed', function(e){
		e.preventDefault();
		var DiscSel = $('input[type=radio][name=group1]:checked').attr('id');
		DiscountUnique 	   	= DiscSel.split('=')[0];
		DiscountReceiptPrice= DiscSel.split('=')[1];
		DiscountType	   	= DiscSel.split('=')[2];
		DiscountName	   	= DiscSel.split('=')[5];

		$scope.DiscountInfoSelected = DiscSel;
		
		if(DiscountReceiptPrice !== ''){
			if(DiscountType == 'Percent'){
				posData.getDiscountReceiptApplied()
				.success(function(resdata){
					if(resdata.result > 0){
						DiscountApply = "Yes";

						var postdata ="FunctionButton=DiscountReceiptPercent";
						posData.CheckUserManagerCookie(postdata)
						.success(function(data){
							$scope.DiscountSecurityAmount = data.Limit;
							AccessToOpenDiscountReceipt('receipt_discount_percent_form_two', 'Discount receipt percent', parseInt(DiscountReceiptPrice), 'percent');
							
							return;
						})
					}else{
						console.log("sdsd")
						DiscountReceiptBelowCostSellPrice = DiscountReceiptPrice;
						var postdata ="FunctionButton=DiscountReceiptPercent";
						posData.CheckUserManagerCookie(postdata)
						.success(function(data){
							if(data.prompt){
								$scope.FunctionButton = 'DiscountReceiptPercent';
								NumpadPasscode('discount_receipt_percent_security_direct_passcode')
								.then(function(){
									WindowPopupPasscode('Discount Discount Percent ' + (data.Limit ? '| Limit ' + data.Limit : ''))
									.then(function(){
										$("#number_field").focus();
									})
								})
							}else{
								var ReceiptDiscountPercentLimit = parseFloat(data.Limit);
								var ConvertDiscountAmount = DiscountReceiptPrice / 100;
								var ReceiptTotal = $("#amountdue_total").val();
								var ReceiptDiscount = (ConvertDiscountAmount * ReceiptTotal);
		
								if(parseFloat(ReceiptDiscount) > ReceiptDiscountPercentLimit ){
									$scope.FunctionButton ='DiscountReceiptPercent';
									NumpadPasscode('discount_receipt_percent_security_direct_passcode')
									.then(function(){
										WindowPopupPasscode('Discount Receipt Percent ' + (data.Limit ? '| Limit ' + data.Limit : '') )
										.then(function(){
											$("#number_field").focus();
										})
									})
									return;
								}						

								var postdata ="NewPrice="+DiscountReceiptPrice;
									postdata+="&DiscountType="+DiscountType;
								posData.DiscountReceiptLineBelowCost(postdata)
								.success(function(data){
									if(data.belowcost){
										populateSellBelowCostWindow(data.html)
										.then(function(){
											WindowBelowCost(data.Description);
										})
										$("#dialog-numpad-discount").jqxWindow('close');
									}else{
										var DiscountAmount = $("#number_field").val();
										var postdata ="DiscountType="+DiscountType;
											postdata+="&DiscountUnique="+DiscountUnique;
											postdata+="&discountamount="+DiscountReceiptPrice;
											postdata+="&discountname="+DiscountName;
										posData.ReceiptDiscount(postdata)
										.success(function(data){
											if(data.success == true){
												load_data(data);
												GlobalItemUnique = {};
												$("#dialog-numpad-discount").jqxWindow('close');
												PoleDisplayTotal();
											}else{
												$("#dialog-numpad-discount").jqxWindow('close'); 
												var msg = "Discount must be less than the total amount";
												NumpadAlertClose('discount_receipt_alert', msg)
												.then(function(){
													WindowPopupAlert('Receipt Discount Alert');
												})
											}
											$("#barcode_search").focus();
										})
									}
								})
							}
						})
					}
				})

				$("#dialog-discount-list").jqxWindow('close');
			}else if(DiscountType == 'Dollar'){
				
				posData.getDiscountReceiptApplied()
				.success(function(resdata){
					if(resdata.result > 0){
						var postdata ="FunctionButton=DiscountReceiptDollar";
						posData.CheckUserManagerCookie(postdata)
						.success(function(data){
							$scope.DiscountSecurityAmount = data.Limit;

							DiscountApply = "No";
							AccessToOpenDiscountReceipt('receipt_discount_dollar_form_two', 'Discount receipt dollar', DiscountReceiptPrice, 'dollar');

							return;
						})
					}else{
						DiscountReceiptBelowCostSellPrice = DiscountReceiptPrice;
						var postdata ="FunctionButton=DiscountReceiptDollar";
						posData.CheckUserManagerCookie(postdata)
						.success(function(data){
							if(data.prompt){
								$scope.FunctionButton ='DiscountReceiptDollar';
								NumpadPasscode('discount_dollar_receipt_security_direct_passcode')
								.then(function(){
									WindowPopupPasscode('Discount Receipt Dollar Security')
									.then(function(){
										$("#number_field").focus();
									})
								})
							}else{

								var ReceiptDiscountPercentLimit = parseFloat(data.Limit);

								console.log("aaa", parseFloat(DiscountReceiptPrice), ReceiptDiscountPercentLimit);

								if(parseFloat(DiscountReceiptPrice) > ReceiptDiscountPercentLimit ){
									$scope.FunctionButton ='DiscountReceiptDollar';
									NumpadPasscode('discount_dollar_receipt_security_direct_passcode')
									.then(function(){
										WindowPopupPasscode('Discount Receipt Dollar ' + (data.Limit ? '| Limit '+data.Limit : null))
										.then(function(){
											$("#number_field").focus();
										})
									})
									return;
								}

								var postdata ="NewPrice="+DiscountReceiptPrice;
									postdata+="&DiscountType="+DiscountType;
								posData.DiscountReceiptLineBelowCost(postdata)
								.success(function(data){
									if(data.belowcost){
										populateSellBelowCostWindow(data.html)
										.then(function(){
											WindowBelowCost(data.Description);
										})
										$("#dialog-numpad-discount").jqxWindow('close');
									}else{
										var postdata ="DiscountType="+DiscountType;
											postdata+="&DiscountUnique="+DiscountUnique;
											postdata+="&discountamount="+DiscountReceiptPrice;
											postdata+="&discountname="+DiscountName;
										posData.ReceiptDiscount(postdata)
										.success(function(data){
											if(data.success == true){
												load_data(data);
												GlobalItemUnique = {};
												$("#dialog-numpad-discount").jqxWindow('close');
												PoleDisplayTotal();
											}else{
												$("#dialog-numpad-discount").jqxWindow('close'); 
												var msg = "Discount must be less than the total amount";
												NumpadAlertClose('discount_receipt_alert', msg)
												.then(function(){
													WindowPopupAlert('Receipt Discount Alert');
												})
											}
											$("#barcode_search").focus();
										})
									}
								})
							}

						})
					}
				})
			}
			$("#dialog-discount-list").jqxWindow('close');
		}else{
			
			if(DiscountType == "Dollar"){
				var postdata ="FunctionButton=DiscountReceiptDollar";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					if(data.prompt){
						$scope.FunctionButton = 'DiscountReceiptDollar';
						NumpadPasscode('discount_receipt_dollar_passcode')
						.then(function(){
							WindowPopupPasscode('Discount Receipt Dollar')
							.then(function(){
								$("#number_field").focus();
							})
						})
					}else{
						NumpadDiscount('receipt_discount_dollar_form', true)
						.then(function(){
							WindowPopupDiscount('Discount Receipt Dollar')
							.then(function(){
								$("#discount_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#discount_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#discount_field input").select();
								},100)
							})
						})
					}

					$scope.DiscountSecurityAmount = data.Limit;
				})
				$("#dialog-discount-list").jqxWindow('close');
			}else if(DiscountType == "Percent"){
				var postdata ="FunctionButton=DiscountReceiptPercent";
				posData.CheckUserManagerCookie(postdata)
				.success(function(data){
					$scope.DiscountSecurityAmount = data.Limit;
					console.log("DiscountSecurityAmount", data.Limit);
					if(data.prompt){
						$scope.FunctionButton = 'DiscountReceiptPercent';
						NumpadPasscode('discount_receipt_percent_passcode')
						.then(function(){
							WindowPopupPasscode('Discount Receipt Percent')
							.then(function(){
								$("#number_field").focus();
							})
						})
					}else{
						NumpadDiscount('receipt_discount_percent_form')
						.then(function(){
							WindowPopupDiscount('Discount Receipt Percent')
							.then(function(){
								$("#discount_field").jqxNumberInput('focus');
								setTimeout(function(){
									var input = $('#discount_field input')[0];
									if('selectionStart' in input) {
										input.setSelectionRange(0, 0);
									}else{
										var range = input.createTextRange();
										range.collapse(true);
										range.moveEnd('character', 0);
										range.moveStart('character', 0);
										range.select();
									}
									$("#discount_field input").select();
								},100)
							})
						})
					}
					$scope.DiscountSecurityAmount = data.Limit;
				})
				$("#dialog-discount-list").jqxWindow('close');
			}
		}
	})

	/*
	|-----------------------------------------------------------|
	| RECEIPT LINE DISCOUNT LIST CANCEL BUTTON
	|-----------------------------------------------------------|
	*/
	$(document).on('click', '#receipt_line_discount_list .button_q_cancel', function(e){
		e.preventDefault();
		$("#dialog-discount-list").jqxWindow('close');
	})

	$(document).on('click', '#discount_receipt_line_below_cost_yes', function(e){
		e.preventDefault();
		$scope.FunctionButton = "SellBelowCost";
		var postdata ="FunctionButton=SellBelowCost";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'SellBelowCost';
				NumpadPasscode('discount_receipt_line_below_cost_yes2')
				.then(function(){
					WindowPopupPasscode('Sell Below Price')
					.then(function(){
						$("#number_field").focus();
					})
				})
			}else{
				var DiscountAmount = DiscountReceiptBelowCostSellPrice;
				var postdata ="DiscountType="+DiscountType;
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&discountamount="+DiscountAmount;
					postdata+="&discountname="+DiscountName;
					postdata+="&DiscountApply="+DiscountApply;
				posData.ReceiptDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						$("#dialog-numpad-discount").jqxWindow('close');
						PoleDisplayTotal();
					}else{
						$("#dialog-numpad-discount").jqxWindow('close'); 
						//var msg = "Discount must be less than the total amount";
						var msg = data.msg;
						NumpadAlertClose('discount_receipt_alert', msg)
						.then(function(){
							WindowPopupAlert('Receipt Discount Alert');
						})
					}
					$("#sell_below_cost").jqxWindow("close");
					$("#barcode_search").focus();
				})
			}
		})
	})

	$(document).on('submit', '#discount_receipt_line_below_cost_yes2', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						console.log('ooo', $scope.DiscountAmountField);
						var DiscountAmount = $scope.DiscountAmountField;//DiscountReceiptBelowCostSellPrice;
						var postdata ="DiscountType="+DiscountType;
							postdata+="&DiscountUnique="+DiscountUnique;
							postdata+="&discountamount="+DiscountAmount;
							postdata+="&discountname="+DiscountName;
							postdata+="&DiscountApply=No";
						posData.ReceiptDiscount(postdata)
						.success(function(data){
							if(data.success == true){
								load_data(data);
								GlobalItemUnique = {};
								$("#dialog-numpad-discount").jqxWindow('close');
								PoleDisplayTotal();
							}else{
								$("#dialog-numpad-discount").jqxWindow('close'); 
								//var msg = "Discount must be less than the total amount";
								var msg = data.msg;
								NumpadAlertClose('discount_receipt_alert', msg)
								.then(function(){
									WindowPopupAlert('Receipt Discount Alert');
								})
							}
							$("#dialog-numpad-passcode").jqxWindow("close");
							$("#sell_below_cost").jqxWindow("close");
							$("#barcode_search").focus();
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('click', '#discount_receipt_below_cost_no', function(){
		$("#sell_below_cost").jqxWindow('close');
	})

	
	$(document).on('submit', '#receipt_discount_percent_form', function(e){
		e.preventDefault();
		DiscountType = 'Percent';
		if($("#discount_field").val() >= 0){
			DiscountReceiptBelowCostSellPrice = parseFloat($("#discount_field").val()).toFixed(2);

			// var EnterDiscountAmount = $("#discount_field").val();
			// var ReceiptDiscountPercentLimit = parseFloat(EnterDiscountAmount);
			// var ConvertDiscountAmount = ReceiptDiscountPercentLimit / 100;
			// var ReceiptSubTotal = ReceiptDiscountSubTotal;
			// var ReceiptDiscount = (ConvertDiscountAmount * ReceiptSubTotal);
			
			// console.log('ReceiptDiscount', ReceiptDiscount);

			// if(ReceiptDiscount > $scope.DiscountSecurityAmount && $scope.DiscountSecurityAmount != null){
			// 	$scope.DiscountAmountField = EnterDiscountAmount;
			// 	$scope.FunctionButton = 'DiscountReceiptPercent';
			// 	NumpadPasscode('discount_receipt_percent_security_passcode')
			// 	.then(function(){
			// 		WindowPopupPasscode('Discount Receipt Percent ' + ($scope.DiscountSecurityAmount ? '| Limit ' + $scope.DiscountSecurityAmount : ''))
			// 		.then(function(){
			// 			$("#number_field").focus();
			// 		})
			// 	})
			// 	$("#dialog-numpad-discount").jqxWindow('close');

			// 	return;
			// }

			posData.getDiscountReceiptApplied()
			.success(function(resdata){

				if(resdata.result > 0 && $("#discount_field").val() > 0){
					AccessToOpenDiscountReceipt('receipt_discount_percent_form_two', 'Discount receipt percent', $("#discount_field").val(), 'percent');
					$("#dialog-numpad-discount").jqxWindow('close');
				}else{

					var postdata ="&NewPrice="+parseFloat($("#discount_field").val()).toFixed(2);
						postdata+="&DiscountType="+DiscountType;
					posData.DiscountReceiptLineBelowCost(postdata)
					.success(function(data){
						if(data.belowcost){
							populateSellBelowCostWindow(data.html)
							.then(function(){
								WindowBelowCost(data.Description);
							})
							$("#dialog-numpad-discount").jqxWindow('close');
						}else{
							var DiscountAmount = $("#discount_field").val();
							var postdata="DiscountType="+DiscountType;
								postdata+="&DiscountUnique="+DiscountUnique;
								postdata+="&discountamount="+DiscountAmount;
								postdata+="&discountname="+DiscountName;
							posData.ReceiptDiscount(postdata)
							.success(function(data){
								if(data.success == true){
									load_data(data);
									GlobalItemUnique = {};
									$("#dialog-numpad-discount").jqxWindow('close');
									PoleDisplayTotal();
								}else{
									$("#dialog-numpad-discount").jqxWindow('close'); 
									var msg = "Discount must be less than the total amount";
									NumpadAlertClose('discount_receipt_alert', msg)
									.then(function(){
										WindowPopupAlert('Receipt Discount Alert');
									})
								}

								$("#barcode_search").focus();
							})
						}
					})
				}
			})

		}else{
			$("#dialog-numpad-discount").jqxWindow('close'); 
			var msg = "Discount cannot be Negative or Zero value.";
			NumpadAlertClose('discount_receipt_alert', msg)
			.then(function(){
				WindowPopupAlert('Receipt Discount Alert');
			})
		}
	})

	// Receipt Discount Percent Change Discount Button
	$(document).on('submit', '#receipt_discount_percent_form_two', function(e){
		e.preventDefault();
		var EnterDiscountAmount = parseFloat( $("#typed_discount_value").val() ).toFixed(2);
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}

		$scope.DiscountAmountField = EnterDiscountAmount;

		var ConvertDiscountAmount = EnterDiscountAmount / 100;
		var ReceiptTotal = $("#amountdue_total").val();
		var ReceiptDiscount = (ConvertDiscountAmount * ReceiptTotal);
		EnterDiscountAmount = ReceiptDiscount;
		
		if(parseFloat(EnterDiscountAmount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('receipt_change_discount_dollar_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Receipt Percent | New Discount '+ parseFloat(EnterDiscountAmount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}


		DiscountApply = "Yes";
		var postdata ="&NewPrice="+parseFloat( $("#typed_discount_value").val() ).toFixed(2);
			postdata+="&DiscountType=Percent";
			postdata+="&DiscountApply=Yes";
		posData.DiscountReceiptLineBelowCost(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
				$("#discount_content").jqxWindow('close');
			}else{
				var DiscountAmount = $("#typed_discount_value").val();
				var postdata="DiscountType="+DiscountType;
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&discountamount="+DiscountAmount;
					postdata+="&discountname="+DiscountName;
					postdata+="&DiscountApply=Yes";
				posData.ReceiptDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						PoleDisplayTotal();
					}else{
						var msg = "Discount must be less than the total amount";
						NumpadAlertClose('discount_receipt_alert', msg)
						.then(function(){
							WindowPopupAlert('Receipt Discount Alert');
						})
					}

					$("#discount_content").jqxWindow('close');

					$("#barcode_search").focus();
				})
			}
		})
	})

	// Receipt Discount Add Another Discount Button
	$(document).on('click', '#receipt_discount_percent_form_two #_discount_content_sell_price', function(e){
		e.preventDefault();
		var EnterDiscountAmount = parseFloat( $("#typed_discount_value").val() ).toFixed(2);
		if(EnterDiscountAmount == ''){
			EnterDiscountAmount = 0.00;
		}

		console.log("what is this?",EnterDiscountAmount);

		$scope.DiscountAmountField = EnterDiscountAmount;

		var ConvertDiscountAmount = EnterDiscountAmount / 100;
		var ReceiptTotal = $("#amountdue_total").val();
		var ReceiptDiscount = (ConvertDiscountAmount * ReceiptTotal);
		var curReceiptDiscount = $("#ReceiptDiscountView").text();
		ReceiptDiscount = parseFloat(ReceiptDiscount) + parseFloat(curReceiptDiscount);
		
		if(parseFloat(ReceiptDiscount) > parseFloat($scope.DiscountSecurityAmount) && parseFloat($scope.DiscountSecurityAmount) != 0){
			$scope.FunctionButton = 'DiscountItemDollar';
			NumpadPasscode('receipt_change_discount_percent_security_passcode')
			.then(function(){
				WindowPopupPasscode('Discount Receipt Dollar | New Discount '+ parseFloat(ReceiptDiscount).toFixed(2) + ($scope.DiscountSecurityAmount ? ' | Limit ' + $scope.DiscountSecurityAmount : ''))
				.then(function(){
					$("#number_field").focus();
				})
			})
			$("#discount_content").jqxWindow('close');

			return;
		}


		DiscountApply = "No";

		var postdata ="&NewPrice="+parseFloat( $("#typed_discount_value").val() ).toFixed(2);
			postdata+="&DiscountType=Percent";
			postdata+="&DiscountApply=No";

		$scope.DiscountAmountField = parseFloat($("#typed_discount_value").val()).toFixed(2);

		posData.DiscountReceiptLineBelowCost(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
				})
				$("#discount_content").jqxWindow('close');
			}else{
				var DiscountAmount = $("#typed_discount_value").val();
				var postdata="DiscountType="+DiscountType;
					postdata+="&DiscountUnique="+DiscountUnique;
					postdata+="&discountamount="+DiscountAmount;
					postdata+="&discountname="+DiscountName;
					postdata+="&DiscountApply=No";
				posData.ReceiptDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						load_data(data);
						GlobalItemUnique = {};
						PoleDisplayTotal();
					}else{
						var msg = "Discount must be less than the total amount";
						NumpadAlertClose('discount_receipt_alert', msg)
						.then(function(){
							WindowPopupAlert('Receipt Discount Alert');
						})
					}

					$("#discount_content").jqxWindow('close');

					$("#barcode_search").focus();
				})
			}
		})
	})

	$(document).on('submit', '#receipt_change_discount_percent_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){

						if(parseFloat($scope.DiscountAmountField) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0 ){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact your manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');

							return;
						}

						DiscountApply = "No";

						var postdata ="&NewPrice="+parseFloat( $scope.DiscountAmountField ).toFixed(2);
							postdata+="&DiscountType=Percent";
							postdata+="&DiscountApply=No";

						$scope.DiscountAmountField = parseFloat($scope.DiscountAmountField).toFixed(2);

						posData.DiscountReceiptLineBelowCost(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{
								var DiscountAmount = $scope.DiscountAmountField;
								var postdata="DiscountType="+DiscountType;
									postdata+="&DiscountUnique="+DiscountUnique;
									postdata+="&discountamount="+DiscountAmount;
									postdata+="&discountname="+DiscountName;
									postdata+="&DiscountApply=No";
								posData.ReceiptDiscount(postdata)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										GlobalItemUnique = {};
										PoleDisplayTotal();
									}else{
										var msg = "Discount must be less than the total amount";
										NumpadAlertClose('discount_receipt_alert', msg)
										.then(function(){
											WindowPopupAlert('Receipt Discount Alert');
										})
									}

									$("#dialog-numpad-passcode").jqxWindow('close');

									$("#barcode_search").focus();
								})
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$('html').keyup(function(e){
		if(e.keyCode == 46) {
			var SelectedItem = GlobalItemUnique.Unique;
			if(SelectedItem){
				var postdata="ReceiptDetailsUnique="+SelectedItem;
				posData.CheckCompleted(postdata)
				.success(function(data){
					if(data.completed == 4){
						var msg = "Cannot remove Item, please refund instead.";
						NumpadAlertClose ('item_cannot_remove', msg)
						.then(function(){
							WindowPopupAlert('Removing Item')	
						}) 
					}else{
						/*Check Item if exists to item question table*/
						var SelectedItem = GlobalItemUnique.Unique;
						var postDataRemoveItem="Unique="+SelectedItem;
						posData.RemoveItem(postDataRemoveItem)
						.success(function(data){
							if(data.giftcard){
								GiftCardRemoveQ.push(data.remove, data.RemoveItemCheck);
								if(data.TranCode == 'Issue'){ //When Issue then Void Issue
									var msg = 'Void Issue Gift Card '+data.GiftCardNumber+'<br/>'; 
										msg+= 'Amount '+data.GiftCardAmount+'<br/>';
										msg+= '</br>Are you sure?';
									NumpadAlertYesNo('void_issue_gift_card', msg, SelectedItem)
									.then(function(){
										WindowPopupAlertYesNo('Void Issue Gift Card')
										.then(function(){
											$("#use_value").val(SelectedItem);
										});
									})
								}else if(data.TranCode == 'Reload'){ //When Reload then Void Reload
									var msg = 'Void Reload Gift Card '+data.GiftCardNumber+'<br/>'; 
										msg+= 'Amount '+data.GiftCardAmount+'<br/>';
										msg+= '</br>Are you sure?';
									NumpadAlertYesNo('void_reload_gift_card', msg, SelectedItem)
									.then(function(){
										WindowPopupAlertYesNo('Void Reload Gift Card')
										.then(function(){
											$("#use_value").val(SelectedItem);
										});
									})
								}else if(data.TranCode == 'Return'){ //When Return then Void Return
									var msg = 'Void Return Gift Card '+data.GiftCardNumber+'<br/>'; 
										msg+= 'Amount '+data.GiftCardAmount+'<br/>';
										msg+= '</br>Are you sure?';
									NumpadAlertYesNo('void_return_gift_card', msg, SelectedItem)
									.then(function(){
										WindowPopupAlertYesNo('Void Return Gift Card')
										.then(function(){
											$("#use_value").val(SelectedItem);
										});
									})
								}
							}else{
								if(data.success == true){
									if(data.remove == true){
										after_remove_item()
										.done(function(){
											load_data(data);
											GlobalItemUnique = {};
											CheckBalance();
											// PoleDisplayReset();
											PoleDisplayTotal();
										})
									}else if(data.remove == false){
										if(data.RemoveItemCheck == true){
											RemoveItemCheckReasons()
											.then(function(result){
												if(result == true){
													var postdata ="FunctionButton=RemoveItem";
													posData.CheckUserManagerCookie(postdata)
													.success(function(data){
														if(data.prompt){
															$scope.FunctionButton = 'RemoveItem';
															NumpadPasscode('remove_item_passcode')
															.then(function(){
																WindowPopupPasscode('Remove Item')
																.then(function(){
																	$("#number_field").focus();
																})
															})
														}else{
															ViewReasonList('remove_item_accept', 1)
															.then(function(){
																WindowPopupReason();
																$("#dialog-numpad-passcode").jqxWindow('close');
															})
														}
													})
												}else{
													var postdata ="FunctionButton=RemoveItem";
													posData.CheckUserManagerCookie(postdata)
													.success(function(data){
														if(data.prompt){
															$scope.FunctionButton = 'RemoveItem';
															NumpadPasscode('remove_item_passcode')
															.then(function(){
																WindowPopupPasscode('Remove Item')
																.then(function(){
																	$("#number_field").focus();
																})
															})
														}else{
															var ReceiptDetailsUnique = GlobalItemUnique.Unique;
															var postdata ="ReceiptDetailsUnique="+ReceiptDetailsUnique;
																postdata+="&ReturnUnique=0";
															posData.RemoveItemReason(postdata)
															.success(function(data){
																if(data.success == true){
																	load_data(data);
																	PoleDisplay(ReceiptDetailsUnique);
																	GlobalItemUnique = {};
																	$('#dialog-reason-list').jqxWindow('close');
																}else{
																	$.blockUI({ css: { 
																		border: '2px solid #fff',
																		padding: '15px', 
																		backgroundColor: '#210e66', 
																		'-webkit-border-radius': '10px', 
																		'-moz-border-radius': '10px', 
																		opacity: 1, 
																		color: '#fff',
																		fontSize: '20px' 
																	}, message: data.TranCode + ' process please wait..' });
	
																	postdata+="GCProcess="+data.TranCode;
																	if(data.TranCode == 'Issue'){
																		posData.GiftCardVoidIssue(postdata)
																		.success(function(gcdata){
																			if(gcdata.success){
																				load_data(gcdata);
																				PoleDisplay(ReceiptDetailsUnique);
																				// LoadOrderedItemList();
																				// LoadTotals()
																				// .then(function(){
																				// 	POSTotal();
																				// })
																				// LoadTax();
																				// LoadEBT();
																				// LoadDiscount();
																				// LoadPayments();
																				// LoadChange();
																				// CheckReceiptStatus();
																				// GlobalItemUnique = {};
																				// ShowPoints();
																				$('#dialog-reason-list').jqxWindow('close');
																			}else{
																				var msg = data.TranResponse;
																				NumpadAlertClose('cancel_gc_response', msg)
																				.then(function(){
																					WindowPopupAlert('Cancel Sale')
																				})
																			}
																			setTimeout($.unblockUI, 100); 
																		})
																	}else if(data.TranCode == 'Reload'){
																		posData.GiftCardVoidReload(postdata)
																		.success(function(gcdata){
																			if(gcdata.success){
																				PoleDisplay(ReceiptDetailsUnique);
																				LoadOrderedItemList();
																				LoadTotals()
																				.then(function(){
																					POSTotal();
																				})
																				LoadTax();
																				LoadEBT();
																				LoadDiscount();
																				LoadPayments();
																				LoadChange();
																				CheckReceiptStatus();
																				GlobalItemUnique = {};
																				ShowPoints();
																				$('#dialog-reason-list').jqxWindow('close');
																			}else{
																				var msg = data.TranResponse;
																				NumpadAlertClose('cancel_gc_response', msg)
																				.then(function(){
																					WindowPopupAlert('Cancel Sale')
																				})
																			}
																			setTimeout($.unblockUI, 100); 
																		})
																	}else if(data.TranCode == 'Return'){
																		posData.GiftCardVoidReload(postdata)
																		.success(function(gcdata){
																			if(gcdata.success){
																				PoleDisplay(ReceiptDetailsUnique);
																				LoadOrderedItemList();
																				LoadTotals()
																				.then(function(){
																					POSTotal();
																				})
																				LoadTax();
																				LoadEBT();
																				LoadDiscount();
																				LoadPayments();
																				LoadChange();
																				CheckReceiptStatus();
																				GlobalItemUnique = {};
																				ShowPoints();
																				$('#dialog-reason-list').jqxWindow('close');
																			}else{
																				var msg = data.TranResponse;
																				NumpadAlertClose('cancel_gc_response', msg)
																				.then(function(){
																					WindowPopupAlert('Cancel Sale')
																				})
																			}
																			setTimeout($.unblockUI, 100);
																		})
																	}
																}
															})
														}
													})
												}
											})
										}else{
											var msg = "Item already sold, please return item instead.";
											NumpadAlertOk('item_printed_alert', msg)
											.then(function(){
												WindowPopupAlert ('Remove Item Alert')	
											})
										}
									}
								}
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						}).then(function(){
							$("#barcode_search").focus();
						})
					}
				})
			}else{
				var msg = "Please select item first.";
				NumpadAlertOk ('item_printed_alert', msg)
				.then(function(){
					WindowPopupAlert ('Remove Item Alert')	
				})
			}
		}
	})

	$("#pos_alert_notification").on('close', function(event){
		$("#notification_keypress_script").remove();
		$("#pos_alert_notification_container").html('');
		var InventoryWindow = $("#search-inventory-item-dialog").length;
		if(InventoryWindowStatus == 0 || InventoryWindow != 0){
			KeyPress(event);
		}else if(InventoryWindowStatus == 1){
			$("#search_inventory_keypress").append(
				'<div id="inventory_keypress_script" onkeydown="KeyPress(event)"></div>'+
				'<script type="text/javascript" id="inventory_keypress_script">'+
					'function KeyPress(e) {'+
						'var evtobj = window.event? event : e;'+
						'if (evtobj.keyCode == 66 && evtobj.ctrlKey) {	'+
							'$("#pos_inventory_search_text").focus();'+
							'InventoryScan = true'+
						'}'+
					'}'+
					'document.onkeydown = KeyPress;'+
				'</script>'
			);
		}
	})

	var InventoryWindowStatus = 1;
	var populatePOSAlertNotification = function(form_name, msg){
		var def = $.Deferred();
		setTimeout(function(){
			$("#pos_alert_notification").append('<div id="pos_alert_notification_container" style="background: #144766; color:#EEE;"></div>');		
			$("#pos_alert_notification_container").html(
				'<script type="text/javascript" id="notification_keypress_script">'+
					'function KeyPress(a) {'+
						'var evtobj = window.event? event : a;'+
						'if(evtobj.keyCode == 66 && evtobj.ctrlKey){'+
							// 'var sound = document.getElementById("audio");'+
							// 'sound.play();'+
							// 'setTimeout(function(){'+
							// '	sound.pause();'+
							// '	sound.currentTime = 0;'+
							// '},400);'+
						'}'+
					'}'+
					'document.onkeydown = KeyPress;'+
				'</script>'
			);
			$("#pos_alert_notification_container").append(
				'<form id="'+form_name+'">'+
					'<input type="text" id="barcode_scan_field" class="hdfield" value="1" style="display:none;" />'+
					'<h4>'+msg+'</h4>'+
					'<br/>'+
					'<div id="keyboard_pos_alert_notifcation"></div>'+
					'<input type="hidden" id="use_value" />'+
					'<input type="hidden" id="use_value2" />'+
				'</form>'
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var NumpadPOSAlertNotication = function(form, msg){
		var def = $.Deferred();
		populatePOSAlertNotification(form, msg)
		.then(function(){
			$('#keyboard_pos_alert_notifcation').hdkeyboard({
			  layout: "alert_ok",
			  input: $('#barcode_scan_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	var WindowPopupPOSAlertNotifcation = function(header_text){
		var def = $.Deferred();
		setTimeout(function(){
			$("#pos_alert_notification").jqxWindow({
				height: 245,
				minWidth: 350,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0
			});
			$('#pos_alert_notification').jqxWindow('setTitle', header_text);
			$('#pos_alert_notification').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	$(document).on('click', '#keyboard_pos_alert_notifcation', function(e){
		e.preventDefault();
		$("#pos_inventory_search_text").focus();
		$("#pos_inventory_search_text").select();
	})

	$("#pos_item_check_list").on('close', function(e){
		e.preventDefault();
		$('#pos_item_check_list_container').html('');
	})
	var populateItemCheckList = function(form_name){
		var def = $.Deferred();
		$("#pos_item_check_list").append(
			'<div id="pos_item_check_list_container" style="background: #144766; color:#EEE; overflow:hidden; margin:0; padding:0;"></div>'
		);
		$("#pos_item_check_list_container").html('');
		posData.ItemCheckList()
		.success(function(data){
			$("#pos_item_check_list_container").append(data.html);
			def.resolve();
		})
		return def.promise();
	}

	var WindowPopupItemCheckList = function(header_text){
		var def = $.Deferred();
		setTimeout(function(){
			var GetTotalsHeight = $(".totals").height();
			var GiftItemWidth = $(".leftpanel").width();
			var GiftItemHeight = $(".leftpanel").height();
			var SetGiftItemHeight = (GiftItemHeight);
			
			$("#pos_item_check_list").jqxWindow({
				height: SetGiftItemHeight,
				minWidth: GiftItemWidth,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: 0, y: 50 }
			});
			$('#pos_item_check_list').jqxWindow('setTitle', header_text);
			$('#pos_item_check_list').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var NumpadItemCheckList = function(form, msg){
		var def = $.Deferred();
		populateItemCheckList(form, msg)
		.then(function(){
			var GetTotalsHeight = $(".totals").height();
			var GiftItemWidth = $(".leftpanel").width();
			var GiftItemHeight = $(".leftpanel").height();
			var SetGiftItemHeight = (GiftItemHeight);
			$('.gift-item-list-handler').css({"min-height": (SetGiftItemHeight - 215), "height":(SetGiftItemHeight - 215)})
			def.resolve();
		});
		return def.promise();
	}

	$rootScope.$on("CallNumpadItemCheckList", function(){
		$scope.popupItemCheckList();
	})

	/*
	|---------------------------------------------------------------------|
	|Extend function to another controller
	|---------------------------------------------------------------------|
	*/
	$scope.popupItemCheckList = function(){
		$("#GiftReceiptfunction").attr("disabled",true);
		NumpadItemCheckList('item_check_list', '')
		.then(function(){
			WindowPopupItemCheckList('Gift Item List');
			$("#GiftReceiptfunction").attr("disabled",false);
		})
	}

	/* 
	|---------------------------------------------------------------------|
	|Print Gift Item Receipt
	|---------------------------------------------------------------------|
	*/
	$scope.GiftReceipt = function(){
		posData.ReceiptGiftItemStatus()
		.success(function(data){
			if(data.Status == 4){
				$("#GiftReceiptfunction").attr("disabled",true);
				NumpadItemCheckList('item_check_list', '')
				.then(function(){
					WindowPopupItemCheckList('Gift Item List');
					$("#GiftReceiptfunction").attr("disabled",false);
				})
			}else{
				var msg = 'Payment is required before print Gift Receipt';
				NumpadAlertClose('cannot_perform_task', msg)
				.then(function(){
					WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					$(".print_item_multiple_fn").attr("disabled", false);
				})
			}
		})
		
	}

	$(document).on('click', '#gift_item_close', function(){
		$('#pos_item_check_list').jqxWindow('close');
	})

	$(document).on("click", "#gift_item_print", function(){
		var GiftItemArr = [];
		$('input[type=checkbox][name=giftitem]:checked').each(function(){
			var GiftItemSelected = $(this).attr('id');
			var ParseReceiptDetailsUnique 	= GiftItemSelected.split("=")[0];	
			var ParseReceiptItemUnique 		= GiftItemSelected.split("=")[1];	
			GiftItemArr.push(ParseReceiptDetailsUnique);
		})
		if(GiftItemArr.length > 0){
			var postdata = "gift_item_selected="+JSON.stringify(GiftItemArr);
			posData.PrintGiftReceipt(postdata)
			.success(function(data){
				
			})
		}else{
			var msg = 'Please check item(s) first';
			NumpadAlertClose('cannot_perform_task', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
				$(".print_item_multiple_fn").attr("disabled", false);
			})
		}
	});

	/*
	|---------------------------------------------------------------------------|
	| Price Change with Reason
	|---------------------------------------------------------------------------|
	*/
	$("#pos_price_change_reason").on('close', function(){
		$("#pos_price_change_reason_container").remove();
		myNumber = 0;
	})
	var PopulatePriceChangeReason = function(){
		var def = $.Deferred();
		var PCRDUnique 		= ItemInformation[0];
		var PCItemUnique	= ItemInformation[1];
		var PCDescription	= ItemInformation[2];
		var PCListPrice 	= ItemInformation[3];
		var PCDiscount 		= ItemInformation[4];
		$("#pos_price_change_reason").append('<div id="pos_price_change_reason_container" style="background: #144766; color:#EEE;"></div>');
		$("#pos_price_change_reason_container").html('');
		$("#pos_price_change_reason_container").append(
			'<div style="width:100%; font-size: 1.5em;" id="pricechange_price">Description: '+PCDescription+'</div>'+
			'<div style="width:100%; font-size: 1.5em;" id="pricechange_regprice">Reg. Price: '+parseFloat(PCListPrice).toFixed(2)+'</div>'+
			'<div style="width:100%; font-size: 1.5em;" id="pricechange_discount">Discount: '+parseFloat(PCDiscount).toFixed(2)+'</div>'+
			'<div id="PriceChangeReasonList" style="float:left; width:45%; margin:10px; color: #000;"></div>'+
			'<div id="payout-numpad-container" style="float:left; width:50%; margin:10px;">'+
			'	<form id="price_change_reason_form">'+
			'		<fieldset>'+
			'		<legend style="margin-bottom:0 !important;">New Price</legend>'+
			'			<div id="price_change_number_field" class="hdfield"></div>'+
			'   		<div id="price_change_reason_numpad"></div>'+
			'		</fieldset>'+
			'	</form>'+
			'</div>'
		);

		$("#price_change_number_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false,  decimalDigits: $("#DecimalsPrice").val()});
		$('#price_change_number_field').on('change', function (event) {
			var value = event.args.value;
			var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
			myNumber = value;
		}); 

		// $("#test_price_change_input").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val()});
		// $('#test_price_change_input').on('change', function (event) {
		// 	var value = event.args.value;
		// 	var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
		// 	myNumber = value;
		// }); 

		$("#pos_price_change_reason_container").append(
			DisplayNumpadPriceChangeReason()
		);

		var postdata ="ReceiptDetailsUnique="+GlobalItemUnique.Unique;
		posData.PriceChangeReason(postdata)
		.success(function(data){
			$("#PriceChangeReasonList").append(data.html);
			$("#PriceChangeReasonList").append(
				'<br/>'+
				'<div id="price_change_reason_note" style="float:left; width:100%;">'+
				'	<fieldset>'+
				'	<legend style="margin-bottom:0 !important;">Note</legend>'+
				'		<textarea id="price_change_reason_note_input" style="color:#000; width: 100%;" row="15">'+data.Notes+'</textarea>'+
				'	</fieldset>'+
				'</div>'
			);
		})

		$("#pos_price_change_reason_container").append(
			'<div id="price_change_reason_function_container" style="float:left; width:100%;">'+
			'	<form id="price_change_reason_form">'+
			// '		<input type="text" id="number_field" class="hdfield" style="display:none;">'+
			'		<div id="price_change_reason_function"></div>'+
			'	</form>'+
			'</div>'
		);

		def.resolve();
		return def.promise();
	}

	var PriceChangeReasonWindowProperties = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#pos_price_change_reason").jqxWindow({
				title: 'Price Change Reason',
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: 0, y: 0 }
			});
			$('#pos_price_change_reason').jqxWindow('open');
			def.resolve();
		},100);
		return def.promise();
	}

	var DisplayNumpadPriceChangeReason = function(){
		var def = $.Deferred();
		$('#price_change_reason_numpad').numeric_numpad({
			layout: "numeric",
			input: $('#price_change_number_field')
		});
		setTimeout(function(){
			def.resolve();
		},100);
		return def.promise();
	}

	var PriceChangeViewPage = function(){
		var def = $.Deferred();
		PopulatePriceChangeReason()
		.then(function(){
			$('#price_change_reason_function').numeric_numpad({
				layout: "PriceChange",
				input: $('#number_field')
			});
			def.resolve();
		});
		return def.promise();
	}

	var ParsePriceChangeReasonUnique = '';
	var ParsePriceChangeReason = '';
	var PriceChangeNewAmount = '';
	var PriceChangeNote = '';
	$(document).on('submit', '#price_change_reason_form', function(e){
		e.preventDefault();
		var PriceChangeSelectedReason = [];

		$('input[type=radio][name=group1]:checked').each(function(){
			var PriceChangeReasonSelected = $(this).attr('id');
			ParsePriceChangeReasonUnique 	= PriceChangeReasonSelected.split("=")[0];	
			ParsePriceChangeReason 			= PriceChangeReasonSelected.split("=")[1];
			ParsePriceChangeDiscType 		= PriceChangeReasonSelected.split("=")[2];	
			PriceChangeSelectedReason.push(ParsePriceChangeReasonUnique);
		})

		if(PriceChangeSelectedReason.length > 0){
			PriceChangeNewAmount = $("#price_change_number_field").val();
			PriceChangeNote = $("#price_change_reason_note_input").val();

			var Unique = GlobalItemUnique.Unique;
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+PriceChangeNewAmount;
				postdata+='&DiscountType='+ParsePriceChangeDiscType;	
			posData.SellBelowCostPage(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var postdata ='Unique='+Unique;
						postdata+='&PriceChangeReasonUnique='+ParsePriceChangeReasonUnique;	
						postdata+="&PriceChangeReason="+ParsePriceChangeReason;
						postdata+="&NewPrice="+PriceChangeNewAmount;
						postdata+="&PriceChangeNote="+PriceChangeNote;
					//if(PriceChangeNewAmount){
						posData.PriceChange(postdata)
						.success(function(data){
							load_data(data);
							PoleDisplay(Unique);
							GlobalItemUnique = {};
						})
					//}
				}
				$("#dialog-numpad-change-price").jqxWindow('close');
			})
			$("#pos_price_change_reason").jqxWindow('close');
		}else{
			var msg = "Select Reason Type first";
			NumpadAlertClose('price_change_alert', msg)
			.then(function(){
				WindowPopupAlert('Change Price Info');
			})
		}
	})

	$(document).on('click', '#price_change_reason_form .price_change_okay', function(e){
		e.preventDefault();
		var PriceChangeSelectedReason = [];
		
		$('input[type=radio][name=group1]:checked').each(function(){
			var PriceChangeReasonSelected = $(this).attr('id');
			ParsePriceChangeReasonUnique 	= PriceChangeReasonSelected.split("=")[0];	
			ParsePriceChangeReason 			= PriceChangeReasonSelected.split("=")[1];
			ParsePriceChangeDiscType 		= PriceChangeReasonSelected.split("=")[2];	
			PriceChangeSelectedReason.push(ParsePriceChangeReasonUnique);
		})

		if(PriceChangeSelectedReason.length > 0){
			PriceChangeNewAmount = $("#price_change_number_field").val();
			PriceChangeNote = $("#price_change_reason_note_input").val();
			
			var Unique = GlobalItemUnique.Unique;
			var postdata ="ReceiptDetailsUnique="+Unique;
				postdata+="&NewPrice="+PriceChangeNewAmount;
				postdata+='&DiscountType='+ParsePriceChangeDiscType;	
			posData.SellBelowCostPage(postdata)
			.success(function(data){
				if(data.belowcost){
					populateSellBelowCostWindow(data.html)
					.then(function(){
						WindowBelowCost(data.Description);
					})
				}else{
					var postdata ='Unique='+Unique;
						postdata+='&PriceChangeReasonUnique='+ParsePriceChangeReasonUnique;	
						postdata+="&PriceChangeReason="+ParsePriceChangeReason;
						postdata+="&NewPrice="+PriceChangeNewAmount;
						postdata+="&PriceChangeNote="+PriceChangeNote;
					if(PriceChangeNewAmount){
						posData.PriceChange(postdata)
						.success(function(data){
							load_data(data);
							PoleDisplay(Unique);
							GlobalItemUnique = {};
						})
					}
				}
				$("#dialog-numpad-change-price").jqxWindow('close');
			})

			$("#pos_price_change_reason").jqxWindow('close');
		}else{
			var msg = "Select Reason Type first";
			NumpadAlertClose('price_change_alert', msg)
			.then(function(){
				WindowPopupAlert('Change Price Info');
			})
		}
	})

	$(document).on('click', '.price_change_cancel', function(e){
		e.preventDefault();
		$("#pos_price_change_reason").jqxWindow('close');
		myNumber = '';
	})

	var populateNumpadWindow = function(){
		$("#pos_numeric_numpad").append('<div id="pos_numeric_numpad_container" style="background: #144766; color:#EEE;"></div>');
		$("#pos_price_change_reason_container").html('');
	}
	
	$(document).on('click', '.price_change_radio', function(){
		//$("#price_change_number_field input").select();
		$("#price_change_number_field").jqxNumberInput('focus');
		ShouldChange = false;
		//myNumber = '';
	});

	$("#barcode_search").on("click", function(e){
		e.preventDefault();
		var VirtualKeyboard = $("POSVirtualKeyboard").val();
		if(VirtualKeyboard == 1){
			NumpadKeyboard('enter_barcode_search_inventory', 'Enter Description')
			.then(function(){
				WindowPopupKeyboard('Search Inventory')
				.then(function(){
					var searchInput = $('#search_field');
					var strLength = searchInput.val($("#barcode_search").val()).length * 25;
					searchInput[0].setSelectionRange(strLength, strLength);
					searchInput.focus();
				})
			})
		}
	})

	

	$(document).on('submit', '#enter_barcode_search_inventory', function(e){
		e.preventDefault();
		var ItemSearchInventory = $("#search_field").val();
		$("#barcode_search").val(ItemSearchInventory);
		$scope.ItemSearch = ItemSearchInventory;
		if($scope.ItemSearch == null){
			PlaySound();
		}else{
			var ItemSearch = $scope.ItemSearch;
			var postData ="SearchItem="+ItemSearch;
				postData+="&SearchOption="+ $("#ItemSearchOption").val();
				postData+="&BarcodeScan="+InventoryScan;
			posData.SearchInventoryItem(postData)
			.success(function(data){
				if(data.Count > 1){
					WindowPopupItemInventory().then(function(){
						$('#inventory-search').jqxGrid('showloadelement');
						$("#search_inventory_keypress").append(
							'<div id="inventory_keypress_script" onkeydown="KeyPress(event)"></div>'+
							'<script type="text/javascript" id="inventory_keypress_script">'+
								'function KeyPress(e) {'+
									'var evtobj = window.event? event : e;'+
									'if (evtobj.keyCode == 66 && evtobj.ctrlKey) {'+
										'$("#pos_inventory_search_text").focus();'+
										'InventoryScan = true'+
									'}'+
								'}'+
								'document.onkeydown = KeyPress;'+
							'</script>'
						);
						setTimeout(function(){
							$(".focusme").focus();
							$(".focusme").val($scope.ItemSearch);
							$scope.ItemSearch = null;

							var ResoWidth 	= $("#search-inventory-item-dialog").width();
							var ResoHeight 	= $("#search-inventory-item-dialog").height();
							var SearchBtn 	= $("#inventory-search-button-container").height();
							var ComputeHeight		= ResoHeight - 70;
							var UseHeight			= ComputeHeight - SearchBtn;
							var ComputeDisplayRow 	= Math.ceil(ComputeHeight / 30);
							var source = {
								dataType: "json",
								dataFields: InventorySearchTypes[0],
								localdata: data.InventoryData
							}
							var dataAdapter = new $.jqx.dataAdapter(source);

							$("#inventory-search").jqxGrid({
								height: UseHeight,
								pageSize: ComputeDisplayRow,
								source: dataAdapter,
							})
							var POSInventoryItemSearch = $("#barcode_search").val();
							$("#pos_inventory_search_text").val(POSInventoryItemSearch);
							$("#pos_inventory_search_text").focus();
							$("#pos_inventory_search_text").select();
						}, 500);
					})
				}else if(data.Count == 1){
					var rows = data.InventoryData;
					var Description = '';
					var POSItemCustom1 = $("#POSItemCustom1").val();
					if(rows.Custom1){
						if(POSItemCustom1 == 1){
							Description = rows.Description+' '+rows.Custom1;
						}else{
							Description = rows.Description;
						}
					}else{
						Description = rows.Description;
					}
					var postDataAddItem="ItemId="+rows.Unique;
					if($scope.WarningStock == 1){
						var POSLocation = $("#POSLocation").val();
						var ItemQtyStock = 0;
						if(POSLocation == 1){
							ItemQtyStock == rows.Quantity1;
						}else if(POSLocation == 2){
							ItemQtyStock == rows.Quantity2;
						}else if(POSLocation == 3){
							ItemQtyStock == rows.Quantity3;
						}else if(POSLocation == 4){
							ItemQtyStock == rows.Quantity4;
						}else if(POSLocation == 5){
							ItemQtyStock == rows.Quantity5;
						}

						//Check Quantity if Item has stock
						WarningStockArray.push(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
						posData.CheckQuantity(postDataAddItem)
						.success(function(CheckQty){
							if(CheckQty.Qty > 0){
								if(rows.MinimumAge > 0){
									NumpadAgeVerify(rows.MinimumAge)
									.then(function(){
										AgeVerifyTempArr.push(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
										WindowPopupAgeNotification()
										.then(function(){
											$("#age_field").focus();
										})
									})
									$scope.ItemSearch = '';
								}else{
									if(rows.GiftCard == 1){
										//-->Populate Window Popup (Internal)
										GiftCardPoints = rows.Points;
										GiftCardForm('sell_gift_card', rows.Unique, rows.SellPrice)
										.then(function(){
											WindowPopupGiftCardForm('Gift Card')
											.then(function(){
												$("#gift_card_number").focus();
											})
										})
										$("#barcode_search").val('');
										$scope.ItemSearch = '';
									}else if(rows.GiftCard == 2){
										//-->Populate Window Popup (External)
										GiftCardPoints = rows.Points;
										GiftCardForm2('sell_gift_card_datacap', rows.Unique, rows.SellPrice)
										.then(function(){
											WindowPopupGiftCardForm2('Gift Card')
											.then(function(){
												$("#gift_card_number2").focus();
											})
										})
										$("#barcode_search").val('');
										$scope.ItemSearch = '';
									}else{

										Qquestion = rows.Question;
										PriceQty.push(rows.PriceQtyArr);
										PriceQtyItemArray.push(rows.PriceQtyArr);
										ProcessAddItemMenu(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
										ModifierArray.push({
											"Unique" : rows.Unique, 
											"Description" : Description, 
											"Price" : rows.SellPrice, 
											"Quantity" : 1, 
											"Points" : rows.Points, 
											"Cost" : rows.Cost,  
											"Cost_Extra" : rows.Cost_Extra, 
											"Cost_Freight" : rows.Cost_Freight, 
											"Cost_Duty" : rows.Cost_Duty, 
											"Custom1" : rows.Custom1, 
											"Item" : rows.Item, 
											"EBT" : rows.EBT, 
											"Price1" : rows.price1, 
											"ListPrice" : rows.ListPrice
										});
										OpenItemArray.push({
											"Unique" : rows.Unique, 
											"Description" : Description, 
											"Price" : rows.SellPrice, 
											"Quantity" : 1, 
											"Points" : rows.Points, 
											"Cost" : rows.Cost,  
											"Cost_Extra" : rows.Cost_Extra, 
											"Cost_Freight" : rows.Cost_Freight, 
											"Cost_Duty" : rows.Cost_Duty, 
											"Custom1" : rows.Custom1, 
											"Item" : rows.Item, 
											"EBT" : rows.EBT, 
											"Price1" : rows.price1, 
											"ListPrice" : rows.ListPrice
										});
									}
								}
							}else{
								PlaySound();
								$scope.ItemSearch = null;
								$("#barcode_search").attr("disabled", true);
								var msg = (rows.Description != '' ? rows.Description : rows.Item)+"<br/>";
									msg+= "Quantity "+parseFloat(ItemQtyStock)+"<br/>";
									msg+= "Do you still want to Sell?";
								NumpadAlertYesNo('add_item_without_stock_menu', msg)
								.then(function(){
									$("#use_value").val(rows.Unique);
									$("#use_value2").val(rows.Question);
									WindowPopupAlertYesNo('Add New Item')
								})
							}
						});
					}else{
						if(rows.MinimumAge > 0){
							NumpadAgeVerify(rows.MinimumAge)
							.then(function(){
								AgeVerifyTempArr.push(rows.Unique, rows.PromptDescription, rows.PromptPrice,  rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
								WindowPopupAgeNotification()
								.then(function(){
									$("#age_field").focus();
								})
							})
							$scope.ItemSearch = '';
						}else{
							if(rows.GiftCard == 1){
								//-->Populate Window Popup (Internal)
								GiftCardPoints = rows.Points;
								GiftCardForm('sell_gift_card', rows.Unique, rows.SellPrice)
								.then(function(){
									WindowPopupGiftCardForm('Gift Card')
									.then(function(){
										$("#gift_card_number").focus();
									})
								})
								$scope.ItemSearch = '';
							}else if(rows.GiftCard == 2){
								//-->Populate Window Popup (External)
								GiftCardPoints = rows.Points;
								GiftCardForm2('sell_gift_card_datacap', rows.Unique, rows.SellPrice)
								.then(function(){
									WindowPopupGiftCardForm2('Gift Card')
									.then(function(){
										$("#gift_card_number2").focus();
									})
								})
								$scope.ItemSearch = '';
							}else{
								Qquestion = rows.Question;
								PriceQty.push(rows.PriceQtyArr);
								PriceQtyItemArray.push(rows.PriceQtyArr);
								ProcessAddItemMenu(rows.Unique, rows.PromptDescription, rows.PromptPrice, rows.Item, rows.Part, Description, rows.SellPrice, rows.Weigh, rows.Points, rows.Cost, rows.Cost_Extra, rows.Cost_Freight, rows.Cost_Duty, rows.Custom1, rows.Item, rows.EBT, rows.price1, rows.ListPrice, rows.MinimumAge, rows.GiftCard);
								ModifierArray.push({
									"Unique" : rows.Unique, 
									"Description" : Description, 
									"Price" : rows.SellPrice, 
									"Quantity" : 1, 
									"Points" : rows.Points, 
									"Cost" : rows.Cost,  
									"Cost_Extra" : rows.Cost_Extra, 
									"Cost_Freight" : rows.Cost_Freight, 
									"Cost_Duty" : rows.Cost_Duty, 
									"Custom1" : rows.Custom1, 
									"Item" : rows.Item, 
									"EBT" : rows.EBT, 
									"Price1" : rows.price1, 
									"ListPrice" : rows.ListPrice
								});
								OpenItemArray.push({
									"Unique" : rows.Unique, 
									"Description" : Description, 
									"Price" : rows.SellPrice, 
									"Quantity" : 1, 
									"Points" : rows.Points, 
									"Cost" : rows.Cost,  
									"Cost_Extra" : rows.Cost_Extra, 
									"Cost_Freight" : rows.Cost_Freight, 
									"Cost_Duty" : rows.Cost_Duty, 
									"Custom1" : rows.Custom1, 
									"Item" : rows.Item, 
									"EBT" : rows.EBT, 
									"Price1" : rows.price1, 
									"ListPrice" : rows.ListPrice
								});
							}
						}
					}
				}else{
					var msg ='<h3 style="margin:0; padding:0;">Item not found</h3><br/>';
						msg+='<h3 style="color: #2ECC71;">'+$("#barcode_search").val()+'</h3><br/>';
						//msg+='<h4>Would you like to add it now?</h4>';
					NumpadPOSAlertNotication('item_search_add_yes', msg)
					.then(function(){
						WindowPopupPOSAlertNotifcation('Search Item Result')	
						.then(function(){
							var ResoWidth 	        = $("#right_panel_width").width();
							var ResoHeight 	        = $("#right_panel_width").height();
							var UseWidth 			= ResoWidth - 260;
							var UseHeight 			= ResoHeight + 260;
							var OrderListWidth 		= ($(".orderedlist").width() + 3);
							$("#pos_alert_notification").jqxWindow({
								height: UseHeight,
								width: UseWidth,
								position: { x: OrderListWidth, y: 50 }
							})
							$('#pos_alert_notification').jqxWindow('focus');
						})
					})
					PlaySound();
					$scope.ItemSearch = '';
				}//-->End if
				InventoryScan = false;
			})
		}//-->End if Item Search is empty.
		$scope.ItemSearch = '';
		$('#dialog-numpad-keyboard').jqxWindow('close');
		$("#barcode_search").focus();
	})

	$(document).on('click', '#pos_inventory_search_text', function(e){
		e.preventDefault();
		var VirtualKeyboard = $("#POSVirtualKeyboard").val();
		if(VirtualKeyboard == 1){
			NumpadKeyboard('enter_item_search_inventory', 'Enter Description')
			.then(function(){
				WindowPopupKeyboard('Search Inventory')
				.then(function(){
					var searchInput = $('#search_field');
					var strLength = searchInput.val($("#pos_inventory_search_text").val()).length * 25;
					searchInput[0].setSelectionRange(strLength, strLength);
					searchInput.focus();
				})
			})
		}
	})

	$(document).on('submit', '#enter_item_search_inventory', function(e){
		e.preventDefault();
		var ItemSearchInventory = $("#search_field").val();
		$("#pos_inventory_search_text").val(ItemSearchInventory);
		pos_inventory_search_item_function(ItemSearchInventory);
		$('#dialog-numpad-keyboard').jqxWindow('close');
	})

	$(document).on('click', '#price_change_reason_note_input', function(e){
		e.preventDefault();
		NumpadKeyboard('enter_price_change_note', 'Enter Note')
		.then(function(){
			WindowPopupKeyboard('Note')
			.then(function(){
				var searchInput = $('#search_field');
				var strLength = searchInput.val($("#price_change_reason_note_input").val()).length * 25;
				searchInput[0].setSelectionRange(strLength, strLength);
				searchInput.focus();
			})
		})
	})

	$(document).on('submit', '#enter_price_change_note', function(e){
		var PriceChangeNote = $("#search_field").val();
		$("#price_change_reason_note_input").val(PriceChangeNote);
		$('#dialog-numpad-keyboard').jqxWindow('close');
	})

	$("#ItemSearchOptionOnForm").jqxComboBox({theme: "darkblue", displayMember: "Field", valueMember: "Label",  height: 32, width: 130});

	$("#ItemSearchOption").jqxComboBox({theme: "darkblue", displayMember: "Field", valueMember: "Label",  height: 32, width: '17%'});

	var ItemSearchOptionList = function(){
		posData.ItemSearchOptionList()
		.success(function(data){
			var source = {
				datatype: "json",
				datafields: [
					{ name: 'Field' },
					{ name: 'Label' }
				],
				localdata: data.List,
				async: false
			};
			var dataAdapter = new $.jqx.dataAdapter(source);
			$("#ItemSearchOption").jqxComboBox({selectedIndex: 0, source: dataAdapter });
			$("#ItemSearchOptionOnForm").jqxComboBox({selectedIndex: 0, source: dataAdapter });
			$("#ItemSearchOption").jqxComboBox('selectItem', data.Default ); 
			$("#ItemSearchOptionOnForm").jqxComboBox('selectItem', data.Default );
			setTimeout(function(){
				$("#barcode_search").focus();
			},100)	 
		})
	}
	ItemSearchOptionList();

	$('#ItemSearchOption').on('select', function (event) {
		var args = event.args;
		if (args) {
			// index represents the item's index.                       
			var index = args.index;
			var item = args.item;
			// get item's label and value.
			var label = item.label;
			var value = item.value;
			var type = args.type; // keyboard, mouse or null depending on how the item was selected.
			setTimeout(function(){
				$("#barcode_search").focus();
			},100)
		}
	}); 

	$('#ItemSearchOptionOnForm').on('select', function (event) {
		var args = event.args;
		if (args) {
			// index represents the item's index.                       
			var index = args.index;
			var item = args.item;
			// get item's label and value.
			var label = item.label;
			var value = item.value;
			var type = args.type; // keyboard, mouse or null depending on how the item was selected.
			setTimeout(function(){
				$("#pos_inventory_search_text").focus();
			},100)
		}
	});

	/*
	|-----------------------------------------------------------------------------|
	| Table Custome Count
	|-----------------------------------------------------------------------------|
	*/
	$("#customer_count_numpad").on('close', function(e){
		e.preventDefault();
		$("#customer_count_numpad_container").html('');
	})
	var populateNumpadCustomerCount = function(form_name, title){
		var def = $.Deferred();
		setTimeout(function(){
			$("#customer_count_numpad").append('<div id="customer_count_numpad_container" style="background: #144766; color:#EEE;"></div>');
			$("#customer_count_numpad_container").html('');
			$("#customer_count_numpad_container").append('<h4 style="text-align:center;">'+title+'</h4>');
			$("#customer_count_numpad_container").append(
				'<form id="'+form_name+'">'+
					'<div id="quantity_field" class="hdfield"></div>'+
					'<div id="keyboard_customer_count"></div>'+
				'</form>'
			);
			$("#quantity_field").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: 0 });
			$('#quantity_field').on('change', function (event){
				var value = event.args.value;
				var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
				myNumber = value;
			}); 
			def.resolve();
		},100);
		return def.promise();
	}
	
	var WindowPopupCustomerCount = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var ParentWidth = $("#wrapper").width();
			var ComputeWidth = (ParentWidth / 2);
			var UseWidth = (ComputeWidth);
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#customer_count_numpad").jqxWindow({
				title: "No. of Customer",
				isModal: true,
				theme: 'darkblue',
				draggable: false,
				resizable: false,
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#customer_count_numpad').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var NumpadCustomerCount = function(form_name, title){
		var def = $.Deferred();
		populateNumpadCustomerCount(form_name, title)
		.then(function(){
			$('#keyboard_customer_count').numeric_numpad({
			  layout: "numbers_only",
			  input: $('#quantity_field')
			});
			def.resolve();
		});
		return def.promise();
	}
	
	$("#customercount").click(function(e){
			e.preventDefault();
			NumpadCustomerCount('CustomerQuantity', 'Enter # of Customer')
			.then(function(){
					WindowPopupCustomerCount()
					.then(function(){
							$("#quantity_field").val( $("#customer_count").text() );
							$("#quantity_field").jqxNumberInput('focus');
							setTimeout(function(){
									var input = $('#quantity_field input')[0];
									if('selectionStart' in input) {
											input.setSelectionRange(0, 0);
									}else{
											var range = input.createTextRange();
											range.collapse(true);
											range.moveEnd('character', 0);
											range.moveStart('character', 0);
											range.select();
									}
									setTimeout(function(){
											$("#quantity_field input").select();
									},100);
							})
					})
			})
	})

	$(document).on('submit', '#CustomerQuantity', function(e){
			e.preventDefault();
			var CustomerQuantity = $("#quantity_field").val();
			if(CustomerQuantity){
					if(CustomerQuantity > 2999){
							var msg = "Customer Count can be up to 2999.";
							NumpadAlertClose('customer_count_error', msg)
							.then(function(){
								WindowPopupAlert ('Customer Count Info');
							})
					}else{
							var postdata ="CustomerQuantity="+CustomerQuantity;
									postdata+="&OrderTypeNo="+SetOrderTypeNo;
							posData.UpdateCustomerQuantity(postdata)
							.success(function(data){
									load_data(data);
									$('#customer_count_numpad').jqxWindow('close');
							})
					}
			}else{
					$('#customer_count_numpad').jqxWindow('close');
			}
	})

	$(document).on('click', '#customer_count_error .alert_close', function(e){
			e.preventDefault();
			setTimeout(function(){
				$("#table_number_field").jqxNumberInput('focus');
						var input = $('#table_number_field input')[0];
						if('selectionStart' in input) {
								input.setSelectionRange(0, 0);
						}else{
								var range = input.createTextRange();
								range.collapse(true);
								range.moveEnd('character', 0);
								range.moveStart('character', 0);
								range.select();
						}
						$("#table_number_field input").select();
				},100)
				
			$("#quantity_field input").select();
	})

	
	/*
	|-----------------------------------------------------------------------------|
	| Accept Return
	|-----------------------------------------------------------------------------|
	*/
	$("#accept_return_form").on('close', function(e){
		e.preventDefault();
		$("#accept_return_form_container").html('');
		KeyPress(event);
	})
	var populateAcceptReturnForm = function(){
		var def = $.Deferred();
		setTimeout(function(){
			$("#accept_return_form").append('<div id="accept_return_form_container" style="background: #144766; color:#EEE;"></div>');
			$("#accept_return_form_container").html('');
			$("#accept_return_form_container").append(
				'<div>'+
					'<div style="float:left; width: 70%;">'+
						'<script type="text/javascript">'+
							'function KeyPress(e) {'+
								'var evtobj = window.event? event : e;'+
								'if (evtobj.keyCode == 66 && evtobj.ctrlKey) $("#receipt_search").focus()'+
							'}'+
							'document.onkeydown = KeyPress;'+
						'</script>'+
						'<form id="SearchReceiptNumber">'+
							'<div class="input-group" style="float: left; width:60%; padding:0 0 10px 0;">'+
								'<input type="search" class="form-control" id="receipt_search" placeholder="Scan or Enter receipt number"/>'+
								'<div class="input-group-btn">'+
									'<button type="submit" class="btn btn-primary" focusInput="true" type="button" title="Search" style="margin-right:5px;"></i><span class="glyphicon glyphicon-search"></span></button>'+
								'</div>'+
							'</div>'+
						'</form>'+
					'</div>'+
					'<div id="AcceptReturnSelectedInformation" style="float:left; display:none; width: 70%;">'+
						'<div id="AR_Info1" style="float:left; width: 100%; background:#FF7F50; color: #000;"></div>'+
						'<div id="AR_Info2" style="float:left; width: 100%; background:#D2691E; color: #000;"></div>'+
					'</div>'+
					'<div id="AcceptReturnButtonCancel" style="float: left; width:30%; overflow:hidden; text-align:right; padding: 0 0 5px 0;">'+
						'<button class="btn btn-danger btn-lg" id="accept_return_cancel2" style="margin: 0 5px 0 0;">Cancel</button>'+
					'</div>'+
					'<div id="AcceptReturnButtons" style="float: left; width:30%; display: none; text-align:right; padding: 0 0 5px 0;">'+
						'<button class="btn btn-info btn-lg glyphicon glyphicon-print" id="accept_return_print" style="margin: 0 5px 0 0;" title="Print"></button>'+
						'<button class="btn btn-danger btn-lg glyphicon glyphicon-remove" id="accept_return_cancel" style="margin: 0 5px 0 0;" title="Close"></button>'+
						'<button class="btn btn-warning btn-lg glyphicon glyphicon-arrow-left" id="accept_return_back" style="margin: 0 5px 0 0;" title="Back"></button>'+
						'<button class="btn btn-primary btn-lg" id="accept_return_select" style="margin: 0 5px 0 0;" title="Return Item">Return</button>'+
					'</div>'+
					'<div id="AcceptReturnGrid"></div>'+
					'<div id="AcceptReturnSelectedGrid"></div>'+
				'</div>'
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var AcceptReturFormWidth = '100%';
	var AcceptReturnFormHeight = 600;
	var WindowPopupAcceptReturnForm = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var ParentWidth = $("#ScreenResolutionWidth").val();
			var ParentHeight = $("#ScreenResolutionHeight").val();
			var POSView = $(".pos-view").width() + 'px';
			var Container = $(".container-fluid").height() + 'px';
			if(ParentWidth == '1024'){
				$("#AcceptReturnSelectedInformation").css({width: '65%'});
				$("#AcceptReturnButtons").css({width: '35%'});
			}

			$("#accept_return_form").jqxWindow({
				minWidth: POSView,
				minHeight: Container,
				title: "Return/Exchange",
				isModal: true,
				theme: 'darkblue',
				draggable: false,
				resizable: false,
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: 0, y: 50 },
			});
			$('#accept_return_form').jqxWindow('open');
			def.resolve();	
		},100);
		return def.promise();
	}

	var NumpadAcceptReturnForm = function(){
		var def = $.Deferred();
		populateAcceptReturnForm()
		.then(function(){
			def.resolve();
		});
		return def.promise();
	}

	$scope.ReturnReceipt = function(){
		$("#AcceptReturnfunction").attr('disabled', true);

		NumpadAcceptReturnForm()
		.then(function(){
			WindowPopupAcceptReturnForm()
			.then(function(){
				AcceptReturnGridColumns = [];
				AcceptReturnColTypes = [];
				AcceptReturnColumns()
				.then(function(){
					var source = {
						datatype: "json",
						datafields: AcceptReturnColTypes,
						localdata: {}
					};
					var dataAdapter = new $.jqx.dataAdapter(source);
					$("#AcceptReturnGrid").on("bindingcomplete", function (event) {
						// your code here.
						$("#receipt_search").focus();
					});

					var GridWidth = $("#accept_return_form_container").width();
					var GridHeight = $("#accept_return_form_container").height();

					var ParentWidth = $("#ScreenResolutionWidth").val();
					var ParentHeight = $("#ScreenResolutionHeight").val();
					var NewGridHeight = GridHeight - 60
					if(ParentWidth == '1024'){
						NewGridHeight = GridHeight - 120;
					}
					
					$("#AcceptReturnGrid").jqxGrid({
						width: '100%',
						height: NewGridHeight,
						columnsresize: true,
						scrollbarsize: GridScrollBarSize,
						theme: GridTheme,
						altrows: true,
						pageable: true,
						pagermode: 'advanced',
						pagesize: 50,
						columns: AcceptReturnGridColumns,
						rowsheight: GridRowHeight,
					});

					setTimeout(function(){
						var postdata ="SearchReceipt=";
						posData.SearchReceiptNumber(postdata)
						.success(function(data){
							var source = {
								datatype: "json",
								localdata: data
							};
							var dataAdapter = new $.jqx.dataAdapter(source);
							$("#AcceptReturnGrid").jqxGrid({
								source: dataAdapter,
							})
						})
					},200);

					$('#AcceptReturnGrid').on('rowdoubleclick', function (event) { 
						var index = event.args.rowindex;
						var datafield = event.args.datafield;
						var row = $(this).jqxGrid('getrowdata', index);
						
						$("#AcceptReturnGrid").hide();
						$("#AcceptReturnSelectedGrid").jqxGrid('clear');
						$("#SearchReceiptNumber").hide();
						$("#AcceptReturnButtonCancel").hide();
						$("#AcceptReturnButtons").show();

						AcceptReturnSelectedGridColumns = [];
						AcceptReturnSelectedColTypes = [];

						AcceptReturnSelectedColumns()
						.then(function(){
							var GridWidth = $("#accept_return_form_container").width();
							var GridHeight = $("#accept_return_form_container").height();

							var ParentWidth = $("#ScreenResolutionWidth").val();
							var ParentHeight = $("#ScreenResolutionHeight").val();
							var NewGridHeight = GridHeight - 60
							if(ParentWidth == '1024'){
								NewGridHeight = GridHeight - 120;
							}

							var source = {
								datatype: "json",
								datafields: AcceptReturnSelectedColTypes,
								localdata: {}
							};

							var cellbeginedit = function (row, datafield, columntype, value) {
								if (row == 11 ||  value === null || value === '') return false;
								//if (value === null || value === '') return false;
							}
				
							var dataAdapter = new $.jqx.dataAdapter(source);

							$("#AcceptReturnSelectedGrid").jqxGrid({
								width: '100%',
								height: NewGridHeight,
								columnsresize: true,
								theme: GridTheme,
								altrows: true,
								editable: false,
								editmode: 'click',
								showaggregates: true,
								showstatusbar: true,
								statusbarheight: GridRowHeight,
								columns: AcceptReturnSelectedGridColumns,
								rowsheight: GridRowHeight,
							});

							$("#AcceptReturnSelectedGrid").on('rowdoubleclick', function (event) 
							{
								console.log("aff");
								var args = event.args;
								// row's bound index.
								var boundIndex = args.rowindex;
								// row's visible index.
								var visibleIndex = args.visibleindex;
								// right click.
								var rightclick = args.rightclick; 
								// original event.
								var ev = args.originalEvent;
								
								var rowid = $("#AcceptReturnSelectedGrid").jqxGrid('getrowid',boundIndex);
								var rowdata = $("#AcceptReturnSelectedGrid").jqxGrid('getrowdatabyid', rowid);
					
								if(rowdata.ReturnReceiptDetailsUnique != null){
									var msg = rowdata.Description+' has been returned on Receipt '+rowdata.ReceiptNumber;
									NumpadAlertOk('remove_item_info', msg)
									.then(function(){
										WindowPopupAlert('Info');
									})

									return false;
								}
								
								
								// for(var i=0; i < ReturnItemArr. length; i++){
								// 	if(rowdata.Unique == ReturnItemArr[i]){
								// 		var msg = rowdata.Description+' has been returned on Receipt '+rowdata.ReceiptNumber;
								// 		NumpadAlertOk('remove_item_info', msg)
								// 		.then(function(){
								// 			WindowPopupAlert('Info');
								// 		})

								// 		return false;
								// 	}
								// }


								NumpadQuantity('return_quantity_submit')
								.then(function(){
									WindowPopupQuantity()
									.then(function(){
										$("#NumpadQuantityTitle").text('Enter Return Quantity');
										setTimeout(function(){
											$("#quantity_field input").val(rowdata["Quantity"]);
											$("#quantity_field").jqxNumberInput('focus');
											var input = $('#quantity_field input')[0];
											if('selectionStart' in input) {
												input.setSelectionRange(0, 0);
												$("#quantity_field").select();
											}else{
												var range = input.createTextRange();
												range.collapse(true);
												range.moveEnd('character', 0);
												range.moveStart('character', 0);
												range.select();
											}
											$("#quantity_field input").select();
										},100)
									})
								})
							});

							$(document).on('submit', '#return_quantity_submit', function(e){
								e.preventDefault();
								var quantityVal = $("#quantity_field").val();
								var rowindex = $("#AcceptReturnSelectedGrid").jqxGrid('getselectedrowindex');
								var rowid = $("#AcceptReturnSelectedGrid").jqxGrid('getrowid',rowindex);
								var rowdata = $("#AcceptReturnSelectedGrid").jqxGrid('getrowdatabyid', rowid);
								var OriginalQty = rowdata["Quantity"];
								
								if(quantityVal > OriginalQty){
									var msg = 'Return Quantity cannot be greater than Purchase Quantity';
									NumpadAlertOk('return_quantity_failed', msg)
									.then(function(){
										WindowPopupAlert('Message');
									})

									$("#dialog-numpad-quantity").jqxWindow('close');
									return false;
								}

								rowdata["ReturnQuantity"] = $("#quantity_field input").val();
								console.log($("#quantity_field input").val());
								$("#AcceptReturnSelectedGrid").jqxGrid('updaterow', rowid, rowdata);

								setTimeout(function(){
									$("#dialog-numpad-quantity").jqxWindow('close');
								},100)
							})
														
							var postdata ="ReceiptHeaderUnique="+row.Unique;
							posData.AcceptReturnReceiptSelected(postdata)
							.success(function(data){
								var source = {
									datatype: "json",
									localdata: data.grid,
									updaterow: function (rowid, rowdata, commit) {
										var $this =  $("#AcceptReturnSelectedGrid");
										var row = $($this).jqxGrid('getrowdata', rowid);
										
										commit(true);
									}
								};
								var dataAdapter = new $.jqx.dataAdapter(source);
								$("#AcceptReturnSelectedGrid").jqxGrid({
									source: dataAdapter,
								})

								$("#AcceptReturnSelectedInformation").show();
								$("#AcceptReturnSelectedGrid").show();
								$("#AR_Info1").html('');
								$("#AR_Info2").html('');

								$("#AR_Info1").append(
									'<div style="float:left; width:30%; text-align:left; font-size:18px; font-weight: bold;">Receipt# '+data.info.ReceiptNumber+'</div>'+
									'<div style="float:left; width:30%; text-align:left; font-size:18px; font-weight: bold;">'+data.info.CustomerName+'</div>'+
									'<div style="float:left; width:40%; text-align:right; font-size:18px; font-weight: bold;">'+data.info.ReceiptDate+'</div>'+
									'<input type="hidden" id="ReceiptReturnCustomerUnique" value="'+data.info.CustomerUnique+'"/>'
								);
								$("#AR_Info2").append(
									'<div style="float:left; width:30%; text-align:left; font-size:18px; font-weight: bold;">Location: '+data.info.LocationName+'</div>'+
									'<div style="float:left; width:30%; text-align:left; font-size:18px; font-weight: bold;">Station: '+data.info.StationName+'</div>'+
									'<div style="float:left; width:40%; text-align:right; font-size:18px; font-weight: bold;">Cashier: '+data.info.UserName+'</div>'
								);
							})
						})
					});
				})
			})
		})

		setTimeout(function(){
			$("#AcceptReturnfunction").attr('disabled', false);
		},1000);
	}

	/*
	|-----------------------------------------------------------|
	| Accept Return dynamic grid cols
	|-----------------------------------------------------------|
	*/
	var AcceptReturnGridColumns = [];
	var AcceptReturnColTypes = [];
	var AcceptReturnColumns = function(){
		var def = $.Deferred();
		posData.AcceptReturnDynaminCols()
		.success(function(data){
			$.each(data.gridcols, function(index, value){
				if(value.aggregates == 1){
					if(value.columntype == 'numberinput'){//Number Input
						AcceptReturnGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							},
							columntype: 'numberinput',
							createeditor: function (row, cellvalue, editor, cellText, width, height) {
								editor.jqxNumberInput({ digits: 8, spinMode: 'simple', spinButtons: false});
							} 
						})
					}else{
						AcceptReturnGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							} 
						})
					}
				}else{
					if(value.columntype == 'numberinput'){//Number Input
						AcceptReturnGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat,
							columntype: 'numberinput',
							createeditor: function (row, cellvalue, editor, cellText, width, height) {
								editor.jqxNumberInput({ digits: 8, spinMode: 'simple', spinButtons: false});
							} 
						})
					}else{
						AcceptReturnGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat})
					}
				}
			})
			AcceptReturnColTypes.push(data.gridtype);
			def.resolve();
		})
		return def.promise();
	}

	$(document).on('submit', '#SearchReceiptNumber', function(e){
		e.preventDefault();
		var inputReceptNumber = $("#receipt_search").val();
		var postdata = "SearchReceipt="+inputReceptNumber;
		posData.SearchReceiptNumber(postdata)
		.success(function(data){
			var source = {
				datatype: "json",
				localdata: data
			};
			var dataAdapter = new $.jqx.dataAdapter(source);
			$("#AcceptReturnGrid").jqxGrid({
				source: dataAdapter,
			})
		})
		$("#receipt_search").val('');
	})
	
	$(document).on('click', '#accept_return_cancel', function(e){
		e.preventDefault();
		$('#accept_return_form').jqxWindow('close');
	})

	$(document).on('click', '#accept_return_cancel2', function(e){
		e.preventDefault();
		$('#accept_return_form').jqxWindow('close');
	})

	/*
	|-----------------------------------------------------------|
	| Accept Return Selected dynamic grid cols
	|-----------------------------------------------------------|
	*/
	var AcceptReturnSelectedGridColumns = [];
	var AcceptReturnSelectedColTypes = [];
	var AcceptReturnSelectedColumns = function(){
		var def = $.Deferred();
		posData.AcceptReturnDynamicSelectedCols()
		.success(function(data){
			$.each(data.gridcols, function(index, value){
				if(value.aggregates == 1){
					if(value.columntype == 'numberinput'){//Number Input
						AcceptReturnSelectedGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, editable: value.editable, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							},
							columntype: 'numberinput',
							createeditor: function (row, cellvalue, editor, cellText, width, height) {
								editor.jqxNumberInput({ digits: 8, spinMode: 'simple', spinButtons: false, decimalDigits: 0});
							}
						})
					}else if(value.columntype == 'checkbox'){
						AcceptReturnSelectedGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, editable: value.editable, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							},
							columntype: 'checkbox'
						})
					}else{
						AcceptReturnSelectedGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, editable: value.editable, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							}
						})
					}
				}else{
					if(value.columntype == 'numberinput'){//Number Input
						AcceptReturnSelectedGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, editable: value.editable,
							columntype: 'numberinput',
							createeditor: function (row, cellvalue, editor, cellText, width, height) {
								editor.jqxNumberInput({ digits: 8, spinMode: 'simple', spinButtons: false, decimalDigits: 0});
							}  
						})
					}else if(value.columntype == 'checkbox'){
						AcceptReturnSelectedGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, editable: value.editable,
							columntype: 'checkbox'
						})
					}else{
						AcceptReturnSelectedGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, editable: value.editable,})
					}
				}
			})
			AcceptReturnSelectedColTypes.push(data.gridtype);
			def.resolve();
		})
		return def.promise();
	}

	var ReturnItemArr = [];
	$(document).on('click', '#accept_return_select', function(e){
		e.preventDefault();
		$("#accept_return_select").prop('disabled', true);

		var rows = $("#AcceptReturnSelectedGrid").jqxGrid("getrows");
		checkedItems = [];
		if(rows.length > 0){
			for(var i=0; i < rows.length; i++){
				if(rows[i].ReturnQuantity != 0){
					//if(rows[i].ReturnQuantity > 0){
						// if(rows[i].ReturnQuantity <= rows[i].Quantity){
							ReturnItemArr.push(rows[i].Unique);
							checkedItems.push({
								"ItemUnique" 	: rows[i].ItemUnique,
								"SellPrice" 	: rows[i].SellPrice,
								"Quantity"		: rows[i].Quantity,
								"ExtPrice"		: rows[i].ExtPrice,
								"ReturnQuantity": rows[i].ReturnQuantity,
								"ItemNumber"	: rows[i].ItemNumber,
								"Unique"		: rows[i].Unique,
								"Description"	: rows[i].Description,
								"ReturnUnique"	: rows[i].ReturnUnique,
								"Points"		: rows[i].Points,
								//"TaxUnique"		: rows[i].TaxUnique,
								//"TaxDescription": rows[i].TaxDescription,
								//"TotalTax"		: rows[i].TotalTax,
								"Cost_Extra"	: rows[i].Cost_Extra,	
								"Cost_Freight"	: rows[i].Cost_Freight,
								"Cost_Duty"		: rows[i].Cost_Duty,
								"ListPrice"		: rows[i].ListPrice,
								"Discount"		: rows[i].Discount,
								"Tax"			: rows[i].Tax,
								"Cost"			: rows[i].Cost,
								"Total"			: rows[i].Total,
								"parentunique"	: rows[i].parentunique,
								"QuestionUnique": rows[i].QuestionUnique,
								"SalesPerson" 	: rows[i].SalesPerson,
								"ReceiptNumber"	: rows[i].ReceiptNumber,
								"DiscountUnique": rows[i].DiscountUnique	
							})
						// }
					//}
				}
			}

			setTimeout(function(){
				$("#accept_return_select").prop('disabled', false);
			},1000)
		}
		
		if(checkedItems.length > 0){
			var postdata ="ReturnItemsSelected="+JSON.stringify(checkedItems);
				postdata+="&CustomerUnique="+$("#ReceiptReturnCustomerUnique").val();
			posData.ReturnItemsSelectedSave(postdata)
			.success(function(data){
				load_data(data);
				$('#accept_return_form').jqxWindow('close');
			})
		}else{
			var msg = "Quantity must be at least 1 and Less than or equal to Purchase Quantity";
			NumpadAlertClose('return_quantity_invalid', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
		
	})

	$(document).on('click','#accept_return_back', function(e){
		e.preventDefault();
		$("#AcceptReturnGrid").show();
		$("#AcceptReturnSelectedGrid").hide();
		$("#AcceptReturnSelectedInformation").hide();
		$("#SearchReceiptNumber").show();
		$("#receipt_search").focus();
		$("#AcceptReturnButtonCancel").show();
		$("#AcceptReturnButtons").hide();
	})
	
	
	/*
	|-----------------------------------------------------------|
	| Sales Person Item
	|-----------------------------------------------------------|
	*/
	var SalesPersonGridColumns = [];
	var SalesPersonColTypes = [];
	var SalesPersonColumns = function(){
		var def = $.Deferred();
		posData.SalesPersonDynaminCols()
		.success(function(data){
			$.each(data.gridcols, function(index, value){
				if(value.aggregates == 1){
					if(value.columntype == 'numberinput'){//Number Input
						SalesPersonGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							},
							columntype: 'numberinput',
							createeditor: function (row, cellvalue, editor, cellText, width, height) {
								editor.jqxNumberInput({ digits: 8, spinMode: 'simple', spinButtons: false});
							} 
						})
					}else{
						SalesPersonGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat, aggregates: [{
								'Total': function (aggregatedValue, currentValue, column, record) {
									var total = currentValue;
									var returnTotal = 0;
									returnTotal = aggregatedValue + total;
									return returnTotal;
								}
							}],
							aggregatesRenderer: function (aggregates, column, element) {
								var renderString = "<div style='margin: 4px; float: right;  height: 100%; font-weight: bold;'>";
								var Total=parseFloat(0).toFixed(2);
								if(aggregates.Total){
									Total = aggregates.Total;
								}
								renderString +=  Total + "</div>";
								return renderString;
							} 
						})
					}
				}else{
					if(value.columntype == 'numberinput'){//Number Input
						SalesPersonGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat,
							columntype: 'numberinput',
							createeditor: function (row, cellvalue, editor, cellText, width, height) {
								editor.jqxNumberInput({ digits: 8, spinMode: 'simple', spinButtons: false});
							} 
						})
					}else{
						SalesPersonGridColumns.push({ text: value.text, datafield: value.datafield, width: value.width, hidden: value.hidden, filtertype: value.filtertype, align: value.align, cellsalign: value.cellsalign, cellsformat: value.cellsformat})
					}
				}
			})
			SalesPersonColTypes.push(data.gridtype);
			def.resolve();
		})
		return def.promise();
	}
	SalesPersonColumns();

	var Height1 = $("#right_panel_width").height();
	var Height2 = $("#POSMenuCategoryContainer").height();

	$scope.CashierList = function(){
		$("#CashierListfunction").attr("disabled", true);
		var SelectedItem = GlobalItemUnique.Unique;
		if(SelectedItem){
			WindowPopupCashierList()
			.then(function(){
				var postdata = "ReceiptDetailsUnique="+SelectedItem;
				posData.GetCurrentSalesPerson(postdata)
				.success(function(data){
					$("#current_sales_person").text(data.SalesPerson);
				})

				var source = {
					datatype: "json",
					datafields: SalesPersonColTypes,
					localdata: {}
				};
				
				var NewHeight = (Height1 + Height2);
				var TopHeight = $("#SalesPersonButtonTop").height();
				var WindowHeader = $(".jqx-window-header").height();
				var NewTopHeight = (NewHeight - TopHeight);
				NewTopHeight = (NewTopHeight - 50);
				$("#SalesPersonList2").jqxGrid({
					width: '100%',
					height: NewTopHeight,
					columnsresize: true,
					theme: 'ui-light',
					pageable: true,
					pagermode: 'advanced',
					pagesize: 100,
					showfilterrow: true,
					filterable: true,
					filterMode: 'advance',
					columns: SalesPersonGridColumns
				})

				posData.SalesPersonList()
				.success(function(data2){
					var source = {
						datatype: "json",
						localdata: data2
					};
					var dataAdapter = new $.jqx.dataAdapter(source);
					$("#SalesPersonList2").jqxGrid({
						source: dataAdapter
					})
				})
			})
		}else{
			var msg = 'Please select Item first';
			NumpadAlertClose('no_item_selected', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
		setTimeout(function(){
			$("#CashierListfunction").attr("disabled", false);
		},1000);
		$("#dialog-numpad-all-price").jqxWindow('close');
	}

	$scope.SelectUser = function(){
		var gridData = $("#SalesPersonList2").jqxGrid("getrowdata", SalesPersonGridRowIndex);
		var CashierID = gridData.Unique;
		if(CashierID){
			var postdata = "CashierID="+CashierID;
				postdata += "&ReceiptDetailsUnique="+GlobalItemUnique.Unique;
			posData.SelectUser(postdata)
			.success(function(data){
				if(data.success == true){
					$('#dialog-cashier-list').jqxWindow('close');
				}
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			var msg = 'Select Sale Person';
			NumpadAlertClose('sale_person_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
		SalesPersonGridRowIndex = null;
	}

	var SalesPersonGridRowIndex = null;
	$('#SalesPersonList2').on('rowclick', function (event) {
		var args = event.args;
		// row's bound index.
		var boundIndex = args.rowindex;
		// row's visible index.
		var visibleIndex = args.visibleindex;
		// right click.
		var rightclick = args.rightclick; 
		// original event.
		var ev = args.originalEvent;  
		SalesPersonGridRowIndex = boundIndex;
	}); 

	$('#SalesPersonList2').on('rowdoubleclick', function (event) {
		var index = event.args.rowindex;
		var datafield = event.args.datafield;
		var row = $(this).jqxGrid('getrowdata', index);

		var CashierID = row.Unique;
		if(CashierID){
			var postdata = "CashierID="+CashierID;
				postdata += "&ReceiptDetailsUnique="+GlobalItemUnique.Unique;
			posData.SelectUser(postdata)
			.success(function(data){
				if(data.success == true){
					$('#dialog-cashier-list').jqxWindow('close');
				}
			}).then(function(){
				$("#barcode_search").focus();
			})
		}else{
			var msg = 'Select Sale Person';
			NumpadAlertClose('sale_person_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
		}
		SalesPersonGridRowIndex = null;
	})

	var WindowPopupCashierList2 = function(){
		var def = $.Deferred();
		setTimeout(function(){
			var NewHeight = (Height1 + Height2);
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#CashierListSelection").jqxWindow({
				height: NewHeight,
				width: 710,
				title: "Assign Receipt to",
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				resizable: false,
				draggable: false,
				position: { x: OrderListWidth, y: 50 }
			});
			$('#CashierListSelection').jqxWindow('open');
			def.resolve();
		},100);
		return def.promise();
	}

	/* remove after the new one is working properly. 5-9-18
	$(document).on('submit', '#assign_newuser_enter_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var password = CRP.converted;
			var hashpasscode = CryptoJS.MD5(password);
			var postdata="passcode="+hashpasscode;
				postdata+="&FunctionButton=AssignNewUser";
			posData.EnterPassCodeShowCashedIn(postdata)
			.success(function(data){
				if(data.success){
					if(data.login){
						posData.GetCurrentAssigned(postdata)
						.success(function(data){
							$("#current_cashier").text(data.UserCurrentAssigned);
						})
						$("#dialog-numpad-passcode").jqxWindow("close");
						if($("#POSAssignList").val() == 1){
							posData.ServerCashedIn()
							.success(function(data){
								WindowPopupCashierList2()
								.then(function(){
									var source = {
										datatype: "json",
										datafields: SalesPersonColTypes,
										localdata: {}
									};
									
									var NewHeight = (Height1 + Height2);
									var TopHeight = $("#CashierButtonTop").height();
									var WindowHeader = $(".jqx-window-header").height();
									var NewTopHeight = (NewHeight - TopHeight);
									NewTopHeight = (NewTopHeight - 50);
									$("#SalesPersonList3").jqxGrid({
										width: '100%',
										height: NewTopHeight,
										columnsresize: true,
										theme: 'ui-light',
										pageable: true,
										pagermode: 'advanced',
										pagesize: 100,
										showfilterrow: true,
										filterable: true,
										filterMode: 'advance',
										columns: SalesPersonGridColumns
									})

									var source = {
										datatype: "json",
										localdata: data
									};
									var dataAdapter = new $.jqx.dataAdapter(source);
									$("#SalesPersonList3").jqxGrid({
										source: dataAdapter
									})
								})
							})
						}else if($("#POSAssignList").val() == 2){
							posData.ALLServerList()
							.success(function(data){
								WindowPopupCashierList2()
								.then(function(){
									var source = {
										datatype: "json",
										datafields: SalesPersonColTypes,
										localdata: {}
									};
									
									var NewHeight = (Height1 + Height2);
									var TopHeight = $("#CashierButtonTop").height();
									var WindowHeader = $(".jqx-window-header").height();
									var NewTopHeight = (NewHeight - TopHeight);
									NewTopHeight = (NewTopHeight - 50);
									$("#SalesPersonList3").jqxGrid({
										width: '100%',
										height: NewTopHeight,
										columnsresize: true,
										theme: 'ui-light',
										pageable: true,
										pagermode: 'advanced',
										pagesize: 100,
										showfilterrow: true,
										filterable: true,
										filterMode: 'advance',
										columns: SalesPersonGridColumns
									})

									var source = {
										datatype: "json",
										localdata: data
									};
									var dataAdapter = new $.jqx.dataAdapter(source);
									$("#SalesPersonList3").jqxGrid({
										source: dataAdapter
									})
								})
								once_clicked();
							})
						}
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertOk('assign_no_permission', data.msg)
						.then(function(){
							WindowPopupAlert('Message');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Password";
					NumpadAlertOk('cashier_change_error_form', msg)
					.then(function(){
						WindowPopupAlert('Invalid Passcode');
					})
				}
			});
		}else{
			$("#dialog-numpad-passcode").jqxWindow("close");
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('cashier_change_error_form', msg)
			.then(function(){
				WindowPopupAlert('Invalid Passcode');
			})
		}
		$("#passcode_numpad").html('');
	})
	*/

	$(document).on('submit', '#assign_newuser_enter_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var password = CRP.converted;
			var hashpasscode = CryptoJS.MD5(password);
			var postdata="passcode="+hashpasscode;
				postdata+="&FunctionButton=AssignNewUser";
			posData.EnterPassCodeShowCashedIn(postdata)
			.success(function(data){
				if(data.success){
					if(data.login){
						posData.GetCurrentAssigned(postdata)
						.success(function(data){
							$("#current_cashier").text(data.UserCurrentAssigned);
						})
						$("#dialog-numpad-passcode").jqxWindow("close");
						
						posData.AssignList()
						.success(function(data){
							WindowPopupCashierList2()
							.then(function(){
								var source = {
									datatype: "json",
									datafields: SalesPersonColTypes,
									localdata: {}
								};
								
								var NewHeight = (Height1 + Height2);
								var TopHeight = $("#CashierButtonTop").height();
								var WindowHeader = $(".jqx-window-header").height();
								var NewTopHeight = (NewHeight - TopHeight);
								NewTopHeight = (NewTopHeight - 50);
								$("#SalesPersonList3").jqxGrid({
									width: '100%',
									height: NewTopHeight,
									columnsresize: true,
									theme: 'ui-light',
									pageable: true,
									pagermode: 'advanced',
									pagesize: 100,
									showfilterrow: true,
									filterable: true,
									filterMode: 'advance',
									columns: SalesPersonGridColumns
								})

								var source = {
									datatype: "json",
									localdata: data
								};
								var dataAdapter = new $.jqx.dataAdapter(source);
								$("#SalesPersonList3").jqxGrid({
									source: dataAdapter
								})
							})
						})
						
					}else{
						$("#dialog-numpad-passcode").jqxWindow("close");
						NumpadAlertOk('assign_no_permission', data.msg)
						.then(function(){
							WindowPopupAlert('Message');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow("close");
					var msg = "Invalid Password";
					NumpadAlertOk('cashier_change_error_form', msg)
					.then(function(){
						WindowPopupAlert('Invalid Passcode');
					})
				}
			});
		}else{
			$("#dialog-numpad-passcode").jqxWindow("close");
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('cashier_change_error_form', msg)
			.then(function(){
				WindowPopupAlert('Invalid Passcode');
			})
		}
		$("#passcode_numpad").html('');
	})

	var SalesPersonGridRowIndex2 = null;
	$('#SalesPersonList3').on('rowclick', function (event) {
		var args = event.args;
		// row's bound index.
		var boundIndex = args.rowindex;
		// row's visible index.
		var visibleIndex = args.visibleindex;
		// right click.
		var rightclick = args.rightclick; 
		// original event.
		var ev = args.originalEvent;  
		SalesPersonGridRowIndex2 = boundIndex;
	}); 

	$scope.SelectCashier = function(){
		var gridData = $("#SalesPersonList3").jqxGrid("getrowdata", SalesPersonGridRowIndex2);
		var SelectedCashierUnique = gridData.Unique;
		if(SelectedCashierUnique){
			var postdata ="Server="+SelectedCashierUnique;
			posData.AssignServer(postdata)
			.success(function(data){
				LoadHeaderInfo();
				SalesPersonGridRowIndex2 = null;
				$("#SalesPersonList3").jqxGrid('clearselection');
				$("#CashierListSelection").jqxWindow('close');
			})
		}else{
			var msg = 'Please select Assign';
			NumpadAlertClose('qrec_error', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			})
		}
	}

	$scope.CancelCashierList = function(){
		$("#SalesPersonList3").jqxGrid('clearselection');
		$("#CashierListSelection").jqxWindow('close');
	}

	if( $("#SplitShowPayment").val() == 1 ){
		setTimeout(function(){
			PaymentView();
		},1000)
	}

	$(document).on('click', '#add_item_failed', function(e){
		e.preventDefault();
		$(".btnitems").attr("disabled", false);
	})

	// Table Manual Section
	$("#table_manual_cancel").on('click', function(){
		$("#table_manual_option").jqxWindow('close');
	})

	/*
	|----------------------------------------------------------------------------|
	| POS View													                 |
	|----------------------------------------------------------------------------|
    */
    var VirtualTableOrderListWidth = ($(".orderedlist").width() + 3);
	var table_once_clicked = () => {
		$(".table-order").one('click',function(){
			var TableNumberChange = $("#TableNumberChange").val();
			if(TableNumberChange == 2){
				if( $(".table_assigned").length > 0 ){
					if($scope.OrderedItemCount > 0){
						var msg = 'What would you like to do?';
						var VirtualTableManualOption = [VirtualTableOrderListWidth, msg];
						$rootScope.$emit('CallTableManualOption', VirtualTableManualOption);
					}else{
						VirtualTableParam = [VirtualTableOrderListWidth, 'table_manual_key_update_table'];
						$rootScope.$emit("CallVirtualTable", VirtualTableParam);
					}
				}else{
					VirtualTableParam = [VirtualTableOrderListWidth, 'table_manual_key_update_table'];
					$rootScope.$emit("CallVirtualTable", VirtualTableParam);
				}
				setTimeout(function(){
					table_once_clicked();
				},1000);
				return false;
			}
			
			posData.GetReceiptHeaderCurrentStatus()
			.success(function(data){
				TableQID = data.qdefault;
				if(data.CurrentStatus == 1){
					if(data.table == false){
						if(data.items){
							NumpadTableQuestion('table_question', data.question_list, data.question)
							.then(function(){
								WindowTableQuestion('Question')
							})
						}else{
							PopupWindowDineIn()
							.then(function(){
								WindowTableDineIn("Dine in Table"+" | "+$("#Server").val());
							})
						}
					}else{
						if(data.items){
							//--> Check Receipt if Item(s) added
							NumpadTableQuestion('table_question', data.question_list, data.question)
							.then(function(){
								WindowTableQuestion('Question')
							})
						}else{
							//--> Show Table Selection
							posData.TableUpdateReceiptStatus()
							.success(function(data){
								load_data(data);
							}).then(function(){
								PopupWindowDineIn()
								.then(function(){
									WindowTableDineIn("Dine in Table"+ " | "+ $("#Server").val())
									.then(function(){
										
									})
								})
							})
						}
					}
				}else if(data.current_status == 4){
					var msg = 'This Receipt is completed, please click New Sale instead.';
					NumpadAlertClose('table_attempt_add_table', msg)
					.then(function(){
						WindowPopupAlert('Table Message');
					});
				}

				setTimeout(function(){
					table_once_clicked();
				},1000);
			})	
		})
	}

	table_once_clicked();
    
	

	$("#table_manual_open").on('click', function(){
		var action = '';
		if(OrderedItemCount > 0){
			action = 'table_manual_key_onhold';
		}else{
			action = 'table_manual_key_update_table';
		}
		VirtualTableParam = [VirtualTableOrderListWidth, action];
		$rootScope.$emit("CallVirtualTable", VirtualTableParam);

		$("#table_manual_option").jqxWindow('close');
	})

	var AllTablesArr = $scope.AllTablesArr[0];
	var TableManualReceiptHeaderUniqueGlobal;
	$(document).on('submit', '#table_manual_key_update_table', function(e){
		e.preventDefault();
		var TableNo = $("#search_field").val().toUpperCase();
		var TableCustomerNo = $("#TableCustomerNo").val();
		if(TableNo == null || TableNo == ''){
			var msg = 'Please select or type Table Number.';
			
            NumpadAlertClose('search_table_name', msg)
            .then(function(){
                WindowPopupAlert('Info');
            })
            return false;
		}

		var resultObject = search("TableName", TableNo, $scope.AllTablesArr[0]);
        if(resultObject){
            ManualTableUnique = resultObject.TableNo;
			ManualTableName   = resultObject.TableName;
			var postdata ="TableName="+TableNo;
            posData.TableNumberManualCheck(postdata)
            .success(function(data){
                if(data.success){
					var msg ='Table '+TableNo+' is already assigned to Receipt #'+data.result.ReceiptNumber+'\r\n';
						msg+='for '+data.result.UserName;
					var VirtualTableManualOption = [VirtualTableOrderListWidth, msg, data.result.ReceiptHeaderUnique];
					$rootScope.$emit('CallFormTableManualReOpen', VirtualTableManualOption);
				}else{
					// With Customer
					if(TableCustomerNo == 1){
						$rootScope.$emit('CallNumpadTableNoOfCustomer', 'table_manual_customer_qty_update_table');
					// Without Customer 
					}else{
						var postdata ="TableUnique="+ManualTableUnique;
                            postdata+="&TableName="+ManualTableName;
						posData.SelectTableManualUpdateWithOutCustomerNo(postdata)
						.success(function(data){
							$rootScope.$emit('CallLoadHeaderInformation');
						})
					}
					$("#table_manual_keyin").jqxWindow('close');
				}
			})
		}else{
			var msg = 'Table '+TableNo+' does not exist';
            NumpadAlertClose('search_table_name', msg)
            .then(function(){
                WindowPopupAlert('Info');
            })
		}
	})

	$(document).on('submit', '#table_manual_customer_qty_update_table', function(e){
		e.preventDefault();
		var CustomerQuantity = $("#table_number_field").val();
		if(CustomerQuantity > 2999){
			var msg = "Customer Count can be up to 2999.";
			NumpadAlertClose('customer_count_error', msg)
			.then(function(){
				WindowPopupAlert ('Customer Count Info');
			})
		}else{
			var no_customer = $("#table_number_field").val();
			var postdata ="TableUnique=" + ManualTableUnique;
					postdata+="&no_of_customer="+no_customer;
			posData.SelectTableManualUpdateWithCustomerNo(postdata)
			.success(function(data){
				if(data.result){
					$rootScope.$emit('CallLoadHeaderInformation');
					$("#table_no_of_customer").jqxWindow('close');
					$("#table_manual_keyin").jqxWindow('close');
				}
			})
		}
	})

	function search(key, nameKey, myArray){
        for (var i=0; i < myArray.length; i++) {
            if(key == "TableName"){
                if (myArray[i].TableName === nameKey) {
                    return myArray[i];
                }
            }else if(key == "TableNo"){
                if (myArray[i].TableNo === nameKey) {
                    return myArray[i];
                }
            }
        }
	}
	
	$(document).on('submit', '#table_manual_key_onhold', function(e){
		e.preventDefault();
		var TableNo = $("#search_field").val().toUpperCase();
		var TableCustomerNo = $("#TableCustomerNo").val();
		if(TableNo == null || TableNo == ''){
            var msg = 'Please select or type Table Number.';
            NumpadAlertClose('search_table_name', msg)
            .then(function(){
                WindowPopupAlert('Info');
            })
            return false;
		}

		var resultObject = search("TableName", TableNo, $scope.AllTablesArr[0]);
        if(resultObject){
            ManualTableUnique = resultObject.TableNo;
			ManualTableName   = resultObject.TableName;
			var postdata ="TableName="+TableNo;
            posData.TableNumberManualCheck(postdata)
            .success(function(data){
				if(data.success){
					var msg ='Table '+TableNo+' is already assigned to Receipt #'+data.result.ReceiptNumber+'\r\n';
						msg+='for '+data.result.UserName;
					var VirtualTableManualOption = [VirtualTableOrderListWidth, msg, data.result.ReceiptHeaderUnique];
					$rootScope.$emit('CallFormTableManualReOpen', VirtualTableManualOption);
					
					/*
					NumpadAlertClose('search_table_manual_name', msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
					*/
				}else{
					// With Customer
					if(TableCustomerNo == 1){
						$rootScope.$emit('CallNumpadTableNoOfCustomer', 'table_manual_customer_qty_onhold');
					// Without Customer 
					}else{
						var postdata ="TableUnique="+ManualTableUnique;
                            postdata+="&TableName="+ManualTableName;
						posData.SelectTableManualOnHoldWithOutCustomerNo(postdata)
						.success(function(data){
							load_data(data);
						})
					}
					$("#table_manual_keyin").jqxWindow('close');
				}
			})
			
		}else{
			var msg = 'Table '+TableNo+' does not exist';
            NumpadAlertClose('search_table_name', msg)
            .then(function(){
                WindowPopupAlert('Info');
            })
		}
	})

	$("#table_manual_keyin").on('close', function(e){
		e.preventDefault();
		CombineTable = false;
	})

	$(document).on('submit', '#table_manual_customer_qty_onhold', function(e){
		e.preventDefault();
		var no_of_customer = $("#table_number_field").val();
		var postdata ="TableUnique="+ManualTableUnique;
			postdata+="&TableName="+ManualTableName;
			postdata+="&no_of_customer="+no_of_customer;
		posData.SelectTableManualOnHoldWithCustomerNo(postdata)
		.success(function(data){
			load_data(data);
			$("#table_manual_keyin").jqxWindow('close');
			$("#table_no_of_customer").jqxWindow('close');
		})
	})

	var CombineTable = false;
	$("#table_manual_change").on('click', function(e){
		e.preventDefault();
		CombineTable = true;
		var action = 'table_manual_change_no';
		VirtualTableParam = [VirtualTableOrderListWidth, action];
		$rootScope.$emit("CallVirtualTable", VirtualTableParam);
		$("#table_manual_option").jqxWindow('close');
	})

	$(document).on('submit', '#table_manual_change_no', function(e){
		e.preventDefault();
		var TableNo = $("#search_field").val().toUpperCase();
        var TableCustomerNo = $("#TableCustomerNo").val();

        if(TableNo == null || TableNo == '') {
            var msg = 'Please select or type Table Number.';
            NumpadAlertClose('search_table_name', msg)
            .then(function(){
                WindowPopupAlert('Info');
            })
            return false;
        }

        var resultObject = search("TableName", TableNo, $scope.AllTablesArr[0]);
        if(resultObject){
			ManualTableUnique = resultObject.TableNo;
			ManualTableName   = resultObject.TableName;
            var postdata ="TableName="+TableNo;
            posData.TableNumberManualCheck(postdata)
            .success(function(data){
                if(data.success){
					var msg ='Table '+TableNo+' is already assigned to Receipt #'+data.result.ReceiptNumber+'\r\n';
						msg+='for '+data.result.UserName;
					var VirtualTableManualOption = [VirtualTableOrderListWidth, msg, data.result.ReceiptHeaderUnique];
					$rootScope.$emit('CallFormTableManualCombine', VirtualTableManualOption);
					/*
					var msg = 'Table '+TableNo+' is already assign';
                    NumpadAlertClose('search_table_name', msg)
                    .then(function(){
                        WindowPopupAlert('Info');
					})
					*/
                }else{
                    // Table customer count required
                    if(TableCustomerNo == 1){ 
						$rootScope.$emit('CallNumpadTableNoOfCustomer', 'table_manual_customer_qty_update_table');
                    // Table customer count not required
                    }else{
                        var postdata ="TableUnique="+ManualTableUnique;
                            postdata+="&TableName="+ManualTableName;
                        posData.SelectTableManualUpdateWithOutCustomerNo(postdata)
                        .success(function(selTableNoCustomer){
                            if(selTableNoCustomer.success){
								$rootScope.$emit('CallLoadHeaderInformation');
                            }else{
                                var msg = selTableNoCustomer.msg;
                                NumpadAlertClose('search_table_name', msg)
                                .then(function(){
                                    WindowPopupAlert('Info');
                                })
                            }
                        })
					}
					$("#table_manual_keyin").jqxWindow('close');
				}
            })
        }else{
            var msg = 'Table '+TableNo+' does not exist';
            NumpadAlertClose('search_table_name', msg)
            .then(function(){
                WindowPopupAlert('Info');
            })
        }
	})


	// Open Table Assigned
	$(document).on('click', '.table_manual_tables_inuse', function(e){
		e.preventDefault();
		if(CombineTable){
			var TableInfo = $(this).attr("id");
			ManualTableUnique = TableInfo.split("=")[0];
			var TableReceiptUnique = TableInfo.split("=")[1];
			var TableReceiptNo = TableInfo.split("=")[2];
			var TableServer = TableInfo.split("=")[3];
			var TableManualName = TableInfo.split("=")[4];
			var msg ='Table '+TableManualName+' is already assigned to Receipt #'+TableReceiptNo+'\r\n';
				msg+='for '+TableServer;
			var VirtualTableManualOption = [VirtualTableOrderListWidth, msg, TableReceiptUnique];
			$rootScope.$emit('CallFormTableManualCombine', VirtualTableManualOption);
				
			CombineTable = false;

			return false;
		}

		var ParseId = $(this).attr("id");
		var TableManualNo = ParseId.split('=')[0];
		var TableManualReceiptUnique = ParseId.split('=')[1];
		var CountReceipts = ParseId.split("=")[5];

		if(TableManualReceiptUnique > 0){
			posData.CashInServerCheckByUserId()
			.success(function(result){
				if(result.cashin){
					// Check Previous Receipt if there's an Item added
					var CountItem 		= $scope.OrderedItemCount;
					var ReceiptStatus 	= $scope.ReceiptStatus;
					var CurrentBalance 	= $scope.ReceiptCurrentBalance;
					// Check Receipt Current Status
					var postdata ="ReceiptHeaderUnique="+TableManualReceiptUnique;
					posData.TableManualCheckReceiptStatus(postdata)
					.success(function(data){
						if(data.result.reopen == false){
							if(data.result.open == true){
								var msg = data.result.msg;
								NumpadAlertClose('table_manual_msg', msg)
								.then(function(){
									WindowPopupAlert('Info');
								})
							}else{
								// Set Receipt Status to 0
								if(CountItem == 0){
									posData.TableManualPreviousReceiptSetStatus()
									.success(function(data){
										// Open Table
										var postdata ="ReceiptHeaderUnique="+TableManualReceiptUnique;
										posData.TableManualOpenReceipt(postdata)
										.success(function(data){
											if( CountReceipts > 1 ){
												$window.location = base_url + "pos/pointofsale/split-check";
											}else{
												load_data(data);
											}
										})
									})
									$("#table_manual_keyin").jqxWindow('close');
									return false;
								}
								
								// Active Status
								if(ReceiptStatus == 1){
									// Previous Receipt needs to Completed
									if(CountItem > 0 && CurrentBalance == 0){
										var postdata ="ReceiptHeaderUnique="+TableManualReceiptUnique;
										posData.TableManualOpenReceipt(postdata)
										.success(function(data){
											if( CountReceipts > 1 ){
												$window.location = base_url + "pos/pointofsale/split-check";
											}else{
												load_data(data);
											}
										})
									// Previous Receipt needs to On Hold
									}else if(CountItem > 0 && CurrentBalance > 0){
										posData.TableManualPreviousReceiptOnHold()
										.success(function(data){
											var postdata ="ReceiptHeaderUnique="+TableManualReceiptUnique;
											posData.TableManualOpenReceipt(postdata)
											.success(function(data){
												if( CountReceipts > 1 ){
													$window.location = base_url + "pos/pointofsale/split-check";
												}else{
													load_data(data);
												}
											})
										})
									}
								// Completed Status
								}else if(ReceiptStatus == 4){
									posData.TableManualPreviousReceiptCompleted()
									.success(function(data){
										posData.TableManualOpenReceipt(postdata)
										.success(function(data){
											if( CountReceipts > 1 ){
												$window.location = base_url + "pos/pointofsale/split-check";
											}else{
												load_data(data);
											}
										})
									})
								}
							}
						}
					})
					
					$("#table_manual_keyin").jqxWindow('close');
				}else{
					NumpadAlertClose('cannot_open_receipt', result.msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					})
				}
			})
		}else{
			alert("Sorry, we encountered a technical difficulties\nPlease try again later.");
		}
		CombineTable = false;
	})

	$(document).on('click', '#table_manual_combine_yes', function(e){
		e.preventDefault();
		var ref = $("#reference1").val();
		var postdata ="TableUnique="+ManualTableUnique;
			postdata+="&ReceiptHeaderUnique="+ref;
		posData.TableManualCombineTables(postdata)
		.success(function(data){
			$rootScope.$emit('CallLoadHeaderInformation');
			$("#table_manual_combine").jqxWindow('close');
			$("#table_manual_keyin").jqxWindow('close');
			posData.ClearAll(postdata)
			.success(function(data2){
				$window.location = base_url + "pos/pointofsale/split-check";
			})
		})
    })

    $(document).on('click', '#table_manual_combine_cancel', function(e){
        e.preventDefault();
        $("#table_manual_combine").jqxWindow('close');
	})

	$(document).on('click', '#tbl_reopen_receipt', function(e){
		e.preventDefault();
		var TableManualReceiptHeaderUnique = TableManualReceiptHeaderUniqueGlobal;
		var CountItem 		= $scope.OrderedItemCount;
		var ReceiptStatus 	= $scope.ReceiptStatus;
		var CurrentBalance 	= $scope.ReceiptCurrentBalance;
		var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
		
		// Set Receipt Status to 0
		if(CountItem == 0){
			posData.TableManualPreviousReceiptSetStatus()
			.success(function(data){
				// Open Table
				var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
				posData.TableManualOpenReceipt(postdata)
				.success(function(data){
					if(  $("#TableSplitCheck").val() == 1 ){
                        $window.location = base_url + "pos/pointofsale/split-check";
                    }else{
						load_data(data);
					}
				})
			})
			$("#table_manual_keyin").jqxWindow('close');
			$("#qrc_alert_message").jqxWindow('close');
			return false;
		}
		
		// Active Status
		if(ReceiptStatus == 1){
			// Previous Receipt needs to Completed
			if(CountItem > 0 && CurrentBalance == 0){
				var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
				posData.TableManualOpenReceipt(postdata)
				.success(function(data){
					load_data(data);
				})
			// Previous Receipt needs to On Hold
			}else if(CountItem > 0 && CurrentBalance > 0){
				posData.TableManualPreviousReceiptOnHold()
				.success(function(data){
					var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
					posData.TableManualOpenReceipt(postdata)
					.success(function(data){
						load_data(data);
					})
				})
			}
		// Completed Status
		}else if(ReceiptStatus == 4){
			posData.TableManualPreviousReceiptCompleted()
			.success(function(data){
				posData.TableManualOpenReceipt(postdata)
				.success(function(data){
					load_data(data);
				})
			})
		}
		
		$("#table_manual_reopen").jqxWindow('close');
		$("#table_manual_keyin").jqxWindow('close');
		$("#qrc_alert_message").jqxWindow('close');
	})

	$(document).on('click', '#table_manual_reopen_yes', function(e){
		e.preventDefault();
		var TableManualReceiptHeaderUnique = $("#table_manual_reopen_receipt_header_unique").val();
		var CountItem 		= $scope.OrderedItemCount;
		var ReceiptStatus 	= $scope.ReceiptStatus;
		var CurrentBalance 	= $scope.ReceiptCurrentBalance;
		var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
		posData.TableManualCheckReceiptStatus(postdata)
		.success(function(data){
			if(data.result.reopen == false){
				if(data.result.open == true){
					var msg = data.result.msg;
					NumpadAlertClose('table_manual_msg', msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}else{
					// Set Receipt Status to 0
					if(CountItem == 0){
						posData.TableManualPreviousReceiptSetStatus()
						.success(function(data){
							// Open Table
							var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
							posData.TableManualOpenReceipt(postdata)
							.success(function(data){
								load_data(data);
							})
						})
						$("#table_manual_keyin").jqxWindow('close');
						return false;
					}
					
					// Active Status
					if(ReceiptStatus == 1){
						// Previous Receipt needs to Completed
						if(CountItem > 0 && CurrentBalance == 0){
							var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
							posData.TableManualOpenReceipt(postdata)
							.success(function(data){
								load_data(data);
							})
						// Previous Receipt needs to On Hold
						}else if(CountItem > 0 && CurrentBalance > 0){
							posData.TableManualPreviousReceiptOnHold()
							.success(function(data){
								var postdata ="ReceiptHeaderUnique="+TableManualReceiptHeaderUnique;
								posData.TableManualOpenReceipt(postdata)
								.success(function(data){
									load_data(data);
								})
							})
						}
					// Completed Status
					}else if(ReceiptStatus == 4){
						posData.TableManualPreviousReceiptCompleted()
						.success(function(data){
							posData.TableManualOpenReceipt(postdata)
							.success(function(data){
								load_data(data);
							})
						})
					}
				}
			}
		})
		$("#table_manual_reopen").jqxWindow('close');
		$("#table_manual_keyin").jqxWindow('close');
	})

	$(document).on('click', '#table_manual_reopen_no', function(e){
		e.preventDefault();
		$("#table_manual_reopen").jqxWindow('close');
	})

	$(document).on('submit', '#OrderTypePopupAppNewSale', function(e){
		e.preventDefault();
		var OrderTypeNo = $('input[type=radio][name=group1]:checked').attr('id');
		OrderTypeName = $("#"+OrderTypeNo).closest('label').text();
		SetOrderTypeNo = OrderTypeName;
		var postdata ="OrderTypeNo="+OrderTypeName;
		posData.UpdateOrderType(postdata)
		.success(function(data){
			$("#ordertype-popup").jqxWindow('close');
			$("#customercount").trigger('click');
			ordertype2();
		})
	})


	var index = 0,
	ordertypelist = [],
	ordertypeid = [],
	ordertyperef = [],
	OrderTypeDefault = '';
	var ordertype2 = function(){
		var def = $.Deferred();
		ordertypelist = [];
		ordertypeid = [];
		ordertyperef = [];
		
		posData.OrderTypeList()
		.success(function(data){
			$.each(data, function(index, value){
				ordertypelist.push(value.Type);
				ordertypeid.push(value.Unique);
				ordertyperef.push(value.Description);
				if(value.Default == 1){
					if(value.CurrentType == null){
						OrderTypeDefault = value.Type;
					}else{
						OrderTypeDefault = value.CurrentType;
					}
				}
			})
			def.resolve(data);
		}).then(function(){
			var ordertypelistIndex = ordertypelist.indexOf(OrderTypeDefault);
			var SelectedOrderType = ordertypeid[ordertypelistIndex];
			var ordertypeRef = ordertyperef.indexOf(OrderTypeDefault);
			$("#OrderType").val(SelectedOrderType);
			$("#OrderType").text(OrderTypeDefault);
			$("#OrderTypeName").val(ordertypeRef);
			ordertypeSel =  ordertypeid[ordertypelistIndex];
			ordertypeSelName = ordertyperef.indexOf(OrderTypeDefault);
		})
		return def.promise();
	}

	/*
	|---------------------------------------------------------------------------
	| Click Assign Table
	|---------------------------------------------------------------------------
	*/
	var TableId = 0;
	var TableDineIn = function(){
		$(document).one('click', '.TableDineIn', function(e){
			e.preventDefault();
			var TableDineInSplit = $(this).attr('id');
			var id = TableDineInSplit.split("=")[0];
			var tableno = TableDineInSplit.split("=")[1];
			$http({
				method: 'get',
				url: base_url+'pos/pointofsale/tables/get-current-user'
			}).success(function(data){
				if(data.success){
					var TableCustomerNo = $("#TableCustomerNo").val();
					var postdata = "TableUnique="+id;
					if(TableCustomerNo == 0){
						posData.SelectTableWithoutCustomerNo(postdata)
						.success(function(data2){
							CurrentTableUnique = data2.CurrentTableUnique;
							if(data2.table_assign){
								if($("#TableOrder").val() == 1){
									if($("#PoleDisplay").val() == 2){
										if(ConnectionPoleDisplay){
											if(tableconn){
												tableconn.send(JSON.stringify(["TableClickedAssigned", LastSectionSelected]));
											}
										}
									}
								}
								LoadHeaderInfo();
								$('#table_dine_in').jqxWindow('close');
							}else{
								var msg = 'Receipt '+data2.ReceiptNo+' assigned to '+data2.TableNoFrom+'<br/>';
									msg+= '<br/>';
									msg+= 'Transfer to '+data2.TableNoTo+'?';
								NumpadAlertYesNo('receipt_transfer_table_without_no_customer', msg)
								.then(function(){
									$("#use_value").val(id);
									WindowPopupAlertYesNo('Question');
								})
							}
						})
					}else{
						//--> Prompt No of Customer.
						posData.CheckReceiptTableExist(postdata)
						.success(function(data3){
							if(data3.table_exist == false){
								NumpadCustomerCount('select_table_with_customer_no', 'Table '+data3.TableNoTo+' Enter # of Customers')
								.then(function(){
									TableId = id;
									WindowPopupCustomerCount()
									.then(function(){
										var ParentWidth = $("#dine-in-tables-panel").width();
										var ComputeWidth = (ParentWidth / 3);
										var UseWidth = (ComputeWidth);

										$("#customer_count_numpad").jqxWindow({position: { x: ComputeWidth, y: 50 }});

										$("#quantity_field").val( $("#customer_count").text() );
										$("#quantity_field").jqxNumberInput('focus');
										setTimeout(function(){
											var input = $('#quantity_field input')[0];
											if('selectionStart' in input) {
												input.setSelectionRange(0, 0);
											}else{
												var range = input.createTextRange();
												range.collapse(true);
												range.moveEnd('character', 0);
												range.moveStart('character', 0);
												range.select();
											}
											setTimeout(function(){
												$("#quantity_field input").select();
											},100);
										})
									})
								})

							}else{
								var msg = 'Receipt '+data3.ReceiptNo+' assigned to '+data3.TableNoFrom+'<br/>';
									msg+= '<br/>';
									msg+= 'Transfer to '+data3.TableNoTo+'?';
								NumpadAlertYesNo('receipt_transfer_table_with_no_customer', msg)
								.then(function(){
									$("#use_value").val(data3.TableNoTo);
									$("#use_value2").val(id);
									WindowPopupAlertYesNo('Question');
								})
							}	
						})
					}
					setTimeout(function(){
						TableDineIn();
					},1000);
				}else{
					TableId = id;
					NumpadPasscode('table_login_user_open_table')
					.then(function(){
						WindowPopupPasscode('User Passcode')
						.then(function(){
							setTimeout(function(){
								TableDineIn();
							},1000);
							$("#number_field").focus();
						})
					})
				}
			})
		})
	}

	TableDineIn();

	$(document).on('submit', '#assign_receipt_totable', function(e){
		e.preventDefault();
		var postdata ="ParentReceiptHeaderUnique="+TableReceiptHeaderUnique;
			postdata+="&ParentTableUnique="+TableId;
		posData.AssignReceiptUniqueToTable(postdata)
		.success(function(data){
			var postdata="ReceiptHeaderUnique="+data.CurrentReceiptHeaderUnique;
			posData.KitchenPrintReceipt(postdata)
			.success(function(kpdata){
				var postdata="ReceiptHeaderUnique="+TableReceiptHeaderUnique;
					postdata+="&TableUnique="+TableId;
				posData.ClearAll(postdata)
				.success(function(data3){
					if(data3.count > 1){
						$window.location = base_url + "pos/pointofsale/split-check";
					}else{
						load_data(data3);
						$("#table_dine_in").jqxWindow('close');
						// GetCustomerSave();
						$scope.BtnPaymentWhen = false;
						PoleDisplay(data.ReceiptDetailsUnique);
						$("#barcode_search").attr("disabled", false);
						$("#barcode_search").focus();
					}
				})
			})
			$("#dialog-numpad-alert").jqxWindow('close');
		})
	})

	$(document).on('click', '#pos_quick_recall_close', function(e){
		e.preventDefault();
		$("#on-hold-sale").jqxWindow('close');
	})

	$(document).on('click', '#pos_customer_close', function(){
		$("#pos_customer_search").jqxWindow('close');
	})

	$(document).on('click', '#pos_inventory_close', function(){
		$("#search-inventory-item-dialog").jqxWindow('close');
	})

	//-->Put On Hold Sale 12*04*17
	$scope.PutOnHoldLogo = function(){
		// $scope.newsaleqshowModal = !$scope.newsaleqshowModal;
		var postdata ="FunctionButton=OnHold";
		posData.CheckUserManagerCookie(postdata)
		.success(function(data){
			if(data.prompt){
				$scope.FunctionButton = 'OnHold';
				NumpadPasscode('putonhold_passcode_logo')
				.then(function(){
					WindowPopupPasscode('Put On Hold')
					.then(function(){
						$("#number_field").focus();
					})
				})
				$("#OnHoldfunction").attr("disabled", false);
			}else{
				var OrderTypePopup = $("#POSOrderTypeRequired").val();
				if(OrderTypePopup > 0){
					if($("#OrderTypeName").val() <= 0){
						posData.OrderTypePopupList()
						.success(function(data){
							if(data.OrderType == null || data.OrderType == ''){
								OrderTypeIDApp = data.Default;
								OrderTypeWindowApp('OrderTypePopupPutOnHoldLogo', data.html)
								.then(function(){
									WindowPopupOrderTypeApp('Order type')
								})
							}else{
								PutOnHoldLogoFunction();
							}
						})
					}else{
						PutOnHoldLogoFunction();
					}
				}else{
					PutOnHoldLogoFunction();
				}
			}
		})
	};

	var PutOnHoldLogoFunction = function(){
		$scope.newsaleqshowModal = false;
		posData.CheckSettingRequiredLabel()
		.success(function(data){
			if(data.OnHoldRequireLabel !== '1'){
				PutOnHoldReceiptLogo()
			}else{
				$("#custom_item_keyboard").html('');
				var type = 7;
				posData.CheckReceiptNote()
				.success(function(data){
					if(data.RNotes == '' || data.RNotes == null){
						NumpadKeyboard('receipt_note_form_onhold_logo')
						.then(function(){
							WindowPopupKeyboard('Receipt Note | Receipt# '+data.ReceiptNo)
							.then(function(){
								setTimeout(function(){
									var searchInput = $('#search_field');
									var strLength = searchInput.val(data.RNotes).length * 25;
									searchInput.focus();
									searchInput[0].setSelectionRange(strLength, strLength);
								},100);
							})
						})
					}else{
						PutOnHoldReceiptLogo()
					}
				})
			}
		})
	}

	var PutOnHoldReceiptLogo = function(){
		var def = new $.Deferred();
		setTimeout(function(){
		var postData="ReceiptHeaderUnique="+$scope.QueReceiptHeaderUnique;
			posData.PutOnHoldLogo(postData)
			.success(function(data){
				$window.location = base_url + 'pos/cashier';
			})
		},100);
		return def.promise();
	}

	$(document).on('submit', '#putonhold_passcode_logo', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var OrderTypePopup = $("#POSOrderTypeRequired").val();
						if(OrderTypePopup > 0){
							if($("#OrderTypeName").val() <= 0){
								posData.OrderTypePopupList()
								.success(function(data){
									OrderTypeIDApp = data.Default;
									OrderTypeWindowApp('OrderTypePopupPutOnHoldLogo', data.html)
									.then(function(){
										WindowPopupOrderTypeApp('Order type')
									})
								})
							}else{
								PutOnHoldLogoFunction();
							}
						}else{
							PutOnHoldLogoFunction();
						}
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on("submit", "#OrderTypePopupPutOnHoldLogo", function(e){
		e.preventDefault();
		if(OrderTypeIDApp > 0){
			$("#OrderType").val(OrderTypeIDApp);
			$("#ordertype-popup").jqxWindow('close');
			var postdata ="OrderTypeUnique="+OrderTypeIDApp;
			posData.SetOrderType(postdata)
			.success(function(data){
				PutOnHoldLogoFunction();
			})
		}else{
			var msg = "Select Order Type";
			NumpadAlertClose('ordertype_options', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			});
		}
	})

	$(document).on('submit', '#receipt_note_form_onhold_logo', function(e){
		e.preventDefault();
		var p = new SwipeParserObj($("#search_field").val());
		if( p.hasTrack1 ){
			p.account_name;
			p.surname;
			p.firstname;
			p.account;
			p.exp_month + "/" + p.exp_year;
			var creditholdername = p.account_name.replace('/', ' ')
			creditholdername = creditholdername.trim();
			$("#search_field").val(creditholdername);
			var splitName = p.account_name.split('/');
			var postdata ="FirstName="+splitName[1];
				postdata+="&LastName="+splitName[0];
			posData.SwipeCreateCustomer(postdata)
			.success(function(data){
				
			})
		}
		var postData="receiptnotemsg=" +$("#search_field").val();
			postData+="&ReceiptHeaderUnique="+$("#note_receipt_header_unique").val();
		posData.SaveRNoteMsg(postData)
		.success(function(data){
			if(data.success == true){
				$("#dialog-numpad-keyboard").jqxWindow('close');
				$("#price_numpad").html('');
				$("#custom_item_keyboard").html('');
				$("#receiptlabel").text(data.LabelNote);
				PutOnHoldLogoFunction();
			}
		})
	})

	$(document).on('click', '#accept_return_print', function(){
		$("#accept_return_print").attr('disabled', true);
		var rowindex = $('#AcceptReturnGrid').jqxGrid('getselectedrowindex');
		if(rowindex >= 0){
			var row = $("#AcceptReturnGrid").jqxGrid('getrowdata', rowindex);
			var postdata ="ReceiptHeaderUnique="+row.Unique;
			posData.ReprintReceiptReturnExchange(postdata)
			.success(function(data){
				if(data.Print == false){
					var msg = data.PrinterNotWorking;
					NumpadAlertClose('print_failed', msg)
					.then(function(){
						WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
					});
				}
			})
		}else{
			var msg = "Select receipt to print";
			NumpadAlertClose('ordertype_options', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>');
			});
		}
		setTimeout(function(){
			$("#accept_return_print").attr('disabled', false);
		},1000);
	})

	var QuantityBeforeFloat = function(){
		$("#quantity_before_popup").jqxWindow({
			height: 200,
			width: 200,
			isModal: true,
			theme: 'darkblue',
			showCloseButton: true,
			resizable: false,
			draggable: false,
			showAnimationDuration: 0,
			closeAnimationDuration: 0	
		});
	}

	

	var links = [
		{
			"bgcolor":"red",
			"icon":"1"
		},
		{
			"url":"http://www.example.com",
			"bgcolor":"red",
			"color":"#fffff",
			"icon":"<i class='fa fa-phone'></i>",
			"target":"_blank"
		},
		{
			"url":"http://www.example.com",
			"bgcolor":"black",
			"color":"white",
			"icon":"<i class='fa fa-music'></i>"
		}
	]
	$('.kc_fab_wrapper').kc_fab(links);
	$( ".kc_fab_wrapper" ).draggable();


	var populateNumpadTestPriceChange = function(){
		var def = $.Deferred();
		$("#test_price_change").append('<div id="test_price_change_container" style="background: #144766; color:#EEE;"></div>');
		$("#test_price_change_container").html('');
		$("#test_price_change_container").append(
			'<form id="test_price_change_form">'+
				'<div id="test_price_change_input" class="hdfield"></div>'+
				'<div id="testnumpadkeyboard"></div>'+
			'</form>'
		);

		$("#test_price_change_input").jqxNumberInput({ width: '100%', height: '35px', inputMode: 'simple', spinButtons: false, decimalDigits: $("#DecimalsPrice").val()});
		$('#test_price_change_input').on('change', function (event) {
			var value = event.args.value;
			var type = event.args.type; // keyboard, mouse or null depending on how the value was changed.
			myNumber = value;
		}); 
		
		setTimeout(function(){
			def.resolve();
		},100)
		return def.promise();
	}

	var WindowTestPriceChange = function(){
		$("#test_price_change").jqxWindow({
			height: 750,
			width: 300,
			title: 'Test Price Change',
			isModal: true,
			theme: 'darkblue',
			showCloseButton: true,
			resizable: false,
			showAnimationDuration: 0,
			closeAnimationDuration: 0
		});
		$("#test_price_change").jqxWindow('open');
	}

	var NumpadTestPriceChange = function(){
		var def = $.Deferred();
		populateNumpadTestPriceChange()
		.then(function(){
			$('#testnumpadkeyboard').numeric_numpad({
				layout: 'numeric',
				input: $('#test_price_change_input')
			});
			def.resolve();
		})
		return def.promise();
	}


	$("#TestPriceChange").on('click', function(e){
		e.preventDefault();
		NumpadTestPriceChange()
		.then(function(){
			WindowTestPriceChange();
		})
	})

	// $("#currentBeforeQty").text('CLR');
	var QtyBufferPanel = '';
	var QtyBufferReset = '';
	$scope.ctrQty = function(num){
		
		if(parseInt(QtyBufferPanel) > 99){
			QtyBufferReset = ''; 
			QtyBufferPanel = '';
			BEFOREQUANTITY = '';
			// return false;
		}

		if(num == 0){
			// console.log("here");
			// QtyBufferReset = QtyBufferReset +''+ num;
			// if(QtyBufferReset.length > 2){
			// 	BEFOREQUANTITY = 0;
			// 	QtyBufferReset = '';
			// 	QtyBuffer = '';
			// 	$("#currentBeforeQty").text('CLR');
			// 	return false;
			// }
			// console.log(QtyBufferReset);
			if(QtyBufferPanel == 0){
				$("#currentBeforeQty").text('CLR');
				return false;
			}
		}

		QtyBufferReset = '';
		QtyBufferPanel = QtyBufferPanel +''+ num;
		BEFOREQUANTITY = parseInt(QtyBufferPanel, 10);
		$("#currentBeforeQty").text(BEFOREQUANTITY);
	}

	$scope.BeforeQtyReset = function(){
		BEFOREQUANTITY = 0;
		$("#currentBeforeQty").text(BEFOREQUANTITY);
	}

	$("#currentBeforeQty").on('click', function(){
		BEFOREQUANTITY = 0;
		QtyBufferPanel = '';
		QtyBufferReset = '';
		$("#currentBeforeQty").text('CLR');
	})

	var DiscountPromoNumber;
	var ScanPromoDiscount = (row) => {
		DiscountReceiptBelowCostSellPrice = parseFloat(row.promo_data.RewardAmount).toFixed(2);
		DiscountType = row.promo_data.DiscountType;
		DiscountName = row.promo_data.Description;
		DiscountItemUnique = row.promo_data.Unique;
		DiscountUnique = row.promo_data.DiscountUnique;
		DiscountPromoNumber = row.promo_data.PromoNumber;
		var postdata ="&NewPrice="+parseFloat(row.promo_data.RewardAmount).toFixed(2);
			postdata+="&DiscountType="+row.promo_data.DiscountType;
		posData.DiscountPromoBelowCost(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
					$('#dialog-numpad-discount').jqxWindow('close');
				})
			}else{
				var	postdata ="SellPrice="+parseFloat(row.promo_data.RewardAmount).toFixed(2);
					postdata+="&DiscountType="+row.promo_data.DiscountType;
					postdata+="&DiscountName="+row.promo_data.Description;
					postdata+="&ItemUnique="+row.promo_data.Unique;
					postdata+="&DiscountUnique="+row.promo_data.DiscountUnique;
					postdata+="&PromoNumber="+row.promo_data.PromoNumber;
				posData.SavePromoDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						// GetCustomerSave();
						load_data(data);
						setTimeout(function(){
							GetSelectedCustomer();
						},500);
						$scope.BtnPaymentWhen = false;
						PoleDisplayTotal();
						Qquestion = 0;
					}else{
						var msg = data.msg;
						NumpadAlertClose('set_discount_from_list', msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
							.then(function(){
								$(".alert_close").focus();
							})
						})
					}
				})
			}
		})
	}

	$(document).on('click', '#discount_promo_below_cost_no', function(){
		$("#sell_below_cost").jqxWindow('close');
	})

	var populatePromoDetails = () => {
		def = $.Deferred();
		setTimeout(function(){
			$("#promo_details").append('<div id="promo_details_container" style="background: #144766; color:#EEE;"></div>');
			$("#promo_details_container").html(
				'<div>'+
					'<div style="float:left; width: 70%;">'+
						'<script type="text/javascript">'+
							'function KeyPress(e) {'+
								'var evtobj = window.event? event : e;'+
								'if (evtobj.keyCode == 66 && evtobj.ctrlKey) $("#promocode_search").focus()'+
							'}'+
							'document.onkeydown = KeyPress;'+
						'</script>'+
						'<form id="SearchPromoCode">'+
							'<div class="input-group" style="float: left; width:60%; padding:0 0 10px 0;">'+
								'<input type="search" class="form-control" id="promocode_search" placeholder="Scan or Enter Promo Code"/>'+
								'<div class="input-group-btn">'+
									'<button type="submit" class="btn btn-primary" focusInput="true" title="Search" style="margin-right:5px;"></i><span class="glyphicon glyphicon-search"></span></button>'+
								'</div>'+
							'</div>'+
							'<div style="float: left; width:40%; padding:0 0 10px 0;">'+
								'<button type="button" class="btn btn-info" title="Select" style="margin-right:5px;" id="promo_selected">Select</button>'+
							'</div>'+
						'</form>'+
					'</div>'+
					'<div id="PromoDiscountGrid"></div>'+
				'</div>'	
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPromoDetails = () => {
		def = $.Deferred();
		setTimeout(function(){
			var ParentWidth = $("#ScreenResolutionWidth").val();
			var ParentHeight = $("#ScreenResolutionHeight").val();
			var POSView = $(".pos-view").width() + 'px';
			var Container = $(".container-fluid").height() + 'px';
			$("#promo_details").jqxWindow({
				minWidth: POSView,
				minHeight: Container,
				title: '<button id="promo_lookup_close" class="glyphicon glyphicon-remove" style="float:left; background-color: #449bca; width: auto;" title="Close"></button>&nbsp;Promo Lookup',
				isModal: true,
				theme: 'darkblue',
				draggable: false,
				resizable: false,
				showCloseButton: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { x: 0, y: 50 },
			})
			$('#promo_details').jqxWindow('open');
			def.resolve();
		},100);
		return def.promise();
	}

	var NumpadPromoDiscount = function(){
		var def = $.Deferred();
		populatePromoDetails()
		.then(function(){
			def.resolve();
		});
		return def.promise();
	}

	$scope.PromoLookUp = () => {
		NumpadPromoDiscount()
		.then(function(){
			WindowPromoDetails()
			.then(function(){
				PromoGrid([])
				.then(function(){
					$("#promocode_search").focus();
				})
			})
		})
	}

	var PromoGrid = (data) => {
		var def = $.Deferred();
		var source = {
			datatype: "json",
			datafields: [
				{name: 'ID', type: 'int'},
				{name: 'RewardNumber', type: 'int'},
				{name: 'RewardAmount', type: 'float'},
				{name: 'RewardExpiration', type: 'date'},
				{name: 'RewardReceipt', type: 'string'},
				{name: 'RewardLocation', type: 'string'},
				{name: 'RewardBy', type: 'string'},
				{name: 'Status', type: 'string'},
				{name: 'RedeemDate', type: 'date'},
				{name: 'RedeemLocation', type: 'string'},
				{name: 'RedeemReceipt', type: 'string'},
				{name: 'DiscountType', type: 'string'},
				{name: 'Description', type: 'string'},
				{name: 'ItemUnique', type: 'int'},
				{name: 'DiscountUnique', type: 'int'},
				{name: 'PromoNumber', type: 'int'},
				{name: 'RedeemReceiptDetailsUnique', type: 'int'},
				{name: 'RedeemReceiptPaymentUnique', type: 'int'}
			],
			localdata: data.promo
		};
		var dataAdapter = new $.jqx.dataAdapter(source);

		var GridWidth = $("#promo_details_container").width();
		var GridHeight = $("#promo_details_container").height();

		var ParentWidth = $("#ScreenResolutionWidth").val();
		var ParentHeight = $("#ScreenResolutionHeight").val();
		var NewGridHeight = GridHeight - 60
		if(ParentWidth == '1024'){
			NewGridHeight = GridHeight - 120;
		}

		$("#PromoDiscountGrid").jqxGrid({
			width: '100%',
			height: NewGridHeight,
			source: dataAdapter,
			columnsresize: true,
			theme: 'ui-light',
			pageable: true,
			pagermode: 'advanced',
			pagesize: 50,
			filterable: true,
			filtermode: 'excel',
			columns: [
				{text: 'ID', datafield: 'ID', width: '8%', filtertype: 'number'},
				{text: 'Barcode', datafield: 'RewardNumber', width: '10%', filtertype: 'number'},
				{text: 'Amount', datafield: 'RewardAmount', width: '8%', cellsformat: 'd2', cellsalign: 'right', align: 'center', filtertype: 'number'},
				{text: 'Expiration', datafield: 'RewardExpiration', width: '10%', cellsformat: 'MM/dd/yyyy', align: 'center', cellsalign: 'center', filtertype: 'input'},
				{text: 'Receipt#', datafield: 'RewardReceipt', width: '10%', align: 'center', cellsalign: 'center', filtertype: 'input'},
				{text: 'Location', datafield: 'RewardLocation', width: '6%', align: 'center', cellsalign: 'center', filtertype: 'input'},
				{text: 'Employee', datafield: 'RewardBy', width: '10%', align: 'center', cellsalign: 'center', filtertype: 'input'},
				{text: 'Status', datafield: 'Status', width: '10%', align: 'center', cellsalign: 'center', filtertype: 'checkbox'},
				{text: 'Date', datafield: 'RedeemDate', width: '10%', cellsformat: 'MM/dd/yyyy', columngroup: 'Redeem', align: 'center', cellsalign: 'center', filtertype: 'input'},
				{text: 'Location', datafield: 'RedeemLocation', width: '8%', columngroup: 'Redeem', align: 'center', cellsalign: 'center', filtertype: 'input'},
				{text: 'Receipt#', datafield: 'RedeemReceipt', width: '10%', columngroup: 'Redeem', align: 'center', cellsalign: 'center', filtertype: 'input'}
			],
			columngroups: [
				{text: 'Redeem', align: 'center', name: 'Redeem'}
			]
		})

		setTimeout(function(){
			def.resolve();
		},100);
		return def.promise();
	}

	var PromoGridIndex;
	$(document).on('rowselect', '#PromoDiscountGrid', function (event) {
		// event arguments.
		var args = event.args;
		// row's bound index.
		var rowBoundIndex = args.rowindex;
		// row's data. The row's data object or null(when all rows are being selected or unselected with a single action). If you have a datafield called "firstName", to access the row's firstName, use var firstName = rowData.firstName;
		var rowData = args.row;
		PromoGridIndex = rowBoundIndex;
	});

	$(document).on('rowdoubleclick', '#PromoDiscountGrid', function (event) {
		var data = $('#PromoDiscountGrid').jqxGrid('getrowdata', PromoGridIndex);
		if(data.RedeemReceiptDetailsUnique != null && data.RedeemReceiptPaymentUnique == null){
			var msg = 'Coupon Discount is already in use';
			NumpadAlertClose('discount_promo_status', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			return false;
		}else if(data.RedeemReceiptDetailsUnique != null && data.RedeemReceiptPaymentUnique != null){
			var msg = 'Coupon Discount has been redeemed';
			NumpadAlertClose('discount_promo_status', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			return false;
		}

		if(data.Status == 'Expired'){
			var msg = 'Coupon Discount has already expired';
			NumpadAlertClose('discount_promo_status', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			return false;
		}

		ScanPromoDiscountSelect(data);
	});

	$(document).on('click', '#promo_lookup_close', function(){
		$("#promo_details").jqxWindow('close');
	})

	$(document).on('submit', '#SearchPromoCode', function(e){
		e.preventDefault();
		var SearchPromoBarcode = $("#promocode_search").val();
		if(!SearchPromoBarcode){
			return false;
		}
		var postdata ="PromoNumber="+SearchPromoBarcode;
		posData.GetPromoList(postdata)
		.success(function(data){
			PromoGrid(data)
			.then(function(){
				$('#PromoDiscountGrid').jqxGrid('selectrow', 0);
				// $('#PromoDiscountGrid').jqxGrid('autoresizecolumns');
			})
			$("#promocode_search").val('');
		})
	})

	$(document).on('click', '#promo_selected', function(){
		var data = $('#PromoDiscountGrid').jqxGrid('getrowdata', PromoGridIndex);
		if(data.RedeemReceiptDetailsUnique != null && data.RedeemReceiptPaymentUnique == null){
			var msg = 'Coupon Discount is already in use';
			NumpadAlertClose('discount_promo_status', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			return false;
		}else if(data.RedeemReceiptDetailsUnique != null && data.RedeemReceiptPaymentUnique != null){
			var msg = 'Coupon Discount has been redeemed';
			NumpadAlertClose('discount_promo_status', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			return false;
		}

		if(data.Status == 'Expired'){
			var msg = 'Coupon Discount has already expired';
			NumpadAlertClose('discount_promo_status', msg)
			.then(function(){
				WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
				.then(function(){
					$(".alert_close").focus();
				})
			})
			return false;
		}
		
		ScanPromoDiscountSelect(data);
	})

	var ScanPromoDiscountSelect = (row) => {
		DiscountReceiptBelowCostSellPrice = parseFloat(row.RewardAmount).toFixed(2);
		DiscountType = row.DiscountType;
		DiscountName = row.Description;
		DiscountItemUnique = row.ItemUnique;
		DiscountUnique = row.DiscountUnique;
		DiscountPromoNumber = row.PromoNumber;
		var postdata ="&NewPrice="+parseFloat(row.RewardAmount).toFixed(2);
			postdata+="&DiscountType="+row.DiscountType;
		posData.DiscountPromoBelowCost(postdata)
		.success(function(data){
			if(data.belowcost){
				populateSellBelowCostWindow(data.html)
				.then(function(){
					WindowBelowCost(data.Description);
					$('#dialog-numpad-discount').jqxWindow('close');
				})
				$("#promo_details").jqxWindow('close');
			}else{
				var	postdata ="SellPrice="+parseFloat(row.RewardAmount).toFixed(2);
					postdata+="&DiscountType="+row.DiscountType;
					postdata+="&DiscountName="+row.Description;
					postdata+="&ItemUnique="+row.ItemUnique;
					postdata+="&DiscountUnique="+row.DiscountUnique;
					postdata+="&PromoNumber="+row.PromoNumber;
				posData.SavePromoDiscount(postdata)
				.success(function(data){
					if(data.success == true){
						// GetCustomerSave();
						load_data(data);
						setTimeout(function(){
							GetSelectedCustomer();
						},500);
						$scope.BtnPaymentWhen = false;
						PoleDisplayTotal();
						Qquestion = 0;
					}else{
						var msg = data.msg;
						NumpadAlertClose('set_discount_from_list', msg)
						.then(function(){
							WindowPopupAlert('<span class="glyphicon glyphicon-exclamation-sign"></span>')
							.then(function(){
								$(".alert_close").focus();
							})
						})
					}
					$("#promo_details").jqxWindow('close');
				})
			}
		})
	}

	function Validate() {
        var isValid = false;
        var regex = /^[0-9\s]*$/;
        isValid = regex.test(document.getElementById("TextBox1").value);
        document.getElementById("spnError").style.display = !isValid ? "block" : "none";
        return isValid;
	}
	
	$(document).on(
		'click', '#remove_multiple_check_all',
		function(event){
			if( $("#remove_multiple_checkbox").is(":checked") == false ){
				$("#remove_multiple_checkbox").prop("checked", true);
				$('.remove_multiple_item').prop('checked', true);
				$(this).html('<input type="checkbox" id="remove_multiple_checkbox"  class="radio1" title="Check / Deselect all" readonly checked/>Deselect All');
			}else{
				$("#remove_multiple_checkbox").prop("checked", false);
				$('.remove_multiple_item').prop('checked', false);
				$(this).html('<input type="checkbox" id="remove_multiple_checkbox"  class="radio1" title="Check / Deselect all" readonly/>Select All');
			}
		}
	)

	$(document).on('click', '#btn-recall-screen-close', function(e){
		e.preventDefault();
		$("#messageNotification").jqxNotification("closeAll");
		$("#on-hold-sale").jqxWindow('close');
	})

	// Set on page loads
	var WindowWidth = $(window).width();
	var WindowHeight = $(window).height();
	// setTimeout(function(){

		// $("#barcode_search").val(WindowWidth +','+ WindowHeight);
	// },2000);
	if(WindowWidth < 1008){
			$(".QuantityPanel").hide();
	}else{
			$(".QuantityPanel").show();
	}
	
	// Set when resize the browser or chrome app.
	$(window).resize(function() {
		var WindowWidth = $(window).width();
		var WindowHeight = $(window).height();
		// $("#barcode_search").val(WindowWidth +','+ WindowHeight);
		if(WindowWidth < 1008){
			$(".QuantityPanel").hide();
		}else{
			$(".QuantityPanel").show();
		}
	});
	

	var populateDiscountItemContentWindow = (form, typed_discount, sign) => {
		var def = $.Deferred();
		setTimeout(function(){
			// var computeDiscount = parseFloat( $("#ReceiptDiscountView").text() ) /  parseFloat( $("#ReceiptTotalView").text() );
			var computeDisc = (parseFloat(getItemInformation[3]) / parseFloat(getItemInformation[1]) * 100);
			//var computeDiscount = parseFloat( $("#ReceiptDiscountView").text() ) /  parseFloat( $("#ReceiptTotalView").text() );
			$("body").append(
				'<div id="discount_content" style="display:none; background: #144766; color: #EEE; box-shadow: 5px 5px 10px #000;">'+
					'<div id="discount_content_container" style="background: #144766; color:#EEE;">'+
						'<div class="_discount_content _discount_content_description">'+getItemInformation[0]+'</div>'+
						'<div class="_discount_content">'+
							'<div class="_discount_content _discount_content_prices">List: '+parseFloat(getItemInformation[1]).toFixed(2)+'</div>'+
							'<div class="_discount_content _discount_content_prices">Sell: '+parseFloat(getItemInformation[2]).toFixed(2)+'</div>'+
							'<div class="_discount_content _discount_content_prices">Current discount: $'+ parseFloat(getItemInformation[3]).toFixed(2) + ' | ' + parseInt(computeDisc) + '%</div>'+
						'</div>'+
						// '<div class="_discount_content_description">'+
						// 	'<h4>Subtract new discount of '+(sign == 'percent' ? typed_discount + '%' : '$' + typed_discount)+' <br>from List or Sell Price ?</h4>'+
						// '</div>'+
						'<form id="'+form+'">'+
							'<div class="_discont_content_btn_fn">'+
								'<button type="submit" class="btn btn-primary btn-lg" style="with:100% !important; margin:2px !important;">CHANGE DISCOUNT TO '+(sign == 'percent' ? typed_discount + '%' : '$' + parseFloat(typed_discount).toFixed(2) )+'</button>'+
								'<button id="_discount_content_sell_price" class="btn btn-primary btn-lg" style="with:100% !important; margin:2px !important;">ADD ANOTHER DISCOUNT OF '+(sign == 'percent' ? typed_discount + '%' : '$' + parseFloat(typed_discount).toFixed(2))+' </button>'+
							'</div>'+
							'<input type="hidden" id="typed_discount_value" value="'+typed_discount+'"'+
						'</form>'+
					'</div>'+
				'</div>'
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var populateDiscountReceiptContentWindow = (form, typed_discount, sign) => {
		var def = $.Deferred();
		var ReceiptDiscountView = $("#ReceiptDiscountView").text();
		var ReceiptTotalView = $("#ReceiptTotalView").text();
		var ReceiptSubTotalView = $("#ReceiptSubTotalView").text();
		ReceiptDiscountView = ReceiptDiscountView.replace("(","-").replace(")","");
		ReceiptTotalView = ReceiptTotalView.replace("(","-").replace(")","");
		ReceiptSubTotalView = ReceiptSubTotalView.replace("(","-").replace(")","");
		var computeDiscount = (parseFloat( ReceiptDiscountView ) /  (parseFloat( ReceiptDiscountView ) + parseFloat( ReceiptSubTotalView )) * 100);
		setTimeout(function(){
			// var gtotal = parseFloat( $("#ReceiptSubTotalView").text() ) + parseFloat( $("#ReceiptSubTotalView").text() );
			$("body").append(
				'<div id="discount_content" style="display:none; background: #144766; color: #EEE; box-shadow: 5px 5px 10px #000;">'+
					'<div id="discount_content_container" style="background: #144766; color:#EEE;">'+
						'<div class="_discount_content">'+
							// '<div class="_discount_content _discount_content_prices">Normal receipt total: $'+gtotal.toFixed(2)+'</div>'+
							'<div class="_discount_content _discount_content_prices">Receipt total: $ '+ ReceiptSubTotalView +'</div>'+
							'<div class="_discount_content _discount_content_prices">Current discount: $ '+ ReceiptDiscountView + '  |  '+( ReceiptSubTotalView == 0 ? "100" : computeDiscount.toFixed(2)) +'%</div>'+
							// '<div class="_discount_content _discount_content_prices">Current discount %: '+computeDiscount.toFixed(2)+'</div>'+
						'</div>'+
						'<br>'+
						// '<div class="_discount_content_description">'+
						// 	'<h4>Change existing discount to '+(sign == 'percent' ? typed_discount + '%' : '$' + typed_discount)+' <br>or add additional discount of '+(sign == 'percent' ? typed_discount + '%' : '$' + typed_discount)+'?</h4>'+
						// '</div>'+
						'<form id="'+form+'">'+
							'<div class="_discont_content_btn_fn_receipt">'+
								'<button type="submit" class="btn btn-primary btn-lg" style="with:100% !important; margin: 3px; !important;">CHANGE DISCOUNT TO '+(sign == 'percent' ? typed_discount + '%' : '$' + parseFloat(typed_discount).toFixed(2) )+'</button>'+
								'<button id="_discount_content_sell_price" class="btn btn-primary btn-lg" style="with:100% !important; margin:3px !important; '+(computeDiscount == 'Infinity' ? 'display:none;' : 'display:block;')+'">ADD ANOTHER DISCOUNT OF '+(sign == 'percent' ? typed_discount + '%' : '$' + parseFloat(typed_discount).toFixed(2))+' </button>'+
							'</div>'+
							'<input type="hidden" id="typed_discount_value" value="'+typed_discount+'"'+
						'</form>'+
					'</div>'+
				'</div>'
			);
			def.resolve();
		},100);
		return def.promise();
	}

	var WindowPopupDiscountContent = (titlediscount) => {
		var def = $.Deferred();
		setTimeout(function(){
			var OrderListWidth = ($(".orderedlist").width() + 3);
			$("#discount_content").jqxWindow({
				height: 295,
				minWidth: 450,
				isModal: true,
				theme: 'darkblue',
				showCloseButton: true,
				title: titlediscount,
				resizable: false,
				draggable: false,
				showAnimationDuration: 0,
				closeAnimationDuration: 0,
				position: { 
					x: OrderListWidth, y: 50 
				}	
			})
			$("#discount_content").jqxWindow('open');
			def.resolve();
		},100);
		return def.promise();
	}

	// Call this structure discount content
	var DiscountApply;
	var AccessToOpenDiscountContent = (form, title, typedisc, sign) => {
		populateDiscountItemContentWindow(form, typedisc, sign)
		.then(function(){
			WindowPopupDiscountContent(title)
			.then(function(){
				$('#discount_content').on('close',function(){
					$("#discount_content").jqxWindow('destroy');
					$("#discount_content").remove();
				})
			})
		})
		
	}

	var AccessToOpenDiscountReceipt = (form, title, typedisc, sign) => {
		populateDiscountReceiptContentWindow(form, typedisc, sign)
		.then(function(){
			WindowPopupDiscountContent(title)
			.then(function(){
				$('#discount_content').on('close',function(){
					$("#discount_content").jqxWindow('destroy');
					$("#discount_content").remove();
				})
			})
		})
	}

	$scope.DiscountAmountField = 0;
	$(document).on('submit', '#rediscount_item_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						if($scope.DiscountAmountField > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact your manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}
						AccessToOpenDiscountContent("item_line_discount_dollar_form_two", "Discount item dollar", $scope.DiscountAmountField, 'dollar');
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#discount_item_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var Unique = GlobalItemUnique.Unique;
						var EnterDiscountAmount = parseFloat($scope.DiscountAmountField).toFixed(2);
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+EnterDiscountAmount;
							postdata+="&DiscountType=Dollar";
						
						if(EnterDiscountAmount > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_item_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}
						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
							}else{
								var postDataDiscountSave="optiondiscount="+2;
									postDataDiscountSave+="&discountamount="+EnterDiscountAmount;
									postDataDiscountSave+="&unique="+Unique;
									postDataDiscountSave+="&discountunique="+DiscountUnique;
									postDataDiscountSave+="&discountname="+DiscountName;
								posData.DiscountItem(postDataDiscountSave)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										$("#dialog-numpad-passcode").jqxWindow('close');
										GlobalItemUnique = {};
										PoleDisplay(Unique);
									}else{
										$("#dialog-numpad-passcode").jqxWindow('close');
										var msg = "Discount must be less than the item amount";
										NumpadAlertClose('discount_item_dollar_alert', msg)
										.then(function(){
											WindowPopupAlert('Discount Item Dollar')
										});
									}
								}).then(function(){
									$('#barcode_search').focus();
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}

			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#rediscount_item_security_direct_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						if($scope.DiscountAmountField > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('remove_item_info', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}
						AccessToOpenDiscountContent("item_line_discount_"+(DiscountType == "Percent" ? "percent" : "dollar")+"_form_two", "Discount item percent", (DiscountType == 'Percent' ? parseInt(DiscountItemPrice) : parseFloat(DiscountItemPrice).toFixed(2)) , (DiscountType == 'Percent' ? "percent" : "dollar"));
						$("#dialog-numpad-passcode").jqxWindow('close');
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})	
		}
	})

	class Utility {
		construct() {
			this.receiptDiscountVal = 0;
		}

		ReDiscountVal = (paramVal) => this.receiptDiscountVal = paramVal;
	}

	$(document).on('submit', '#discount_item_security_direct_passcode', function(event){
		event.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var Unique = GlobalItemUnique.Unique;
						var DiscSel = $scope.DiscountInfoSelected;
							DiscountUnique 	   = DiscSel.split('=')[0];
							DiscountItemPrice  = DiscSel.split('=')[1];
							DiscountType	   = DiscSel.split('=')[2];
							DiscountName	   = DiscSel.split('=')[3];

						if(parseFloat(DiscountItemPrice) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_item_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+parseFloat(DiscountItemPrice).toFixed(2);
							postdata+="&DiscountType="+DiscountType;
							postdata+="&DiscountApply="+(DiscountType == 'Percent' ? "Yes" : "No");
						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								if(DiscountType == 'Percent'){
									NewOptionDiscount = 1;
								}else if(DiscountType == 'Dollar'){
									NewOptionDiscount = 2;
								}
								
								NewDiscountAmount = DiscountItemPrice;
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
									$("#dialog-numpad-passcode").jqxWindow('close');
								})
							}else{
								if(DiscountType == 'Percent'){
									var DiscountAmount = DiscountItemPrice
									var postDataDiscountSave="optiondiscount="+1;
										postDataDiscountSave+="&discountamount="+DiscountAmount;
										postDataDiscountSave+="&unique="+Unique;
										postDataDiscountSave+="&discountunique="+DiscountUnique;
										postDataDiscountSave+="&discountname="+DiscountName;
										postDataDiscountSave+="&DiscountApply=Yes";
									posData.DiscountItem(postDataDiscountSave)
									.success(function(data){
										if(data.success == true){
											load_data(data);
											GlobalItemUnique = {};
											PoleDisplay(Unique);
										}else{
											$("#dialog-numpad-discount").jqxWindow('close'); 
											var msg = "Discount must be less than the item amount";
											NumpadAlertClose('discount_item_percent_alert', msg)
											.then(function(){
												WindowPopupAlert('Discount Item Percent')
											});
										}
										$("#barcode_search").focus();
									})
									$("#dialog-numpad-passcode").jqxWindow('close');
								}else if(DiscountType == 'Dollar'){
									var DiscountAmount = DiscountItemPrice
									var postDataDiscountSave="optiondiscount="+2;
										postDataDiscountSave+="&discountamount="+DiscountAmount;
										postDataDiscountSave+="&unique="+Unique;
										postDataDiscountSave+="&discountunique="+DiscountUnique;
										postDataDiscountSave+="&discountname="+DiscountName;
										postDataDiscountSave+="&DiscountApply=No";
									posData.DiscountItem(postDataDiscountSave)
									.success(function(data){
										if(data.success == true){
											load_data(data);
											GlobalItemUnique = {};
											PoleDisplay(Unique);
										}else{
											var msg = "Discount must be less than the item amount";
											NumpadAlertClose('discount_item_dollar_alert', msg)
											.then(function(){
												WindowPopupAlert('Discount Item Dollar')
											});
										}
										$("#barcode_search").focus();
									})
									$("#dialog-numpad-passcode").jqxWindow('close');
								}
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#discount_item_security_percent_passcode', function(event){
		event.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var Unique = GlobalItemUnique.Unique;
						var EnterDiscountAmount = $scope.DiscountAmountField;
						if(EnterDiscountAmount == ''){
							EnterDiscountAmount = 0.00;
						}

						NewDiscountAmount = EnterDiscountAmount;
						NewOptionDiscount = 1;
						var postdata ="ReceiptDetailsUnique="+Unique;
							postdata+="&NewPrice="+NewDiscountAmount;
							postdata+="&DiscountType=Percent";

						if(parseFloat(NewDiscountAmount) > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_item_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}


						posData.DiscountBelowCostPage2(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
							}else{
								var DiscountAmount = EnterDiscountAmount
								var postDataDiscountSave="optiondiscount="+1;
									postDataDiscountSave+="&discountamount="+DiscountAmount;
									postDataDiscountSave+="&unique="+Unique;
									postDataDiscountSave+="&discountunique="+DiscountUnique;
									postDataDiscountSave+="&discountname="+DiscountName;
								posData.DiscountItem(postDataDiscountSave)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										$("#dialog-numpad-passcode").jqxWindow('close');
										GlobalItemUnique = {};
										PoleDisplay(Unique);
									}else{
										$("#dialog-numpad-passcode").jqxWindow('close'); 
										var msg = "Discount must be less than the item amount";
										NumpadAlertClose('discount_item_percent_alert', msg)
										.then(function(){
											WindowPopupAlert('Discount Item Percent')
										});
									}
									$("#barcode_search").focus();
								})
							}
							$("#dialog-numpad-passcode").jqxWindow('close');
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#discount_dollar_receipt_security_direct_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;//$("#number_field").val();
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var DiscSel = $scope.DiscountInfoSelected
						DiscountUnique 	   	= DiscSel.split('=')[0];
						DiscountReceiptPrice= DiscSel.split('=')[1];
						DiscountType	   	= DiscSel.split('=')[2];
						DiscountName	   	= DiscSel.split('=')[5];

						var ReceiptDiscountPercentLimit = parseFloat(data.Limit);

						if( parseFloat(DiscountReceiptPrice) >  ReceiptDiscountPercentLimit){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_receipt_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						posData.getDiscountReceiptApplied()
						.success(function(resdata){
							if(resdata.result > 0){
								DiscountApply = "No";
								AccessToOpenDiscountReceipt('receipt_discount_dollar_form_two', 'Discount receipt dollar', DiscountReceiptPrice, 'dollar');
								
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{
								DiscountReceiptBelowCostSellPrice = DiscountReceiptPrice;
								
								var postdata ="NewPrice="+DiscountReceiptPrice;
									postdata+="&DiscountType="+DiscountType;
								posData.DiscountReceiptLineBelowCost(postdata)
								.success(function(data){
									if(data.belowcost){
										populateSellBelowCostWindow(data.html)
										.then(function(){
											WindowBelowCost(data.Description);
										})
										$("#dialog-numpad-passcode").jqxWindow('close');
									}else{
										var postdata ="DiscountType="+DiscountType;
											postdata+="&DiscountUnique="+DiscountUnique;
											postdata+="&discountamount="+DiscountReceiptPrice;
											postdata+="&discountname="+DiscountName;
										posData.ReceiptDiscount(postdata)
										.success(function(data){
											if(data.success == true){
												load_data(data);
												GlobalItemUnique = {};
												$("#dialog-numpad-passcode").jqxWindow('close');
												PoleDisplayTotal();
											}else{
												$("#dialog-numpad-passcode").jqxWindow('close'); 
												var msg = "Discount must be less than the total amount";
												NumpadAlertClose('discount_receipt_alert', msg)
												.then(function(){
													WindowPopupAlert('Receipt Discount Alert');
												})
											}
											$("#barcode_search").focus();
										})
									}
								})
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#discount_receipt_percent_security_direct_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var DiscSel = $scope.DiscountInfoSelected
						DiscountUnique 	   	= DiscSel.split('=')[0];
						DiscountReceiptPrice= DiscSel.split('=')[1];
						DiscountType	   	= DiscSel.split('=')[2];
						DiscountName	   	= DiscSel.split('=')[5];

						DiscountReceiptBelowCostSellPrice = DiscountReceiptPrice;
							
						var ReceiptDiscountPercentLimit = parseFloat(data.Limit);
						var ConvertDiscountAmount = DiscountReceiptPrice / 100;
						var ReceiptTotal = $("#amountdue_total").val();
						var ReceiptDiscount = (ConvertDiscountAmount * ReceiptTotal);
						
						if( parseFloat(ReceiptDiscount) >  ReceiptDiscountPercentLimit){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_receipt_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						posData.getDiscountReceiptApplied()
						.success(function(resdata){
							if(resdata.result > 0){
								DiscountApply = "No";
								AccessToOpenDiscountReceipt('receipt_discount_percent_form_two', 'Discount receipt percent', parseFloat(DiscountReceiptPrice).toFixed(2), 'percent');
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{
								var postdata ="NewPrice="+DiscountReceiptPrice;
									postdata+="&DiscountType="+DiscountType;
								posData.DiscountReceiptLineBelowCost(postdata)
								.success(function(data){
									if(data.belowcost){
										populateSellBelowCostWindow(data.html)
										.then(function(){
											WindowBelowCost(data.Description);
										})
										$("#dialog-numpad-passcode").jqxWindow('close');
									}else{
										var postdata ="DiscountType="+DiscountType;
											postdata+="&DiscountUnique="+DiscountUnique;
											postdata+="&discountamount="+DiscountReceiptPrice;
											postdata+="&discountname="+DiscountName;
										posData.ReceiptDiscount(postdata)
										.success(function(data){
											if(data.success == true){
												load_data(data);
												GlobalItemUnique = {};
												$("#dialog-numpad-passcode").jqxWindow('close');
												PoleDisplayTotal();
											}else{
												$("#dialog-numpad-passcode").jqxWindow('close'); 
												var msg = "Discount must be less than the total amount";
												NumpadAlertClose('discount_receipt_alert', msg)
												.then(function(){
													WindowPopupAlert('Receipt Discount Alert');
												})
											}
											$("#barcode_search").focus();
										})
									}
								})
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})
	

	$(document).on('submit', '#discount_receipt_dollar_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						
						if( parseFloat($scope.DiscountAmountField) >  parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_receipt_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}

						posData.getDiscountReceiptApplied()
						.success(function(resdata){
							if(resdata.result > 0){
								DiscountApply = "No";
								AccessToOpenDiscountReceipt('receipt_discount_dollar_form_two', 'Discount receipt dollar', $scope.DiscountAmountField, 'dollar');
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{

								var postdata ="NewPrice="+parseFloat($scope.DiscountAmountField).toFixed(2);
									postdata+="&DiscountType=Dollar";
									posData.DiscountReceiptLineBelowCost(postdata)
								.success(function(data){
									if(data.belowcost){
										populateSellBelowCostWindow(data.html)
										.then(function(){
											WindowBelowCost(data.Description);
										})
										$("#dialog-numpad-passcode").jqxWindow('close');
									}else{
										var DiscountAmount = parseFloat($scope.DiscountAmountField).toFixed(2);
										var postdata ="DiscountType=Dollar";
											postdata+="&DiscountUnique="+DiscountUnique;
											postdata+="&discountamount="+DiscountAmount;
											postdata+="&discountname="+DiscountName;
										posData.ReceiptDiscount(postdata)
										.success(function(data){
											if(data.success == true){
												load_data(data);
												GlobalItemUnique = {};
												$("#dialog-numpad-passcode").jqxWindow('close');
												PoleDisplayTotal();
											}else{
												$("#dialog-numpad-passcode").jqxWindow('close'); 
												var msg = "Discount must be less than the total amount";
												NumpadAlertClose('discount_receipt_alert', msg)
												.then(function(){
													WindowPopupAlert('Receipt Discount Alert');
												})
											}
										}).then(function(){
											$("#barcode_search").focus();
										})
									}
								})

							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	$(document).on('submit', '#discount_receipt_percent_security_passcode', function(e){
		e.preventDefault();
		var CardRead = $("#number_field").val();
		var CRP = new CardReaderParser(CardRead);
		if(CRP.converted){
			var passcode = CRP.converted;
			var hashpasscode = CryptoJS.MD5(passcode);
			var postdata ="passcode="+hashpasscode;
				postdata+="&FunctionButton="+$scope.FunctionButton;
			posData.EnterPassCode(postdata)
			.success(function(data){
				if(data.success == true){
					if(data.login == true){
						var EnterDiscountAmount = $scope.DiscountAmountField;
						var ConvertDiscountAmount = EnterDiscountAmount / 100;
						var ReceiptSubTotal = ReceiptDiscountSubTotal;
						var ReceiptDiscount = (ConvertDiscountAmount * ReceiptSubTotal);

						if(ReceiptDiscount > parseFloat(data.Limit) && parseFloat(data.Limit) != 0){
							var msg ="Sorry, you reached the limit discount amount.<br>";
								msg+="<br>Please contact the manager.";
							NumpadAlertOk('discount_item_security_msg', msg)
							.then(function(){
								WindowPopupAlert('Info');
							})
							$("#dialog-numpad-passcode").jqxWindow('close');
							return;
						}
						console.log("jjj", $scope.DiscountAmountField);
						var postdata ="&NewPrice="+parseFloat($scope.DiscountAmountField).toFixed(2);
							postdata+="&DiscountType="+DiscountType;
						posData.DiscountReceiptLineBelowCost(postdata)
						.success(function(data){
							if(data.belowcost){
								populateSellBelowCostWindow(data.html)
								.then(function(){
									WindowBelowCost(data.Description);
								})
								$("#dialog-numpad-passcode").jqxWindow('close');
							}else{
								var DiscountAmount = $scope.DiscountAmountField;
								var postdata="DiscountType="+DiscountType;
									postdata+="&DiscountUnique="+DiscountUnique;
									postdata+="&discountamount="+DiscountAmount;
									postdata+="&discountname="+DiscountName;
								posData.ReceiptDiscount(postdata)
								.success(function(data){
									if(data.success == true){
										load_data(data);
										GlobalItemUnique = {};
										$("#dialog-numpad-passcode").jqxWindow('close');
										PoleDisplayTotal();
									}else{
										$("#dialog-numpad-passcode").jqxWindow('close'); 
										var msg = "Discount must be less than the total amount";
										NumpadAlertClose('discount_receipt_alert', msg)
										.then(function(){
											WindowPopupAlert('Receipt Discount Alert');
										})
									}

									$("#barcode_search").focus();
								})
							}
						})
					}else{
						$("#dialog-numpad-passcode").jqxWindow('close');
						NumpadAlertOk('remove_item_info', data.msg)
						.then(function(){
							WindowPopupAlert('Info');
						})
					}
				}else{
					$("#dialog-numpad-passcode").jqxWindow('close');
					NumpadAlertOk('remove_item_info', data.msg)
					.then(function(){
						WindowPopupAlert('Info');
					})
				}
			})
		}else{
			$("#dialog-numpad-passcode").jqxWindow('close');
			var msg = "Passcode cannot be empty";
			NumpadAlertOk('remove_item_info', msg)
			.then(function(){
				WindowPopupAlert('Info');
			})
		}
	})

	// setTimeout(function(){
	// 	AccessToOpenDiscountContent("Sample Discount");
	// },1000);

	/*
	|-----------------------------------------------------------|
	| END CONTROLLER
	|-----------------------------------------------------------|
	*/
}])
.directive('focusMe', function() {
	return {
		link: function(scope, element, attrs) {
			scope.$watch(attrs.focusMe, function(value) {
				if(value === true) {
					element[0].focus();
					scope[attrs.focusMe] = false;
				}
			});
		}
	};
})
.directive('focusOn', function() {
	return function(scope, elem, attr) {
		scope.$on(attr.focusOn, function(e) {
			elem[0].focus();
		});
	};
})
.directive('ngEnter', function () {
	return function (scope, element, attrs) {
		element.bind("keypress", function (event) {
			if(event.which === 13) {
				scope.$apply(function (){
						scope.$eval(attrs.ngEnter);
				});
				event.preventDefault();
			}
		});
	};
})
.directive('selectOnClick', ['$window', function ($window) {
	return {
		restrict: 'A',
		link: function (scope, element, attrs) {
			element.on('click', function () {
				if (!$window.getSelection().toString()) {
					// Required for mobile Safari
					this.setSelectionRange(0, this.value.length)
				}
			});
		}
	};
}])
.directive('detectChange', function () {
	return {
		restrict: 'A',
		link: function (scope, element, attrs) {
			scope.$watch(attrs.ngModel, function (v) {
			});
		}
	};
})
.directive('modalfit', function () {
	return {
		template: '<div class="modal fade">' +
			'<div class="modal-dialog modaldiscitem">' +
			'<div class="modal-content">' +
				'<div class="modal-header">' +
				'<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
				'<h4 class="modal-title">{{ title }}</h4>' +
				'</div>' +
				'<div class="modal-body" ng-transclude></div>' +
			'</div>' +
			'</div>' +
		'</div>',
		restrict: 'E',
		transclude: true,
		replace:true,
		scope:true,
		link: function postLink(scope, element, attrs) {
		scope.title = attrs.title;

		scope.$watch(attrs.visible, function(value){
			if(value == true)
			$(element).modal('show');
			else
			$(element).modal('hide');
		});

		$(element).on('shown.bs.modal', function(){
			scope.$apply(function(){
				scope.$parent[attrs.visible] = true;
			});
		});

		$(element).on('hidden.bs.modal', function(){
			scope.$apply(function(){
				scope.$parent[attrs.visible] = false;
			});
		});
		}
	};
})
.directive('modalwide', function () {
	return {
		template: '<div class="modal fade">' +
			'<div class="modal-dialog modalwide">' +
			'<div class="modal-content">' +
				'<div class="modal-header">' +
				'<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
				'<h4 class="modal-title">{{ title }}</h4>' +
				'</div>' +
				'<div class="modal-body" ng-transclude></div>' +
			'</div>' +
			'</div>' +
		'</div>',
		restrict: 'E',
		transclude: true,
		replace:true,
		scope:true,
		link: function postLink(scope, element, attrs) {
		scope.title = attrs.title;

		scope.$watch(attrs.visible, function(value){
			if(value == true)
			$(element).modal('show');
			else
			$(element).modal('hide');
		});

		$(element).on('shown.bs.modal', function(){
			scope.$apply(function(){
			scope.$parent[attrs.visible] = true;
			});
		});

		$(element).on('hidden.bs.modal', function(){
			scope.$apply(function(){
			scope.$parent[attrs.visible] = false;
			});
		});
		}
	};
})

.directive('modalmedium', function () {
	return {
		template: '<div class="modal fade">' +
			'<div class="modal-dialog modalmedium">' +
			'<div class="modal-content">' +
				'<div class="modal-header">' +
				'<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
				'<h4 class="modal-title">{{ title }}</h4>' +
				'</div>' +
				'<div class="modal-body" ng-transclude></div>' +
			'</div>' +
			'</div>' +
		'</div>',
		restrict: 'E',
		transclude: true,
		replace:true,
		scope:true,
		link: function postLink(scope, element, attrs) {
		scope.title = attrs.title;

		scope.$watch(attrs.visible, function(value){
			if(value == true)
			$(element).modal('show');
			else
			$(element).modal('hide');
		});

		$(element).on('shown.bs.modal', function(){
			scope.$apply(function(){
			scope.$parent[attrs.visible] = true;
			});
		});

		$(element).on('hidden.bs.modal', function(){
			scope.$apply(function(){
			scope.$parent[attrs.visible] = false;
			});
		});
		}
	};
})

.directive('bootstrapSwitch', [
	function() {
		return {
			restrict: 'A',
			require: '?ngModel',
			link: function(scope, element, attrs, ngModel) {
				element.bootstrapSwitch();

				element.on('switchChange.bootstrapSwitch', function(event, state) {
					if (ngModel) {
						scope.$apply(function() {
							ngModel.$setViewValue(state);
							DiscountVal.discountitemoption = state;
						});
					}
				});

				scope.$watch(attrs.ngModel, function(newValue, oldValue) {
					if (newValue) {
						element.bootstrapSwitch('state', true, true);
					} else {
						element.bootstrapSwitch('state', false, true);
					}
				});
			}
		};
	}
]);
})();
